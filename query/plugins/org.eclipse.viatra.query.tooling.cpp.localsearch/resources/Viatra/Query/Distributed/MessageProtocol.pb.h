// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageProtocol.proto

#ifndef PROTOBUF_MessageProtocol_2eproto__INCLUDED
#define PROTOBUF_MessageProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageProtocol_2eproto();
void protobuf_AssignDesc_MessageProtocol_2eproto();
void protobuf_ShutdownFile_MessageProtocol_2eproto();

class QueryServerRequest;
class QueryServerResponse;

enum QueryServerMsgType {
  START_QUERY = 0,
  TERMINATE_QUERY = 1,
  CONTINUE_QUERY = 2,
  QueryServerMsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QueryServerMsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QueryServerMsgType_IsValid(int value);
const QueryServerMsgType QueryServerMsgType_MIN = START_QUERY;
const QueryServerMsgType QueryServerMsgType_MAX = CONTINUE_QUERY;
const int QueryServerMsgType_ARRAYSIZE = QueryServerMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryServerMsgType_descriptor();
inline const ::std::string& QueryServerMsgType_Name(QueryServerMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryServerMsgType_descriptor(), value);
}
inline bool QueryServerMsgType_Parse(
    const ::std::string& name, QueryServerMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryServerMsgType>(
    QueryServerMsgType_descriptor(), name, value);
}
// ===================================================================

class QueryServerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryServerRequest) */ {
 public:
  QueryServerRequest();
  virtual ~QueryServerRequest();

  QueryServerRequest(const QueryServerRequest& from);

  inline QueryServerRequest& operator=(const QueryServerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryServerRequest& default_instance();

  enum MsgCase {
    kA = 2,
    kX = 3,
    MSG_NOT_SET = 0,
  };

  void Swap(QueryServerRequest* other);

  // implements Message ----------------------------------------------

  inline QueryServerRequest* New() const { return New(NULL); }

  QueryServerRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryServerRequest& from);
  void MergeFrom(const QueryServerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryServerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 rqID = 1;
  void clear_rqid();
  static const int kRqIDFieldNumber = 1;
  ::google::protobuf::int64 rqid() const;
  void set_rqid(::google::protobuf::int64 value);

  // optional string a = 2;
  private:
  bool has_a() const;
  public:
  void clear_a();
  static const int kAFieldNumber = 2;
  const ::std::string& a() const;
  void set_a(const ::std::string& value);
  void set_a(const char* value);
  void set_a(const char* value, size_t size);
  ::std::string* mutable_a();
  ::std::string* release_a();
  void set_allocated_a(::std::string* a);

  // optional int32 x = 3;
  private:
  bool has_x() const;
  public:
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:QueryServerRequest)
 private:
  inline void set_has_a();
  inline void set_has_x();

  inline bool has_msg() const;
  void clear_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 rqid_;
  union MsgUnion {
    MsgUnion() {}
    ::google::protobuf::internal::ArenaStringPtr a_;
    ::google::protobuf::int32 x_;
  } msg_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_MessageProtocol_2eproto();
  friend void protobuf_AssignDesc_MessageProtocol_2eproto();
  friend void protobuf_ShutdownFile_MessageProtocol_2eproto();

  void InitAsDefaultInstance();
  static QueryServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryServerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryServerResponse) */ {
 public:
  QueryServerResponse();
  virtual ~QueryServerResponse();

  QueryServerResponse(const QueryServerResponse& from);

  inline QueryServerResponse& operator=(const QueryServerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryServerResponse& default_instance();

  void Swap(QueryServerResponse* other);

  // implements Message ----------------------------------------------

  inline QueryServerResponse* New() const { return New(NULL); }

  QueryServerResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryServerResponse& from);
  void MergeFrom(const QueryServerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryServerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 rqID = 1;
  void clear_rqid();
  static const int kRqIDFieldNumber = 1;
  ::google::protobuf::int64 rqid() const;
  void set_rqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:QueryServerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 rqid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MessageProtocol_2eproto();
  friend void protobuf_AssignDesc_MessageProtocol_2eproto();
  friend void protobuf_ShutdownFile_MessageProtocol_2eproto();

  void InitAsDefaultInstance();
  static QueryServerResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryServerRequest

// optional int64 rqID = 1;
inline void QueryServerRequest::clear_rqid() {
  rqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QueryServerRequest::rqid() const {
  // @@protoc_insertion_point(field_get:QueryServerRequest.rqID)
  return rqid_;
}
inline void QueryServerRequest::set_rqid(::google::protobuf::int64 value) {
  
  rqid_ = value;
  // @@protoc_insertion_point(field_set:QueryServerRequest.rqID)
}

// optional string a = 2;
inline bool QueryServerRequest::has_a() const {
  return msg_case() == kA;
}
inline void QueryServerRequest::set_has_a() {
  _oneof_case_[0] = kA;
}
inline void QueryServerRequest::clear_a() {
  if (has_a()) {
    msg_.a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_msg();
  }
}
inline const ::std::string& QueryServerRequest::a() const {
  // @@protoc_insertion_point(field_get:QueryServerRequest.a)
  if (has_a()) {
    return msg_.a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void QueryServerRequest::set_a(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:QueryServerRequest.a)
  if (!has_a()) {
    clear_msg();
    set_has_a();
    msg_.a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_.a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryServerRequest.a)
}
inline void QueryServerRequest::set_a(const char* value) {
  if (!has_a()) {
    clear_msg();
    set_has_a();
    msg_.a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_.a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryServerRequest.a)
}
inline void QueryServerRequest::set_a(const char* value, size_t size) {
  if (!has_a()) {
    clear_msg();
    set_has_a();
    msg_.a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_.a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryServerRequest.a)
}
inline ::std::string* QueryServerRequest::mutable_a() {
  if (!has_a()) {
    clear_msg();
    set_has_a();
    msg_.a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:QueryServerRequest.a)
  return msg_.a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryServerRequest::release_a() {
  // @@protoc_insertion_point(field_release:QueryServerRequest.a)
  if (has_a()) {
    clear_has_msg();
    return msg_.a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void QueryServerRequest::set_allocated_a(::std::string* a) {
  if (!has_a()) {
    msg_.a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_msg();
  if (a != NULL) {
    set_has_a();
    msg_.a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        a);
  }
  // @@protoc_insertion_point(field_set_allocated:QueryServerRequest.a)
}

// optional int32 x = 3;
inline bool QueryServerRequest::has_x() const {
  return msg_case() == kX;
}
inline void QueryServerRequest::set_has_x() {
  _oneof_case_[0] = kX;
}
inline void QueryServerRequest::clear_x() {
  if (has_x()) {
    msg_.x_ = 0;
    clear_has_msg();
  }
}
inline ::google::protobuf::int32 QueryServerRequest::x() const {
  // @@protoc_insertion_point(field_get:QueryServerRequest.x)
  if (has_x()) {
    return msg_.x_;
  }
  return 0;
}
inline void QueryServerRequest::set_x(::google::protobuf::int32 value) {
  if (!has_x()) {
    clear_msg();
    set_has_x();
  }
  msg_.x_ = value;
  // @@protoc_insertion_point(field_set:QueryServerRequest.x)
}

inline bool QueryServerRequest::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void QueryServerRequest::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline QueryServerRequest::MsgCase QueryServerRequest::msg_case() const {
  return QueryServerRequest::MsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryServerResponse

// optional int64 rqID = 1;
inline void QueryServerResponse::clear_rqid() {
  rqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QueryServerResponse::rqid() const {
  // @@protoc_insertion_point(field_get:QueryServerResponse.rqID)
  return rqid_;
}
inline void QueryServerResponse::set_rqid(::google::protobuf::int64 value) {
  
  rqid_ = value;
  // @@protoc_insertion_point(field_set:QueryServerResponse.rqID)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::QueryServerMsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::QueryServerMsgType>() {
  return ::QueryServerMsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageProtocol_2eproto__INCLUDED
