// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB_DistributedQueries.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PB_DistributedQueries.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousMatchSet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PB_5fDistributedQueries_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PB_5fDistributedQueries_2eproto() {
  protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PB_DistributedQueries.proto");
  GOOGLE_CHECK(file != NULL);
  PB_IsDangerousFrame_0_descriptor_ = file->message_type(0);
  static const int PB_IsDangerousFrame_0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _3_),
  };
  PB_IsDangerousFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousFrame_0_descriptor_,
      PB_IsDangerousFrame_0::default_instance_,
      PB_IsDangerousFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _is_default_instance_));
  PB_IsDangerousFrame_0Vector_descriptor_ = file->message_type(1);
  static const int PB_IsDangerousFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0Vector, frames_),
  };
  PB_IsDangerousFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousFrame_0Vector_descriptor_,
      PB_IsDangerousFrame_0Vector::default_instance_,
      PB_IsDangerousFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0Vector, _is_default_instance_));
  PB_IsDangerousMatch_descriptor_ = file->message_type(2);
  static const int PB_IsDangerousMatch_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, segment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, turnout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, train_),
  };
  PB_IsDangerousMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousMatch_descriptor_,
      PB_IsDangerousMatch::default_instance_,
      PB_IsDangerousMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, _is_default_instance_));
  PB_IsDangerousMatchSet_descriptor_ = file->message_type(3);
  static const int PB_IsDangerousMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatchSet, matches_),
  };
  PB_IsDangerousMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousMatchSet_descriptor_,
      PB_IsDangerousMatchSet::default_instance_,
      PB_IsDangerousMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatchSet, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PB_5fDistributedQueries_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousFrame_0_descriptor_, &PB_IsDangerousFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousFrame_0Vector_descriptor_, &PB_IsDangerousFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousMatch_descriptor_, &PB_IsDangerousMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousMatchSet_descriptor_, &PB_IsDangerousMatchSet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PB_5fDistributedQueries_2eproto() {
  delete PB_IsDangerousFrame_0::default_instance_;
  delete PB_IsDangerousFrame_0_reflection_;
  delete PB_IsDangerousFrame_0Vector::default_instance_;
  delete PB_IsDangerousFrame_0Vector_reflection_;
  delete PB_IsDangerousMatch::default_instance_;
  delete PB_IsDangerousMatch_reflection_;
  delete PB_IsDangerousMatchSet::default_instance_;
  delete PB_IsDangerousMatchSet_reflection_;
}

void protobuf_AddDesc_PB_5fDistributedQueries_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_PB_5fDistributedQueries_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033PB_DistributedQueries.proto\"G\n\025PB_IsDa"
    "ngerousFrame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\022\n"
    "\n\002_2\030\003 \001(\005\022\n\n\002_3\030\004 \001(\005\"E\n\033PB_IsDangerous"
    "Frame_0Vector\022&\n\006frames\030\001 \003(\0132\026.PB_IsDan"
    "gerousFrame_0\"F\n\023PB_IsDangerousMatch\022\017\n\007"
    "segment\030\001 \001(\005\022\017\n\007turnout\030\002 \001(\005\022\r\n\005train\030"
    "\003 \001(\005\"\?\n\026PB_IsDangerousMatchSet\022%\n\007match"
    "es\030\001 \003(\0132\024.PB_IsDangerousMatchb\006proto3", 318);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PB_DistributedQueries.proto", &protobuf_RegisterTypes);
  PB_IsDangerousFrame_0::default_instance_ = new PB_IsDangerousFrame_0();
  PB_IsDangerousFrame_0Vector::default_instance_ = new PB_IsDangerousFrame_0Vector();
  PB_IsDangerousMatch::default_instance_ = new PB_IsDangerousMatch();
  PB_IsDangerousMatchSet::default_instance_ = new PB_IsDangerousMatchSet();
  PB_IsDangerousFrame_0::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousMatch::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousMatchSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PB_5fDistributedQueries_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PB_5fDistributedQueries_2eproto {
  StaticDescriptorInitializer_PB_5fDistributedQueries_2eproto() {
    protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  }
} static_descriptor_initializer_PB_5fDistributedQueries_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousFrame_0::k0FieldNumber;
const int PB_IsDangerousFrame_0::k1FieldNumber;
const int PB_IsDangerousFrame_0::k2FieldNumber;
const int PB_IsDangerousFrame_0::k3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousFrame_0::PB_IsDangerousFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousFrame_0)
}

void PB_IsDangerousFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousFrame_0::PB_IsDangerousFrame_0(const PB_IsDangerousFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousFrame_0)
}

void PB_IsDangerousFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
}

PB_IsDangerousFrame_0::~PB_IsDangerousFrame_0() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousFrame_0)
  SharedDtor();
}

void PB_IsDangerousFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousFrame_0_descriptor_;
}

const PB_IsDangerousFrame_0& PB_IsDangerousFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousFrame_0* PB_IsDangerousFrame_0::default_instance_ = NULL;

PB_IsDangerousFrame_0* PB_IsDangerousFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousFrame_0* n = new PB_IsDangerousFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_IsDangerousFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_IsDangerousFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _3_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_IsDangerousFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousFrame_0)
  return false;
#undef DO_
}

void PB_IsDangerousFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousFrame_0)
}

::google::protobuf::uint8* PB_IsDangerousFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousFrame_0)
  return target;
}

int PB_IsDangerousFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousFrame_0)
    MergeFrom(*source);
  }
}

void PB_IsDangerousFrame_0::MergeFrom(const PB_IsDangerousFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
}

void PB_IsDangerousFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousFrame_0::CopyFrom(const PB_IsDangerousFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousFrame_0::IsInitialized() const {

  return true;
}

void PB_IsDangerousFrame_0::Swap(PB_IsDangerousFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousFrame_0::InternalSwap(PB_IsDangerousFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousFrame_0_descriptor_;
  metadata.reflection = PB_IsDangerousFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousFrame_0

// optional int32 _0 = 1;
void PB_IsDangerousFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._0)
  return _0_;
}
 void PB_IsDangerousFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._0)
}

// optional int32 _1 = 2;
void PB_IsDangerousFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._1)
  return _1_;
}
 void PB_IsDangerousFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._1)
}

// optional int32 _2 = 3;
void PB_IsDangerousFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._2)
  return _2_;
}
 void PB_IsDangerousFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._2)
}

// optional int32 _3 = 4;
void PB_IsDangerousFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._3)
  return _3_;
}
 void PB_IsDangerousFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousFrame_0Vector::PB_IsDangerousFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousFrame_0Vector)
}

void PB_IsDangerousFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousFrame_0Vector::PB_IsDangerousFrame_0Vector(const PB_IsDangerousFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousFrame_0Vector)
}

void PB_IsDangerousFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsDangerousFrame_0Vector::~PB_IsDangerousFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousFrame_0Vector)
  SharedDtor();
}

void PB_IsDangerousFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousFrame_0Vector_descriptor_;
}

const PB_IsDangerousFrame_0Vector& PB_IsDangerousFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousFrame_0Vector* PB_IsDangerousFrame_0Vector::default_instance_ = NULL;

PB_IsDangerousFrame_0Vector* PB_IsDangerousFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousFrame_0Vector* n = new PB_IsDangerousFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousFrame_0Vector)
  frames_.Clear();
}

bool PB_IsDangerousFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsDangerousFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousFrame_0Vector)
  return false;
#undef DO_
}

void PB_IsDangerousFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousFrame_0Vector)
  // repeated .PB_IsDangerousFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousFrame_0Vector)
}

::google::protobuf::uint8* PB_IsDangerousFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousFrame_0Vector)
  // repeated .PB_IsDangerousFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousFrame_0Vector)
  return target;
}

int PB_IsDangerousFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousFrame_0Vector)
  int total_size = 0;

  // repeated .PB_IsDangerousFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_IsDangerousFrame_0Vector::MergeFrom(const PB_IsDangerousFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_IsDangerousFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousFrame_0Vector::CopyFrom(const PB_IsDangerousFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_IsDangerousFrame_0Vector::Swap(PB_IsDangerousFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousFrame_0Vector::InternalSwap(PB_IsDangerousFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousFrame_0Vector_descriptor_;
  metadata.reflection = PB_IsDangerousFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousFrame_0Vector

// repeated .PB_IsDangerousFrame_0 frames = 1;
int PB_IsDangerousFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_IsDangerousFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_IsDangerousFrame_0& PB_IsDangerousFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_IsDangerousFrame_0* PB_IsDangerousFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsDangerousFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_IsDangerousFrame_0* PB_IsDangerousFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_IsDangerousFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsDangerousFrame_0 >*
PB_IsDangerousFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsDangerousFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsDangerousFrame_0 >&
PB_IsDangerousFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_IsDangerousFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousMatch::kSegmentFieldNumber;
const int PB_IsDangerousMatch::kTurnoutFieldNumber;
const int PB_IsDangerousMatch::kTrainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousMatch::PB_IsDangerousMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousMatch)
}

void PB_IsDangerousMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousMatch::PB_IsDangerousMatch(const PB_IsDangerousMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousMatch)
}

void PB_IsDangerousMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  segment_ = 0;
  turnout_ = 0;
  train_ = 0;
}

PB_IsDangerousMatch::~PB_IsDangerousMatch() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousMatch)
  SharedDtor();
}

void PB_IsDangerousMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousMatch_descriptor_;
}

const PB_IsDangerousMatch& PB_IsDangerousMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousMatch* PB_IsDangerousMatch::default_instance_ = NULL;

PB_IsDangerousMatch* PB_IsDangerousMatch::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousMatch* n = new PB_IsDangerousMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_IsDangerousMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_IsDangerousMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(segment_, train_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_IsDangerousMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 segment = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_turnout;
        break;
      }

      // optional int32 turnout = 2;
      case 2: {
        if (tag == 16) {
         parse_turnout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_train;
        break;
      }

      // optional int32 train = 3;
      case 3: {
        if (tag == 24) {
         parse_train:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousMatch)
  return false;
#undef DO_
}

void PB_IsDangerousMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousMatch)
  // optional int32 segment = 1;
  if (this->segment() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->segment(), output);
  }

  // optional int32 turnout = 2;
  if (this->turnout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->turnout(), output);
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->train(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousMatch)
}

::google::protobuf::uint8* PB_IsDangerousMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousMatch)
  // optional int32 segment = 1;
  if (this->segment() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->segment(), target);
  }

  // optional int32 turnout = 2;
  if (this->turnout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->turnout(), target);
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->train(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousMatch)
  return target;
}

int PB_IsDangerousMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousMatch)
  int total_size = 0;

  // optional int32 segment = 1;
  if (this->segment() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment());
  }

  // optional int32 turnout = 2;
  if (this->turnout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnout());
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->train());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousMatch)
    MergeFrom(*source);
  }
}

void PB_IsDangerousMatch::MergeFrom(const PB_IsDangerousMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.segment() != 0) {
    set_segment(from.segment());
  }
  if (from.turnout() != 0) {
    set_turnout(from.turnout());
  }
  if (from.train() != 0) {
    set_train(from.train());
  }
}

void PB_IsDangerousMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousMatch::CopyFrom(const PB_IsDangerousMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousMatch::IsInitialized() const {

  return true;
}

void PB_IsDangerousMatch::Swap(PB_IsDangerousMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousMatch::InternalSwap(PB_IsDangerousMatch* other) {
  std::swap(segment_, other->segment_);
  std::swap(turnout_, other->turnout_);
  std::swap(train_, other->train_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousMatch_descriptor_;
  metadata.reflection = PB_IsDangerousMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousMatch

// optional int32 segment = 1;
void PB_IsDangerousMatch::clear_segment() {
  segment_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousMatch::segment() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatch.segment)
  return segment_;
}
 void PB_IsDangerousMatch::set_segment(::google::protobuf::int32 value) {
  
  segment_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousMatch.segment)
}

// optional int32 turnout = 2;
void PB_IsDangerousMatch::clear_turnout() {
  turnout_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousMatch::turnout() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatch.turnout)
  return turnout_;
}
 void PB_IsDangerousMatch::set_turnout(::google::protobuf::int32 value) {
  
  turnout_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousMatch.turnout)
}

// optional int32 train = 3;
void PB_IsDangerousMatch::clear_train() {
  train_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousMatch::train() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatch.train)
  return train_;
}
 void PB_IsDangerousMatch::set_train(::google::protobuf::int32 value) {
  
  train_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousMatch.train)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousMatchSet::PB_IsDangerousMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousMatchSet)
}

void PB_IsDangerousMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousMatchSet::PB_IsDangerousMatchSet(const PB_IsDangerousMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousMatchSet)
}

void PB_IsDangerousMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsDangerousMatchSet::~PB_IsDangerousMatchSet() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousMatchSet)
  SharedDtor();
}

void PB_IsDangerousMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousMatchSet_descriptor_;
}

const PB_IsDangerousMatchSet& PB_IsDangerousMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousMatchSet* PB_IsDangerousMatchSet::default_instance_ = NULL;

PB_IsDangerousMatchSet* PB_IsDangerousMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousMatchSet* n = new PB_IsDangerousMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousMatchSet)
  matches_.Clear();
}

bool PB_IsDangerousMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsDangerousMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousMatchSet)
  return false;
#undef DO_
}

void PB_IsDangerousMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousMatchSet)
  // repeated .PB_IsDangerousMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousMatchSet)
}

::google::protobuf::uint8* PB_IsDangerousMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousMatchSet)
  // repeated .PB_IsDangerousMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousMatchSet)
  return target;
}

int PB_IsDangerousMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousMatchSet)
  int total_size = 0;

  // repeated .PB_IsDangerousMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousMatchSet)
    MergeFrom(*source);
  }
}

void PB_IsDangerousMatchSet::MergeFrom(const PB_IsDangerousMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_IsDangerousMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousMatchSet::CopyFrom(const PB_IsDangerousMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousMatchSet::IsInitialized() const {

  return true;
}

void PB_IsDangerousMatchSet::Swap(PB_IsDangerousMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousMatchSet::InternalSwap(PB_IsDangerousMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousMatchSet_descriptor_;
  metadata.reflection = PB_IsDangerousMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousMatchSet

// repeated .PB_IsDangerousMatch matches = 1;
int PB_IsDangerousMatchSet::matches_size() const {
  return matches_.size();
}
void PB_IsDangerousMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_IsDangerousMatch& PB_IsDangerousMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatchSet.matches)
  return matches_.Get(index);
}
::PB_IsDangerousMatch* PB_IsDangerousMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsDangerousMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_IsDangerousMatch* PB_IsDangerousMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_IsDangerousMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsDangerousMatch >*
PB_IsDangerousMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsDangerousMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsDangerousMatch >&
PB_IsDangerousMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_IsDangerousMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
