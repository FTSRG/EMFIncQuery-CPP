// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB_DerivedInput.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PB_DerivedInput.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_FrozenStateAPIMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_FrozenStateAPIMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_FrozenStateAPIMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_FrozenStateAPIMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NearByFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NearByFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NearByFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NearByFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NearByMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NearByMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NearByMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NearByMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_OperationalStateAPIFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_OperationalStateAPIFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_OperationalStateAPIFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_OperationalStateAPIFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_OperationalStateAPIMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_OperationalStateAPIMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_OperationalStateAPIMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_OperationalStateAPIMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_FrozenStateAPIFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_FrozenStateAPIFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_FrozenStateAPIFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_FrozenStateAPIFrame_0Vector_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PB_5fDerivedInput_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PB_5fDerivedInput_2eproto() {
  protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PB_DerivedInput.proto");
  GOOGLE_CHECK(file != NULL);
  PB_FrozenStateAPIMatch_descriptor_ = file->message_type(0);
  static const int PB_FrozenStateAPIMatch_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, turnout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, turnoutid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, frozen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, stateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, turnouttemp_),
  };
  PB_FrozenStateAPIMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_FrozenStateAPIMatch_descriptor_,
      PB_FrozenStateAPIMatch::default_instance_,
      PB_FrozenStateAPIMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_FrozenStateAPIMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatch, _is_default_instance_));
  PB_FrozenStateAPIMatchSet_descriptor_ = file->message_type(1);
  static const int PB_FrozenStateAPIMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatchSet, matches_),
  };
  PB_FrozenStateAPIMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_FrozenStateAPIMatchSet_descriptor_,
      PB_FrozenStateAPIMatchSet::default_instance_,
      PB_FrozenStateAPIMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_FrozenStateAPIMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIMatchSet, _is_default_instance_));
  PB_NearByFrame_0_descriptor_ = file->message_type(2);
  static const int PB_NearByFrame_0_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _12_),
  };
  PB_NearByFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NearByFrame_0_descriptor_,
      PB_NearByFrame_0::default_instance_,
      PB_NearByFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NearByFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0, _is_default_instance_));
  PB_NearByFrame_0Vector_descriptor_ = file->message_type(3);
  static const int PB_NearByFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0Vector, frames_),
  };
  PB_NearByFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NearByFrame_0Vector_descriptor_,
      PB_NearByFrame_0Vector::default_instance_,
      PB_NearByFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NearByFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByFrame_0Vector, _is_default_instance_));
  PB_NearByMatch_descriptor_ = file->message_type(4);
  static const int PB_NearByMatch_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, robotpart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, robotpartid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, train_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, trainid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, segid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, robx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, roby_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, robz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, segx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, segy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, segz_),
  };
  PB_NearByMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NearByMatch_descriptor_,
      PB_NearByMatch::default_instance_,
      PB_NearByMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NearByMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatch, _is_default_instance_));
  PB_NearByMatchSet_descriptor_ = file->message_type(5);
  static const int PB_NearByMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatchSet, matches_),
  };
  PB_NearByMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NearByMatchSet_descriptor_,
      PB_NearByMatchSet::default_instance_,
      PB_NearByMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NearByMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NearByMatchSet, _is_default_instance_));
  PB_OperationalStateAPIFrame_0_descriptor_ = file->message_type(6);
  static const int PB_OperationalStateAPIFrame_0_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _4_),
  };
  PB_OperationalStateAPIFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_OperationalStateAPIFrame_0_descriptor_,
      PB_OperationalStateAPIFrame_0::default_instance_,
      PB_OperationalStateAPIFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_OperationalStateAPIFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0, _is_default_instance_));
  PB_OperationalStateAPIFrame_0Vector_descriptor_ = file->message_type(7);
  static const int PB_OperationalStateAPIFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0Vector, frames_),
  };
  PB_OperationalStateAPIFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_OperationalStateAPIFrame_0Vector_descriptor_,
      PB_OperationalStateAPIFrame_0Vector::default_instance_,
      PB_OperationalStateAPIFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_OperationalStateAPIFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIFrame_0Vector, _is_default_instance_));
  PB_OperationalStateAPIMatch_descriptor_ = file->message_type(8);
  static const int PB_OperationalStateAPIMatch_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, turnout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, turnoutid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, operational_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, stateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, turnouttemp_),
  };
  PB_OperationalStateAPIMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_OperationalStateAPIMatch_descriptor_,
      PB_OperationalStateAPIMatch::default_instance_,
      PB_OperationalStateAPIMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_OperationalStateAPIMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatch, _is_default_instance_));
  PB_OperationalStateAPIMatchSet_descriptor_ = file->message_type(9);
  static const int PB_OperationalStateAPIMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatchSet, matches_),
  };
  PB_OperationalStateAPIMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_OperationalStateAPIMatchSet_descriptor_,
      PB_OperationalStateAPIMatchSet::default_instance_,
      PB_OperationalStateAPIMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_OperationalStateAPIMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_OperationalStateAPIMatchSet, _is_default_instance_));
  PB_FrozenStateAPIFrame_0_descriptor_ = file->message_type(10);
  static const int PB_FrozenStateAPIFrame_0_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _4_),
  };
  PB_FrozenStateAPIFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_FrozenStateAPIFrame_0_descriptor_,
      PB_FrozenStateAPIFrame_0::default_instance_,
      PB_FrozenStateAPIFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_FrozenStateAPIFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0, _is_default_instance_));
  PB_FrozenStateAPIFrame_0Vector_descriptor_ = file->message_type(11);
  static const int PB_FrozenStateAPIFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0Vector, frames_),
  };
  PB_FrozenStateAPIFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_FrozenStateAPIFrame_0Vector_descriptor_,
      PB_FrozenStateAPIFrame_0Vector::default_instance_,
      PB_FrozenStateAPIFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_FrozenStateAPIFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FrozenStateAPIFrame_0Vector, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PB_5fDerivedInput_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_FrozenStateAPIMatch_descriptor_, &PB_FrozenStateAPIMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_FrozenStateAPIMatchSet_descriptor_, &PB_FrozenStateAPIMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NearByFrame_0_descriptor_, &PB_NearByFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NearByFrame_0Vector_descriptor_, &PB_NearByFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NearByMatch_descriptor_, &PB_NearByMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NearByMatchSet_descriptor_, &PB_NearByMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_OperationalStateAPIFrame_0_descriptor_, &PB_OperationalStateAPIFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_OperationalStateAPIFrame_0Vector_descriptor_, &PB_OperationalStateAPIFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_OperationalStateAPIMatch_descriptor_, &PB_OperationalStateAPIMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_OperationalStateAPIMatchSet_descriptor_, &PB_OperationalStateAPIMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_FrozenStateAPIFrame_0_descriptor_, &PB_FrozenStateAPIFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_FrozenStateAPIFrame_0Vector_descriptor_, &PB_FrozenStateAPIFrame_0Vector::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PB_5fDerivedInput_2eproto() {
  delete PB_FrozenStateAPIMatch::default_instance_;
  delete PB_FrozenStateAPIMatch_reflection_;
  delete PB_FrozenStateAPIMatchSet::default_instance_;
  delete PB_FrozenStateAPIMatchSet_reflection_;
  delete PB_NearByFrame_0::default_instance_;
  delete PB_NearByFrame_0_reflection_;
  delete PB_NearByFrame_0Vector::default_instance_;
  delete PB_NearByFrame_0Vector_reflection_;
  delete PB_NearByMatch::default_instance_;
  delete PB_NearByMatch_reflection_;
  delete PB_NearByMatchSet::default_instance_;
  delete PB_NearByMatchSet_reflection_;
  delete PB_OperationalStateAPIFrame_0::default_instance_;
  delete PB_OperationalStateAPIFrame_0_reflection_;
  delete PB_OperationalStateAPIFrame_0Vector::default_instance_;
  delete PB_OperationalStateAPIFrame_0Vector_reflection_;
  delete PB_OperationalStateAPIMatch::default_instance_;
  delete PB_OperationalStateAPIMatch_reflection_;
  delete PB_OperationalStateAPIMatchSet::default_instance_;
  delete PB_OperationalStateAPIMatchSet_reflection_;
  delete PB_FrozenStateAPIFrame_0::default_instance_;
  delete PB_FrozenStateAPIFrame_0_reflection_;
  delete PB_FrozenStateAPIFrame_0Vector::default_instance_;
  delete PB_FrozenStateAPIFrame_0Vector_reflection_;
}

void protobuf_AddDesc_PB_5fDerivedInput_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_PB_5fDerivedInput_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025PB_DerivedInput.proto\"r\n\026PB_FrozenStat"
    "eAPIMatch\022\017\n\007turnout\030\001 \001(\005\022\021\n\tturnoutID\030"
    "\002 \001(\005\022\016\n\006frozen\030\003 \001(\005\022\017\n\007stateID\030\004 \001(\005\022\023"
    "\n\013turnoutTemp\030\005 \001(\001\"E\n\031PB_FrozenStateAPI"
    "MatchSet\022(\n\007matches\030\001 \003(\0132\027.PB_FrozenSta"
    "teAPIMatch\"\261\001\n\020PB_NearByFrame_0\022\n\n\002_0\030\001 "
    "\001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\022\n\n\002_3\030\004 \001(\005\022"
    "\n\n\002_4\030\005 \001(\005\022\n\n\002_5\030\006 \001(\001\022\n\n\002_6\030\007 \001(\001\022\n\n\002_"
    "7\030\010 \001(\001\022\n\n\002_8\030\t \001(\001\022\n\n\002_9\030\n \001(\001\022\013\n\003_10\030\013"
    " \001(\001\022\013\n\003_11\030\014 \001(\005\022\013\n\003_12\030\r \001(\005\";\n\026PB_Nea"
    "rByFrame_0Vector\022!\n\006frames\030\001 \003(\0132\021.PB_Ne"
    "arByFrame_0\"\273\001\n\016PB_NearByMatch\022\021\n\trobotP"
    "art\030\001 \001(\005\022\023\n\013robotPartID\030\002 \001(\005\022\r\n\005train\030"
    "\003 \001(\005\022\017\n\007trainID\030\004 \001(\005\022\r\n\005segID\030\005 \001(\005\022\014\n"
    "\004robX\030\006 \001(\001\022\014\n\004robY\030\007 \001(\001\022\014\n\004robZ\030\010 \001(\001\022"
    "\014\n\004segX\030\t \001(\001\022\014\n\004segY\030\n \001(\001\022\014\n\004segZ\030\013 \001("
    "\001\"5\n\021PB_NearByMatchSet\022 \n\007matches\030\001 \003(\0132"
    "\017.PB_NearByMatch\"[\n\035PB_OperationalStateA"
    "PIFrame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030"
    "\003 \001(\005\022\n\n\002_3\030\004 \001(\005\022\n\n\002_4\030\005 \001(\001\"U\n#PB_Oper"
    "ationalStateAPIFrame_0Vector\022.\n\006frames\030\001"
    " \003(\0132\036.PB_OperationalStateAPIFrame_0\"|\n\033"
    "PB_OperationalStateAPIMatch\022\017\n\007turnout\030\001"
    " \001(\005\022\021\n\tturnoutID\030\002 \001(\005\022\023\n\013operational\030\003"
    " \001(\005\022\017\n\007stateID\030\004 \001(\005\022\023\n\013turnoutTemp\030\005 \001"
    "(\001\"O\n\036PB_OperationalStateAPIMatchSet\022-\n\007"
    "matches\030\001 \003(\0132\034.PB_OperationalStateAPIMa"
    "tch\"V\n\030PB_FrozenStateAPIFrame_0\022\n\n\002_0\030\001 "
    "\001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\022\n\n\002_3\030\004 \001(\005\022"
    "\n\n\002_4\030\005 \001(\001\"K\n\036PB_FrozenStateAPIFrame_0V"
    "ector\022)\n\006frames\030\001 \003(\0132\031.PB_FrozenStateAP"
    "IFrame_0b\006proto3", 1256);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PB_DerivedInput.proto", &protobuf_RegisterTypes);
  PB_FrozenStateAPIMatch::default_instance_ = new PB_FrozenStateAPIMatch();
  PB_FrozenStateAPIMatchSet::default_instance_ = new PB_FrozenStateAPIMatchSet();
  PB_NearByFrame_0::default_instance_ = new PB_NearByFrame_0();
  PB_NearByFrame_0Vector::default_instance_ = new PB_NearByFrame_0Vector();
  PB_NearByMatch::default_instance_ = new PB_NearByMatch();
  PB_NearByMatchSet::default_instance_ = new PB_NearByMatchSet();
  PB_OperationalStateAPIFrame_0::default_instance_ = new PB_OperationalStateAPIFrame_0();
  PB_OperationalStateAPIFrame_0Vector::default_instance_ = new PB_OperationalStateAPIFrame_0Vector();
  PB_OperationalStateAPIMatch::default_instance_ = new PB_OperationalStateAPIMatch();
  PB_OperationalStateAPIMatchSet::default_instance_ = new PB_OperationalStateAPIMatchSet();
  PB_FrozenStateAPIFrame_0::default_instance_ = new PB_FrozenStateAPIFrame_0();
  PB_FrozenStateAPIFrame_0Vector::default_instance_ = new PB_FrozenStateAPIFrame_0Vector();
  PB_FrozenStateAPIMatch::default_instance_->InitAsDefaultInstance();
  PB_FrozenStateAPIMatchSet::default_instance_->InitAsDefaultInstance();
  PB_NearByFrame_0::default_instance_->InitAsDefaultInstance();
  PB_NearByFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_NearByMatch::default_instance_->InitAsDefaultInstance();
  PB_NearByMatchSet::default_instance_->InitAsDefaultInstance();
  PB_OperationalStateAPIFrame_0::default_instance_->InitAsDefaultInstance();
  PB_OperationalStateAPIFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_OperationalStateAPIMatch::default_instance_->InitAsDefaultInstance();
  PB_OperationalStateAPIMatchSet::default_instance_->InitAsDefaultInstance();
  PB_FrozenStateAPIFrame_0::default_instance_->InitAsDefaultInstance();
  PB_FrozenStateAPIFrame_0Vector::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PB_5fDerivedInput_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PB_5fDerivedInput_2eproto {
  StaticDescriptorInitializer_PB_5fDerivedInput_2eproto() {
    protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  }
} static_descriptor_initializer_PB_5fDerivedInput_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_FrozenStateAPIMatch::kTurnoutFieldNumber;
const int PB_FrozenStateAPIMatch::kTurnoutIDFieldNumber;
const int PB_FrozenStateAPIMatch::kFrozenFieldNumber;
const int PB_FrozenStateAPIMatch::kStateIDFieldNumber;
const int PB_FrozenStateAPIMatch::kTurnoutTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_FrozenStateAPIMatch::PB_FrozenStateAPIMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_FrozenStateAPIMatch)
}

void PB_FrozenStateAPIMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_FrozenStateAPIMatch::PB_FrozenStateAPIMatch(const PB_FrozenStateAPIMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_FrozenStateAPIMatch)
}

void PB_FrozenStateAPIMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  turnout_ = 0;
  turnoutid_ = 0;
  frozen_ = 0;
  stateid_ = 0;
  turnouttemp_ = 0;
}

PB_FrozenStateAPIMatch::~PB_FrozenStateAPIMatch() {
  // @@protoc_insertion_point(destructor:PB_FrozenStateAPIMatch)
  SharedDtor();
}

void PB_FrozenStateAPIMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_FrozenStateAPIMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_FrozenStateAPIMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_FrozenStateAPIMatch_descriptor_;
}

const PB_FrozenStateAPIMatch& PB_FrozenStateAPIMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_FrozenStateAPIMatch* PB_FrozenStateAPIMatch::default_instance_ = NULL;

PB_FrozenStateAPIMatch* PB_FrozenStateAPIMatch::New(::google::protobuf::Arena* arena) const {
  PB_FrozenStateAPIMatch* n = new PB_FrozenStateAPIMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_FrozenStateAPIMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_FrozenStateAPIMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_FrozenStateAPIMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_FrozenStateAPIMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(turnout_, turnouttemp_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_FrozenStateAPIMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_FrozenStateAPIMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 turnout = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_turnoutID;
        break;
      }

      // optional int32 turnoutID = 2;
      case 2: {
        if (tag == 16) {
         parse_turnoutID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnoutid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_frozen;
        break;
      }

      // optional int32 frozen = 3;
      case 3: {
        if (tag == 24) {
         parse_frozen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frozen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_stateID;
        break;
      }

      // optional int32 stateID = 4;
      case 4: {
        if (tag == 32) {
         parse_stateID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stateid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_turnoutTemp;
        break;
      }

      // optional double turnoutTemp = 5;
      case 5: {
        if (tag == 41) {
         parse_turnoutTemp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnouttemp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_FrozenStateAPIMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_FrozenStateAPIMatch)
  return false;
#undef DO_
}

void PB_FrozenStateAPIMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_FrozenStateAPIMatch)
  // optional int32 turnout = 1;
  if (this->turnout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->turnout(), output);
  }

  // optional int32 turnoutID = 2;
  if (this->turnoutid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->turnoutid(), output);
  }

  // optional int32 frozen = 3;
  if (this->frozen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frozen(), output);
  }

  // optional int32 stateID = 4;
  if (this->stateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stateid(), output);
  }

  // optional double turnoutTemp = 5;
  if (this->turnouttemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->turnouttemp(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_FrozenStateAPIMatch)
}

::google::protobuf::uint8* PB_FrozenStateAPIMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_FrozenStateAPIMatch)
  // optional int32 turnout = 1;
  if (this->turnout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->turnout(), target);
  }

  // optional int32 turnoutID = 2;
  if (this->turnoutid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->turnoutid(), target);
  }

  // optional int32 frozen = 3;
  if (this->frozen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->frozen(), target);
  }

  // optional int32 stateID = 4;
  if (this->stateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stateid(), target);
  }

  // optional double turnoutTemp = 5;
  if (this->turnouttemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->turnouttemp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_FrozenStateAPIMatch)
  return target;
}

int PB_FrozenStateAPIMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_FrozenStateAPIMatch)
  int total_size = 0;

  // optional int32 turnout = 1;
  if (this->turnout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnout());
  }

  // optional int32 turnoutID = 2;
  if (this->turnoutid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnoutid());
  }

  // optional int32 frozen = 3;
  if (this->frozen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frozen());
  }

  // optional int32 stateID = 4;
  if (this->stateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stateid());
  }

  // optional double turnoutTemp = 5;
  if (this->turnouttemp() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_FrozenStateAPIMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_FrozenStateAPIMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_FrozenStateAPIMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_FrozenStateAPIMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_FrozenStateAPIMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_FrozenStateAPIMatch)
    MergeFrom(*source);
  }
}

void PB_FrozenStateAPIMatch::MergeFrom(const PB_FrozenStateAPIMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_FrozenStateAPIMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.turnout() != 0) {
    set_turnout(from.turnout());
  }
  if (from.turnoutid() != 0) {
    set_turnoutid(from.turnoutid());
  }
  if (from.frozen() != 0) {
    set_frozen(from.frozen());
  }
  if (from.stateid() != 0) {
    set_stateid(from.stateid());
  }
  if (from.turnouttemp() != 0) {
    set_turnouttemp(from.turnouttemp());
  }
}

void PB_FrozenStateAPIMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_FrozenStateAPIMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_FrozenStateAPIMatch::CopyFrom(const PB_FrozenStateAPIMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_FrozenStateAPIMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FrozenStateAPIMatch::IsInitialized() const {

  return true;
}

void PB_FrozenStateAPIMatch::Swap(PB_FrozenStateAPIMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_FrozenStateAPIMatch::InternalSwap(PB_FrozenStateAPIMatch* other) {
  std::swap(turnout_, other->turnout_);
  std::swap(turnoutid_, other->turnoutid_);
  std::swap(frozen_, other->frozen_);
  std::swap(stateid_, other->stateid_);
  std::swap(turnouttemp_, other->turnouttemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_FrozenStateAPIMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_FrozenStateAPIMatch_descriptor_;
  metadata.reflection = PB_FrozenStateAPIMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_FrozenStateAPIMatch

// optional int32 turnout = 1;
void PB_FrozenStateAPIMatch::clear_turnout() {
  turnout_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIMatch::turnout() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIMatch.turnout)
  return turnout_;
}
 void PB_FrozenStateAPIMatch::set_turnout(::google::protobuf::int32 value) {
  
  turnout_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIMatch.turnout)
}

// optional int32 turnoutID = 2;
void PB_FrozenStateAPIMatch::clear_turnoutid() {
  turnoutid_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIMatch::turnoutid() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIMatch.turnoutID)
  return turnoutid_;
}
 void PB_FrozenStateAPIMatch::set_turnoutid(::google::protobuf::int32 value) {
  
  turnoutid_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIMatch.turnoutID)
}

// optional int32 frozen = 3;
void PB_FrozenStateAPIMatch::clear_frozen() {
  frozen_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIMatch::frozen() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIMatch.frozen)
  return frozen_;
}
 void PB_FrozenStateAPIMatch::set_frozen(::google::protobuf::int32 value) {
  
  frozen_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIMatch.frozen)
}

// optional int32 stateID = 4;
void PB_FrozenStateAPIMatch::clear_stateid() {
  stateid_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIMatch::stateid() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIMatch.stateID)
  return stateid_;
}
 void PB_FrozenStateAPIMatch::set_stateid(::google::protobuf::int32 value) {
  
  stateid_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIMatch.stateID)
}

// optional double turnoutTemp = 5;
void PB_FrozenStateAPIMatch::clear_turnouttemp() {
  turnouttemp_ = 0;
}
 double PB_FrozenStateAPIMatch::turnouttemp() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIMatch.turnoutTemp)
  return turnouttemp_;
}
 void PB_FrozenStateAPIMatch::set_turnouttemp(double value) {
  
  turnouttemp_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIMatch.turnoutTemp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_FrozenStateAPIMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_FrozenStateAPIMatchSet::PB_FrozenStateAPIMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_FrozenStateAPIMatchSet)
}

void PB_FrozenStateAPIMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_FrozenStateAPIMatchSet::PB_FrozenStateAPIMatchSet(const PB_FrozenStateAPIMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_FrozenStateAPIMatchSet)
}

void PB_FrozenStateAPIMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_FrozenStateAPIMatchSet::~PB_FrozenStateAPIMatchSet() {
  // @@protoc_insertion_point(destructor:PB_FrozenStateAPIMatchSet)
  SharedDtor();
}

void PB_FrozenStateAPIMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_FrozenStateAPIMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_FrozenStateAPIMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_FrozenStateAPIMatchSet_descriptor_;
}

const PB_FrozenStateAPIMatchSet& PB_FrozenStateAPIMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_FrozenStateAPIMatchSet* PB_FrozenStateAPIMatchSet::default_instance_ = NULL;

PB_FrozenStateAPIMatchSet* PB_FrozenStateAPIMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_FrozenStateAPIMatchSet* n = new PB_FrozenStateAPIMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_FrozenStateAPIMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_FrozenStateAPIMatchSet)
  matches_.Clear();
}

bool PB_FrozenStateAPIMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_FrozenStateAPIMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_FrozenStateAPIMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_FrozenStateAPIMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_FrozenStateAPIMatchSet)
  return false;
#undef DO_
}

void PB_FrozenStateAPIMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_FrozenStateAPIMatchSet)
  // repeated .PB_FrozenStateAPIMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_FrozenStateAPIMatchSet)
}

::google::protobuf::uint8* PB_FrozenStateAPIMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_FrozenStateAPIMatchSet)
  // repeated .PB_FrozenStateAPIMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_FrozenStateAPIMatchSet)
  return target;
}

int PB_FrozenStateAPIMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_FrozenStateAPIMatchSet)
  int total_size = 0;

  // repeated .PB_FrozenStateAPIMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_FrozenStateAPIMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_FrozenStateAPIMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_FrozenStateAPIMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_FrozenStateAPIMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_FrozenStateAPIMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_FrozenStateAPIMatchSet)
    MergeFrom(*source);
  }
}

void PB_FrozenStateAPIMatchSet::MergeFrom(const PB_FrozenStateAPIMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_FrozenStateAPIMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_FrozenStateAPIMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_FrozenStateAPIMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_FrozenStateAPIMatchSet::CopyFrom(const PB_FrozenStateAPIMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_FrozenStateAPIMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FrozenStateAPIMatchSet::IsInitialized() const {

  return true;
}

void PB_FrozenStateAPIMatchSet::Swap(PB_FrozenStateAPIMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_FrozenStateAPIMatchSet::InternalSwap(PB_FrozenStateAPIMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_FrozenStateAPIMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_FrozenStateAPIMatchSet_descriptor_;
  metadata.reflection = PB_FrozenStateAPIMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_FrozenStateAPIMatchSet

// repeated .PB_FrozenStateAPIMatch matches = 1;
int PB_FrozenStateAPIMatchSet::matches_size() const {
  return matches_.size();
}
void PB_FrozenStateAPIMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_FrozenStateAPIMatch& PB_FrozenStateAPIMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIMatchSet.matches)
  return matches_.Get(index);
}
::PB_FrozenStateAPIMatch* PB_FrozenStateAPIMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_FrozenStateAPIMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_FrozenStateAPIMatch* PB_FrozenStateAPIMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_FrozenStateAPIMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_FrozenStateAPIMatch >*
PB_FrozenStateAPIMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_FrozenStateAPIMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_FrozenStateAPIMatch >&
PB_FrozenStateAPIMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_FrozenStateAPIMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NearByFrame_0::k0FieldNumber;
const int PB_NearByFrame_0::k1FieldNumber;
const int PB_NearByFrame_0::k2FieldNumber;
const int PB_NearByFrame_0::k3FieldNumber;
const int PB_NearByFrame_0::k4FieldNumber;
const int PB_NearByFrame_0::k5FieldNumber;
const int PB_NearByFrame_0::k6FieldNumber;
const int PB_NearByFrame_0::k7FieldNumber;
const int PB_NearByFrame_0::k8FieldNumber;
const int PB_NearByFrame_0::k9FieldNumber;
const int PB_NearByFrame_0::k10FieldNumber;
const int PB_NearByFrame_0::k11FieldNumber;
const int PB_NearByFrame_0::k12FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NearByFrame_0::PB_NearByFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NearByFrame_0)
}

void PB_NearByFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NearByFrame_0::PB_NearByFrame_0(const PB_NearByFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NearByFrame_0)
}

void PB_NearByFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
  _4_ = 0;
  _5_ = 0;
  _6_ = 0;
  _7_ = 0;
  _8_ = 0;
  _9_ = 0;
  _10_ = 0;
  _11_ = 0;
  _12_ = 0;
}

PB_NearByFrame_0::~PB_NearByFrame_0() {
  // @@protoc_insertion_point(destructor:PB_NearByFrame_0)
  SharedDtor();
}

void PB_NearByFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NearByFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NearByFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NearByFrame_0_descriptor_;
}

const PB_NearByFrame_0& PB_NearByFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_NearByFrame_0* PB_NearByFrame_0::default_instance_ = NULL;

PB_NearByFrame_0* PB_NearByFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_NearByFrame_0* n = new PB_NearByFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NearByFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NearByFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_NearByFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_NearByFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _4_);
  ZR_(_11_, _12_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_NearByFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NearByFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse__4;
        break;
      }

      // optional int32 _4 = 5;
      case 5: {
        if (tag == 40) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse__5;
        break;
      }

      // optional double _5 = 6;
      case 6: {
        if (tag == 49) {
         parse__5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse__6;
        break;
      }

      // optional double _6 = 7;
      case 7: {
        if (tag == 57) {
         parse__6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse__7;
        break;
      }

      // optional double _7 = 8;
      case 8: {
        if (tag == 65) {
         parse__7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_7_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse__8;
        break;
      }

      // optional double _8 = 9;
      case 9: {
        if (tag == 73) {
         parse__8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_8_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse__9;
        break;
      }

      // optional double _9 = 10;
      case 10: {
        if (tag == 81) {
         parse__9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_9_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse__10;
        break;
      }

      // optional double _10 = 11;
      case 11: {
        if (tag == 89) {
         parse__10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_10_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse__11;
        break;
      }

      // optional int32 _11 = 12;
      case 12: {
        if (tag == 96) {
         parse__11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_11_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse__12;
        break;
      }

      // optional int32 _12 = 13;
      case 13: {
        if (tag == 104) {
         parse__12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_12_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NearByFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NearByFrame_0)
  return false;
#undef DO_
}

void PB_NearByFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NearByFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // optional int32 _4 = 5;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->_4(), output);
  }

  // optional double _5 = 6;
  if (this->_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->_5(), output);
  }

  // optional double _6 = 7;
  if (this->_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->_6(), output);
  }

  // optional double _7 = 8;
  if (this->_7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->_7(), output);
  }

  // optional double _8 = 9;
  if (this->_8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->_8(), output);
  }

  // optional double _9 = 10;
  if (this->_9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->_9(), output);
  }

  // optional double _10 = 11;
  if (this->_10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->_10(), output);
  }

  // optional int32 _11 = 12;
  if (this->_11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->_11(), output);
  }

  // optional int32 _12 = 13;
  if (this->_12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->_12(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NearByFrame_0)
}

::google::protobuf::uint8* PB_NearByFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NearByFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // optional int32 _4 = 5;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->_4(), target);
  }

  // optional double _5 = 6;
  if (this->_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->_5(), target);
  }

  // optional double _6 = 7;
  if (this->_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->_6(), target);
  }

  // optional double _7 = 8;
  if (this->_7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->_7(), target);
  }

  // optional double _8 = 9;
  if (this->_8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->_8(), target);
  }

  // optional double _9 = 10;
  if (this->_9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->_9(), target);
  }

  // optional double _10 = 11;
  if (this->_10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->_10(), target);
  }

  // optional int32 _11 = 12;
  if (this->_11() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->_11(), target);
  }

  // optional int32 _12 = 13;
  if (this->_12() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->_12(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NearByFrame_0)
  return target;
}

int PB_NearByFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NearByFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  // optional int32 _4 = 5;
  if (this->_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_4());
  }

  // optional double _5 = 6;
  if (this->_5() != 0) {
    total_size += 1 + 8;
  }

  // optional double _6 = 7;
  if (this->_6() != 0) {
    total_size += 1 + 8;
  }

  // optional double _7 = 8;
  if (this->_7() != 0) {
    total_size += 1 + 8;
  }

  // optional double _8 = 9;
  if (this->_8() != 0) {
    total_size += 1 + 8;
  }

  // optional double _9 = 10;
  if (this->_9() != 0) {
    total_size += 1 + 8;
  }

  // optional double _10 = 11;
  if (this->_10() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 _11 = 12;
  if (this->_11() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_11());
  }

  // optional int32 _12 = 13;
  if (this->_12() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_12());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NearByFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NearByFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NearByFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NearByFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NearByFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NearByFrame_0)
    MergeFrom(*source);
  }
}

void PB_NearByFrame_0::MergeFrom(const PB_NearByFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NearByFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
  if (from._5() != 0) {
    set__5(from._5());
  }
  if (from._6() != 0) {
    set__6(from._6());
  }
  if (from._7() != 0) {
    set__7(from._7());
  }
  if (from._8() != 0) {
    set__8(from._8());
  }
  if (from._9() != 0) {
    set__9(from._9());
  }
  if (from._10() != 0) {
    set__10(from._10());
  }
  if (from._11() != 0) {
    set__11(from._11());
  }
  if (from._12() != 0) {
    set__12(from._12());
  }
}

void PB_NearByFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NearByFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NearByFrame_0::CopyFrom(const PB_NearByFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NearByFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NearByFrame_0::IsInitialized() const {

  return true;
}

void PB_NearByFrame_0::Swap(PB_NearByFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NearByFrame_0::InternalSwap(PB_NearByFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  std::swap(_4_, other->_4_);
  std::swap(_5_, other->_5_);
  std::swap(_6_, other->_6_);
  std::swap(_7_, other->_7_);
  std::swap(_8_, other->_8_);
  std::swap(_9_, other->_9_);
  std::swap(_10_, other->_10_);
  std::swap(_11_, other->_11_);
  std::swap(_12_, other->_12_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NearByFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NearByFrame_0_descriptor_;
  metadata.reflection = PB_NearByFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NearByFrame_0

// optional int32 _0 = 1;
void PB_NearByFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._0)
  return _0_;
}
 void PB_NearByFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._0)
}

// optional int32 _1 = 2;
void PB_NearByFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._1)
  return _1_;
}
 void PB_NearByFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._1)
}

// optional int32 _2 = 3;
void PB_NearByFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._2)
  return _2_;
}
 void PB_NearByFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._2)
}

// optional int32 _3 = 4;
void PB_NearByFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._3)
  return _3_;
}
 void PB_NearByFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._3)
}

// optional int32 _4 = 5;
void PB_NearByFrame_0::clear__4() {
  _4_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._4)
  return _4_;
}
 void PB_NearByFrame_0::set__4(::google::protobuf::int32 value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._4)
}

// optional double _5 = 6;
void PB_NearByFrame_0::clear__5() {
  _5_ = 0;
}
 double PB_NearByFrame_0::_5() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._5)
  return _5_;
}
 void PB_NearByFrame_0::set__5(double value) {
  
  _5_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._5)
}

// optional double _6 = 7;
void PB_NearByFrame_0::clear__6() {
  _6_ = 0;
}
 double PB_NearByFrame_0::_6() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._6)
  return _6_;
}
 void PB_NearByFrame_0::set__6(double value) {
  
  _6_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._6)
}

// optional double _7 = 8;
void PB_NearByFrame_0::clear__7() {
  _7_ = 0;
}
 double PB_NearByFrame_0::_7() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._7)
  return _7_;
}
 void PB_NearByFrame_0::set__7(double value) {
  
  _7_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._7)
}

// optional double _8 = 9;
void PB_NearByFrame_0::clear__8() {
  _8_ = 0;
}
 double PB_NearByFrame_0::_8() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._8)
  return _8_;
}
 void PB_NearByFrame_0::set__8(double value) {
  
  _8_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._8)
}

// optional double _9 = 10;
void PB_NearByFrame_0::clear__9() {
  _9_ = 0;
}
 double PB_NearByFrame_0::_9() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._9)
  return _9_;
}
 void PB_NearByFrame_0::set__9(double value) {
  
  _9_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._9)
}

// optional double _10 = 11;
void PB_NearByFrame_0::clear__10() {
  _10_ = 0;
}
 double PB_NearByFrame_0::_10() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._10)
  return _10_;
}
 void PB_NearByFrame_0::set__10(double value) {
  
  _10_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._10)
}

// optional int32 _11 = 12;
void PB_NearByFrame_0::clear__11() {
  _11_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_11() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._11)
  return _11_;
}
 void PB_NearByFrame_0::set__11(::google::protobuf::int32 value) {
  
  _11_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._11)
}

// optional int32 _12 = 13;
void PB_NearByFrame_0::clear__12() {
  _12_ = 0;
}
 ::google::protobuf::int32 PB_NearByFrame_0::_12() const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0._12)
  return _12_;
}
 void PB_NearByFrame_0::set__12(::google::protobuf::int32 value) {
  
  _12_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByFrame_0._12)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NearByFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NearByFrame_0Vector::PB_NearByFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NearByFrame_0Vector)
}

void PB_NearByFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NearByFrame_0Vector::PB_NearByFrame_0Vector(const PB_NearByFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NearByFrame_0Vector)
}

void PB_NearByFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NearByFrame_0Vector::~PB_NearByFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_NearByFrame_0Vector)
  SharedDtor();
}

void PB_NearByFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NearByFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NearByFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NearByFrame_0Vector_descriptor_;
}

const PB_NearByFrame_0Vector& PB_NearByFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_NearByFrame_0Vector* PB_NearByFrame_0Vector::default_instance_ = NULL;

PB_NearByFrame_0Vector* PB_NearByFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_NearByFrame_0Vector* n = new PB_NearByFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NearByFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NearByFrame_0Vector)
  frames_.Clear();
}

bool PB_NearByFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NearByFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NearByFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NearByFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NearByFrame_0Vector)
  return false;
#undef DO_
}

void PB_NearByFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NearByFrame_0Vector)
  // repeated .PB_NearByFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NearByFrame_0Vector)
}

::google::protobuf::uint8* PB_NearByFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NearByFrame_0Vector)
  // repeated .PB_NearByFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NearByFrame_0Vector)
  return target;
}

int PB_NearByFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NearByFrame_0Vector)
  int total_size = 0;

  // repeated .PB_NearByFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NearByFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NearByFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NearByFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NearByFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NearByFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NearByFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_NearByFrame_0Vector::MergeFrom(const PB_NearByFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NearByFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_NearByFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NearByFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NearByFrame_0Vector::CopyFrom(const PB_NearByFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NearByFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NearByFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_NearByFrame_0Vector::Swap(PB_NearByFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NearByFrame_0Vector::InternalSwap(PB_NearByFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NearByFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NearByFrame_0Vector_descriptor_;
  metadata.reflection = PB_NearByFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NearByFrame_0Vector

// repeated .PB_NearByFrame_0 frames = 1;
int PB_NearByFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_NearByFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_NearByFrame_0& PB_NearByFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_NearByFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_NearByFrame_0* PB_NearByFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NearByFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_NearByFrame_0* PB_NearByFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_NearByFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NearByFrame_0 >*
PB_NearByFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_NearByFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NearByFrame_0 >&
PB_NearByFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_NearByFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NearByMatch::kRobotPartFieldNumber;
const int PB_NearByMatch::kRobotPartIDFieldNumber;
const int PB_NearByMatch::kTrainFieldNumber;
const int PB_NearByMatch::kTrainIDFieldNumber;
const int PB_NearByMatch::kSegIDFieldNumber;
const int PB_NearByMatch::kRobXFieldNumber;
const int PB_NearByMatch::kRobYFieldNumber;
const int PB_NearByMatch::kRobZFieldNumber;
const int PB_NearByMatch::kSegXFieldNumber;
const int PB_NearByMatch::kSegYFieldNumber;
const int PB_NearByMatch::kSegZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NearByMatch::PB_NearByMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NearByMatch)
}

void PB_NearByMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NearByMatch::PB_NearByMatch(const PB_NearByMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NearByMatch)
}

void PB_NearByMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  robotpart_ = 0;
  robotpartid_ = 0;
  train_ = 0;
  trainid_ = 0;
  segid_ = 0;
  robx_ = 0;
  roby_ = 0;
  robz_ = 0;
  segx_ = 0;
  segy_ = 0;
  segz_ = 0;
}

PB_NearByMatch::~PB_NearByMatch() {
  // @@protoc_insertion_point(destructor:PB_NearByMatch)
  SharedDtor();
}

void PB_NearByMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NearByMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NearByMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NearByMatch_descriptor_;
}

const PB_NearByMatch& PB_NearByMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_NearByMatch* PB_NearByMatch::default_instance_ = NULL;

PB_NearByMatch* PB_NearByMatch::New(::google::protobuf::Arena* arena) const {
  PB_NearByMatch* n = new PB_NearByMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NearByMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NearByMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_NearByMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_NearByMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(robotpart_, robz_);
  segid_ = 0;
  ZR_(segx_, segz_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_NearByMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NearByMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 robotPart = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotpart_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_robotPartID;
        break;
      }

      // optional int32 robotPartID = 2;
      case 2: {
        if (tag == 16) {
         parse_robotPartID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotpartid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_train;
        break;
      }

      // optional int32 train = 3;
      case 3: {
        if (tag == 24) {
         parse_train:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_trainID;
        break;
      }

      // optional int32 trainID = 4;
      case 4: {
        if (tag == 32) {
         parse_trainID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trainid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_segID;
        break;
      }

      // optional int32 segID = 5;
      case 5: {
        if (tag == 40) {
         parse_segID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_robX;
        break;
      }

      // optional double robX = 6;
      case 6: {
        if (tag == 49) {
         parse_robX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &robx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_robY;
        break;
      }

      // optional double robY = 7;
      case 7: {
        if (tag == 57) {
         parse_robY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roby_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_robZ;
        break;
      }

      // optional double robZ = 8;
      case 8: {
        if (tag == 65) {
         parse_robZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &robz_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_segX;
        break;
      }

      // optional double segX = 9;
      case 9: {
        if (tag == 73) {
         parse_segX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &segx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_segY;
        break;
      }

      // optional double segY = 10;
      case 10: {
        if (tag == 81) {
         parse_segY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &segy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_segZ;
        break;
      }

      // optional double segZ = 11;
      case 11: {
        if (tag == 89) {
         parse_segZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &segz_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NearByMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NearByMatch)
  return false;
#undef DO_
}

void PB_NearByMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NearByMatch)
  // optional int32 robotPart = 1;
  if (this->robotpart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->robotpart(), output);
  }

  // optional int32 robotPartID = 2;
  if (this->robotpartid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->robotpartid(), output);
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->train(), output);
  }

  // optional int32 trainID = 4;
  if (this->trainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->trainid(), output);
  }

  // optional int32 segID = 5;
  if (this->segid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->segid(), output);
  }

  // optional double robX = 6;
  if (this->robx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->robx(), output);
  }

  // optional double robY = 7;
  if (this->roby() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->roby(), output);
  }

  // optional double robZ = 8;
  if (this->robz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->robz(), output);
  }

  // optional double segX = 9;
  if (this->segx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->segx(), output);
  }

  // optional double segY = 10;
  if (this->segy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->segy(), output);
  }

  // optional double segZ = 11;
  if (this->segz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->segz(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NearByMatch)
}

::google::protobuf::uint8* PB_NearByMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NearByMatch)
  // optional int32 robotPart = 1;
  if (this->robotpart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->robotpart(), target);
  }

  // optional int32 robotPartID = 2;
  if (this->robotpartid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->robotpartid(), target);
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->train(), target);
  }

  // optional int32 trainID = 4;
  if (this->trainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->trainid(), target);
  }

  // optional int32 segID = 5;
  if (this->segid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->segid(), target);
  }

  // optional double robX = 6;
  if (this->robx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->robx(), target);
  }

  // optional double robY = 7;
  if (this->roby() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->roby(), target);
  }

  // optional double robZ = 8;
  if (this->robz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->robz(), target);
  }

  // optional double segX = 9;
  if (this->segx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->segx(), target);
  }

  // optional double segY = 10;
  if (this->segy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->segy(), target);
  }

  // optional double segZ = 11;
  if (this->segz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->segz(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NearByMatch)
  return target;
}

int PB_NearByMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NearByMatch)
  int total_size = 0;

  // optional int32 robotPart = 1;
  if (this->robotpart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotpart());
  }

  // optional int32 robotPartID = 2;
  if (this->robotpartid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotpartid());
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->train());
  }

  // optional int32 trainID = 4;
  if (this->trainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trainid());
  }

  // optional int32 segID = 5;
  if (this->segid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segid());
  }

  // optional double robX = 6;
  if (this->robx() != 0) {
    total_size += 1 + 8;
  }

  // optional double robY = 7;
  if (this->roby() != 0) {
    total_size += 1 + 8;
  }

  // optional double robZ = 8;
  if (this->robz() != 0) {
    total_size += 1 + 8;
  }

  // optional double segX = 9;
  if (this->segx() != 0) {
    total_size += 1 + 8;
  }

  // optional double segY = 10;
  if (this->segy() != 0) {
    total_size += 1 + 8;
  }

  // optional double segZ = 11;
  if (this->segz() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NearByMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NearByMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NearByMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NearByMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NearByMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NearByMatch)
    MergeFrom(*source);
  }
}

void PB_NearByMatch::MergeFrom(const PB_NearByMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NearByMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.robotpart() != 0) {
    set_robotpart(from.robotpart());
  }
  if (from.robotpartid() != 0) {
    set_robotpartid(from.robotpartid());
  }
  if (from.train() != 0) {
    set_train(from.train());
  }
  if (from.trainid() != 0) {
    set_trainid(from.trainid());
  }
  if (from.segid() != 0) {
    set_segid(from.segid());
  }
  if (from.robx() != 0) {
    set_robx(from.robx());
  }
  if (from.roby() != 0) {
    set_roby(from.roby());
  }
  if (from.robz() != 0) {
    set_robz(from.robz());
  }
  if (from.segx() != 0) {
    set_segx(from.segx());
  }
  if (from.segy() != 0) {
    set_segy(from.segy());
  }
  if (from.segz() != 0) {
    set_segz(from.segz());
  }
}

void PB_NearByMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NearByMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NearByMatch::CopyFrom(const PB_NearByMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NearByMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NearByMatch::IsInitialized() const {

  return true;
}

void PB_NearByMatch::Swap(PB_NearByMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NearByMatch::InternalSwap(PB_NearByMatch* other) {
  std::swap(robotpart_, other->robotpart_);
  std::swap(robotpartid_, other->robotpartid_);
  std::swap(train_, other->train_);
  std::swap(trainid_, other->trainid_);
  std::swap(segid_, other->segid_);
  std::swap(robx_, other->robx_);
  std::swap(roby_, other->roby_);
  std::swap(robz_, other->robz_);
  std::swap(segx_, other->segx_);
  std::swap(segy_, other->segy_);
  std::swap(segz_, other->segz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NearByMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NearByMatch_descriptor_;
  metadata.reflection = PB_NearByMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NearByMatch

// optional int32 robotPart = 1;
void PB_NearByMatch::clear_robotpart() {
  robotpart_ = 0;
}
 ::google::protobuf::int32 PB_NearByMatch::robotpart() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.robotPart)
  return robotpart_;
}
 void PB_NearByMatch::set_robotpart(::google::protobuf::int32 value) {
  
  robotpart_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.robotPart)
}

// optional int32 robotPartID = 2;
void PB_NearByMatch::clear_robotpartid() {
  robotpartid_ = 0;
}
 ::google::protobuf::int32 PB_NearByMatch::robotpartid() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.robotPartID)
  return robotpartid_;
}
 void PB_NearByMatch::set_robotpartid(::google::protobuf::int32 value) {
  
  robotpartid_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.robotPartID)
}

// optional int32 train = 3;
void PB_NearByMatch::clear_train() {
  train_ = 0;
}
 ::google::protobuf::int32 PB_NearByMatch::train() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.train)
  return train_;
}
 void PB_NearByMatch::set_train(::google::protobuf::int32 value) {
  
  train_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.train)
}

// optional int32 trainID = 4;
void PB_NearByMatch::clear_trainid() {
  trainid_ = 0;
}
 ::google::protobuf::int32 PB_NearByMatch::trainid() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.trainID)
  return trainid_;
}
 void PB_NearByMatch::set_trainid(::google::protobuf::int32 value) {
  
  trainid_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.trainID)
}

// optional int32 segID = 5;
void PB_NearByMatch::clear_segid() {
  segid_ = 0;
}
 ::google::protobuf::int32 PB_NearByMatch::segid() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.segID)
  return segid_;
}
 void PB_NearByMatch::set_segid(::google::protobuf::int32 value) {
  
  segid_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.segID)
}

// optional double robX = 6;
void PB_NearByMatch::clear_robx() {
  robx_ = 0;
}
 double PB_NearByMatch::robx() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.robX)
  return robx_;
}
 void PB_NearByMatch::set_robx(double value) {
  
  robx_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.robX)
}

// optional double robY = 7;
void PB_NearByMatch::clear_roby() {
  roby_ = 0;
}
 double PB_NearByMatch::roby() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.robY)
  return roby_;
}
 void PB_NearByMatch::set_roby(double value) {
  
  roby_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.robY)
}

// optional double robZ = 8;
void PB_NearByMatch::clear_robz() {
  robz_ = 0;
}
 double PB_NearByMatch::robz() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.robZ)
  return robz_;
}
 void PB_NearByMatch::set_robz(double value) {
  
  robz_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.robZ)
}

// optional double segX = 9;
void PB_NearByMatch::clear_segx() {
  segx_ = 0;
}
 double PB_NearByMatch::segx() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.segX)
  return segx_;
}
 void PB_NearByMatch::set_segx(double value) {
  
  segx_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.segX)
}

// optional double segY = 10;
void PB_NearByMatch::clear_segy() {
  segy_ = 0;
}
 double PB_NearByMatch::segy() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.segY)
  return segy_;
}
 void PB_NearByMatch::set_segy(double value) {
  
  segy_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.segY)
}

// optional double segZ = 11;
void PB_NearByMatch::clear_segz() {
  segz_ = 0;
}
 double PB_NearByMatch::segz() const {
  // @@protoc_insertion_point(field_get:PB_NearByMatch.segZ)
  return segz_;
}
 void PB_NearByMatch::set_segz(double value) {
  
  segz_ = value;
  // @@protoc_insertion_point(field_set:PB_NearByMatch.segZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NearByMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NearByMatchSet::PB_NearByMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NearByMatchSet)
}

void PB_NearByMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NearByMatchSet::PB_NearByMatchSet(const PB_NearByMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NearByMatchSet)
}

void PB_NearByMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NearByMatchSet::~PB_NearByMatchSet() {
  // @@protoc_insertion_point(destructor:PB_NearByMatchSet)
  SharedDtor();
}

void PB_NearByMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NearByMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NearByMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NearByMatchSet_descriptor_;
}

const PB_NearByMatchSet& PB_NearByMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_NearByMatchSet* PB_NearByMatchSet::default_instance_ = NULL;

PB_NearByMatchSet* PB_NearByMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_NearByMatchSet* n = new PB_NearByMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NearByMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NearByMatchSet)
  matches_.Clear();
}

bool PB_NearByMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NearByMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NearByMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NearByMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NearByMatchSet)
  return false;
#undef DO_
}

void PB_NearByMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NearByMatchSet)
  // repeated .PB_NearByMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NearByMatchSet)
}

::google::protobuf::uint8* PB_NearByMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NearByMatchSet)
  // repeated .PB_NearByMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NearByMatchSet)
  return target;
}

int PB_NearByMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NearByMatchSet)
  int total_size = 0;

  // repeated .PB_NearByMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NearByMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NearByMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NearByMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NearByMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NearByMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NearByMatchSet)
    MergeFrom(*source);
  }
}

void PB_NearByMatchSet::MergeFrom(const PB_NearByMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NearByMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_NearByMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NearByMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NearByMatchSet::CopyFrom(const PB_NearByMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NearByMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NearByMatchSet::IsInitialized() const {

  return true;
}

void PB_NearByMatchSet::Swap(PB_NearByMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NearByMatchSet::InternalSwap(PB_NearByMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NearByMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NearByMatchSet_descriptor_;
  metadata.reflection = PB_NearByMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NearByMatchSet

// repeated .PB_NearByMatch matches = 1;
int PB_NearByMatchSet::matches_size() const {
  return matches_.size();
}
void PB_NearByMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_NearByMatch& PB_NearByMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_NearByMatchSet.matches)
  return matches_.Get(index);
}
::PB_NearByMatch* PB_NearByMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NearByMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_NearByMatch* PB_NearByMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_NearByMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NearByMatch >*
PB_NearByMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_NearByMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NearByMatch >&
PB_NearByMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_NearByMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_OperationalStateAPIFrame_0::k0FieldNumber;
const int PB_OperationalStateAPIFrame_0::k1FieldNumber;
const int PB_OperationalStateAPIFrame_0::k2FieldNumber;
const int PB_OperationalStateAPIFrame_0::k3FieldNumber;
const int PB_OperationalStateAPIFrame_0::k4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_OperationalStateAPIFrame_0::PB_OperationalStateAPIFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_OperationalStateAPIFrame_0)
}

void PB_OperationalStateAPIFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_OperationalStateAPIFrame_0::PB_OperationalStateAPIFrame_0(const PB_OperationalStateAPIFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_OperationalStateAPIFrame_0)
}

void PB_OperationalStateAPIFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
  _4_ = 0;
}

PB_OperationalStateAPIFrame_0::~PB_OperationalStateAPIFrame_0() {
  // @@protoc_insertion_point(destructor:PB_OperationalStateAPIFrame_0)
  SharedDtor();
}

void PB_OperationalStateAPIFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_OperationalStateAPIFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_OperationalStateAPIFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_OperationalStateAPIFrame_0_descriptor_;
}

const PB_OperationalStateAPIFrame_0& PB_OperationalStateAPIFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_OperationalStateAPIFrame_0* PB_OperationalStateAPIFrame_0::default_instance_ = NULL;

PB_OperationalStateAPIFrame_0* PB_OperationalStateAPIFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_OperationalStateAPIFrame_0* n = new PB_OperationalStateAPIFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_OperationalStateAPIFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_OperationalStateAPIFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_OperationalStateAPIFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_OperationalStateAPIFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _4_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_OperationalStateAPIFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_OperationalStateAPIFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse__4;
        break;
      }

      // optional double _4 = 5;
      case 5: {
        if (tag == 41) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_OperationalStateAPIFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_OperationalStateAPIFrame_0)
  return false;
#undef DO_
}

void PB_OperationalStateAPIFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_OperationalStateAPIFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // optional double _4 = 5;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->_4(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_OperationalStateAPIFrame_0)
}

::google::protobuf::uint8* PB_OperationalStateAPIFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_OperationalStateAPIFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // optional double _4 = 5;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->_4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_OperationalStateAPIFrame_0)
  return target;
}

int PB_OperationalStateAPIFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_OperationalStateAPIFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  // optional double _4 = 5;
  if (this->_4() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_OperationalStateAPIFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_OperationalStateAPIFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_OperationalStateAPIFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_OperationalStateAPIFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_OperationalStateAPIFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_OperationalStateAPIFrame_0)
    MergeFrom(*source);
  }
}

void PB_OperationalStateAPIFrame_0::MergeFrom(const PB_OperationalStateAPIFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_OperationalStateAPIFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
}

void PB_OperationalStateAPIFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_OperationalStateAPIFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_OperationalStateAPIFrame_0::CopyFrom(const PB_OperationalStateAPIFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_OperationalStateAPIFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OperationalStateAPIFrame_0::IsInitialized() const {

  return true;
}

void PB_OperationalStateAPIFrame_0::Swap(PB_OperationalStateAPIFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_OperationalStateAPIFrame_0::InternalSwap(PB_OperationalStateAPIFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  std::swap(_4_, other->_4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_OperationalStateAPIFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_OperationalStateAPIFrame_0_descriptor_;
  metadata.reflection = PB_OperationalStateAPIFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_OperationalStateAPIFrame_0

// optional int32 _0 = 1;
void PB_OperationalStateAPIFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIFrame_0._0)
  return _0_;
}
 void PB_OperationalStateAPIFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIFrame_0._0)
}

// optional int32 _1 = 2;
void PB_OperationalStateAPIFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIFrame_0._1)
  return _1_;
}
 void PB_OperationalStateAPIFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIFrame_0._1)
}

// optional int32 _2 = 3;
void PB_OperationalStateAPIFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIFrame_0._2)
  return _2_;
}
 void PB_OperationalStateAPIFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIFrame_0._2)
}

// optional int32 _3 = 4;
void PB_OperationalStateAPIFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIFrame_0._3)
  return _3_;
}
 void PB_OperationalStateAPIFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIFrame_0._3)
}

// optional double _4 = 5;
void PB_OperationalStateAPIFrame_0::clear__4() {
  _4_ = 0;
}
 double PB_OperationalStateAPIFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIFrame_0._4)
  return _4_;
}
 void PB_OperationalStateAPIFrame_0::set__4(double value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIFrame_0._4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_OperationalStateAPIFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_OperationalStateAPIFrame_0Vector::PB_OperationalStateAPIFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_OperationalStateAPIFrame_0Vector)
}

void PB_OperationalStateAPIFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_OperationalStateAPIFrame_0Vector::PB_OperationalStateAPIFrame_0Vector(const PB_OperationalStateAPIFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_OperationalStateAPIFrame_0Vector)
}

void PB_OperationalStateAPIFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_OperationalStateAPIFrame_0Vector::~PB_OperationalStateAPIFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_OperationalStateAPIFrame_0Vector)
  SharedDtor();
}

void PB_OperationalStateAPIFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_OperationalStateAPIFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_OperationalStateAPIFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_OperationalStateAPIFrame_0Vector_descriptor_;
}

const PB_OperationalStateAPIFrame_0Vector& PB_OperationalStateAPIFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_OperationalStateAPIFrame_0Vector* PB_OperationalStateAPIFrame_0Vector::default_instance_ = NULL;

PB_OperationalStateAPIFrame_0Vector* PB_OperationalStateAPIFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_OperationalStateAPIFrame_0Vector* n = new PB_OperationalStateAPIFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_OperationalStateAPIFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_OperationalStateAPIFrame_0Vector)
  frames_.Clear();
}

bool PB_OperationalStateAPIFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_OperationalStateAPIFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_OperationalStateAPIFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_OperationalStateAPIFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_OperationalStateAPIFrame_0Vector)
  return false;
#undef DO_
}

void PB_OperationalStateAPIFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_OperationalStateAPIFrame_0Vector)
  // repeated .PB_OperationalStateAPIFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_OperationalStateAPIFrame_0Vector)
}

::google::protobuf::uint8* PB_OperationalStateAPIFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_OperationalStateAPIFrame_0Vector)
  // repeated .PB_OperationalStateAPIFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_OperationalStateAPIFrame_0Vector)
  return target;
}

int PB_OperationalStateAPIFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_OperationalStateAPIFrame_0Vector)
  int total_size = 0;

  // repeated .PB_OperationalStateAPIFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_OperationalStateAPIFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_OperationalStateAPIFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_OperationalStateAPIFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_OperationalStateAPIFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_OperationalStateAPIFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_OperationalStateAPIFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_OperationalStateAPIFrame_0Vector::MergeFrom(const PB_OperationalStateAPIFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_OperationalStateAPIFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_OperationalStateAPIFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_OperationalStateAPIFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_OperationalStateAPIFrame_0Vector::CopyFrom(const PB_OperationalStateAPIFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_OperationalStateAPIFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OperationalStateAPIFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_OperationalStateAPIFrame_0Vector::Swap(PB_OperationalStateAPIFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_OperationalStateAPIFrame_0Vector::InternalSwap(PB_OperationalStateAPIFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_OperationalStateAPIFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_OperationalStateAPIFrame_0Vector_descriptor_;
  metadata.reflection = PB_OperationalStateAPIFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_OperationalStateAPIFrame_0Vector

// repeated .PB_OperationalStateAPIFrame_0 frames = 1;
int PB_OperationalStateAPIFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_OperationalStateAPIFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_OperationalStateAPIFrame_0& PB_OperationalStateAPIFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_OperationalStateAPIFrame_0* PB_OperationalStateAPIFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_OperationalStateAPIFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_OperationalStateAPIFrame_0* PB_OperationalStateAPIFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_OperationalStateAPIFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_OperationalStateAPIFrame_0 >*
PB_OperationalStateAPIFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_OperationalStateAPIFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_OperationalStateAPIFrame_0 >&
PB_OperationalStateAPIFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_OperationalStateAPIFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_OperationalStateAPIMatch::kTurnoutFieldNumber;
const int PB_OperationalStateAPIMatch::kTurnoutIDFieldNumber;
const int PB_OperationalStateAPIMatch::kOperationalFieldNumber;
const int PB_OperationalStateAPIMatch::kStateIDFieldNumber;
const int PB_OperationalStateAPIMatch::kTurnoutTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_OperationalStateAPIMatch::PB_OperationalStateAPIMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_OperationalStateAPIMatch)
}

void PB_OperationalStateAPIMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_OperationalStateAPIMatch::PB_OperationalStateAPIMatch(const PB_OperationalStateAPIMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_OperationalStateAPIMatch)
}

void PB_OperationalStateAPIMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  turnout_ = 0;
  turnoutid_ = 0;
  operational_ = 0;
  stateid_ = 0;
  turnouttemp_ = 0;
}

PB_OperationalStateAPIMatch::~PB_OperationalStateAPIMatch() {
  // @@protoc_insertion_point(destructor:PB_OperationalStateAPIMatch)
  SharedDtor();
}

void PB_OperationalStateAPIMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_OperationalStateAPIMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_OperationalStateAPIMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_OperationalStateAPIMatch_descriptor_;
}

const PB_OperationalStateAPIMatch& PB_OperationalStateAPIMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_OperationalStateAPIMatch* PB_OperationalStateAPIMatch::default_instance_ = NULL;

PB_OperationalStateAPIMatch* PB_OperationalStateAPIMatch::New(::google::protobuf::Arena* arena) const {
  PB_OperationalStateAPIMatch* n = new PB_OperationalStateAPIMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_OperationalStateAPIMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_OperationalStateAPIMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_OperationalStateAPIMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_OperationalStateAPIMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(turnout_, turnouttemp_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_OperationalStateAPIMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_OperationalStateAPIMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 turnout = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_turnoutID;
        break;
      }

      // optional int32 turnoutID = 2;
      case 2: {
        if (tag == 16) {
         parse_turnoutID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnoutid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_operational;
        break;
      }

      // optional int32 operational = 3;
      case 3: {
        if (tag == 24) {
         parse_operational:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operational_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_stateID;
        break;
      }

      // optional int32 stateID = 4;
      case 4: {
        if (tag == 32) {
         parse_stateID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stateid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_turnoutTemp;
        break;
      }

      // optional double turnoutTemp = 5;
      case 5: {
        if (tag == 41) {
         parse_turnoutTemp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnouttemp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_OperationalStateAPIMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_OperationalStateAPIMatch)
  return false;
#undef DO_
}

void PB_OperationalStateAPIMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_OperationalStateAPIMatch)
  // optional int32 turnout = 1;
  if (this->turnout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->turnout(), output);
  }

  // optional int32 turnoutID = 2;
  if (this->turnoutid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->turnoutid(), output);
  }

  // optional int32 operational = 3;
  if (this->operational() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->operational(), output);
  }

  // optional int32 stateID = 4;
  if (this->stateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stateid(), output);
  }

  // optional double turnoutTemp = 5;
  if (this->turnouttemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->turnouttemp(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_OperationalStateAPIMatch)
}

::google::protobuf::uint8* PB_OperationalStateAPIMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_OperationalStateAPIMatch)
  // optional int32 turnout = 1;
  if (this->turnout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->turnout(), target);
  }

  // optional int32 turnoutID = 2;
  if (this->turnoutid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->turnoutid(), target);
  }

  // optional int32 operational = 3;
  if (this->operational() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->operational(), target);
  }

  // optional int32 stateID = 4;
  if (this->stateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stateid(), target);
  }

  // optional double turnoutTemp = 5;
  if (this->turnouttemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->turnouttemp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_OperationalStateAPIMatch)
  return target;
}

int PB_OperationalStateAPIMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_OperationalStateAPIMatch)
  int total_size = 0;

  // optional int32 turnout = 1;
  if (this->turnout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnout());
  }

  // optional int32 turnoutID = 2;
  if (this->turnoutid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnoutid());
  }

  // optional int32 operational = 3;
  if (this->operational() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operational());
  }

  // optional int32 stateID = 4;
  if (this->stateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stateid());
  }

  // optional double turnoutTemp = 5;
  if (this->turnouttemp() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_OperationalStateAPIMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_OperationalStateAPIMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_OperationalStateAPIMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_OperationalStateAPIMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_OperationalStateAPIMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_OperationalStateAPIMatch)
    MergeFrom(*source);
  }
}

void PB_OperationalStateAPIMatch::MergeFrom(const PB_OperationalStateAPIMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_OperationalStateAPIMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.turnout() != 0) {
    set_turnout(from.turnout());
  }
  if (from.turnoutid() != 0) {
    set_turnoutid(from.turnoutid());
  }
  if (from.operational() != 0) {
    set_operational(from.operational());
  }
  if (from.stateid() != 0) {
    set_stateid(from.stateid());
  }
  if (from.turnouttemp() != 0) {
    set_turnouttemp(from.turnouttemp());
  }
}

void PB_OperationalStateAPIMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_OperationalStateAPIMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_OperationalStateAPIMatch::CopyFrom(const PB_OperationalStateAPIMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_OperationalStateAPIMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OperationalStateAPIMatch::IsInitialized() const {

  return true;
}

void PB_OperationalStateAPIMatch::Swap(PB_OperationalStateAPIMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_OperationalStateAPIMatch::InternalSwap(PB_OperationalStateAPIMatch* other) {
  std::swap(turnout_, other->turnout_);
  std::swap(turnoutid_, other->turnoutid_);
  std::swap(operational_, other->operational_);
  std::swap(stateid_, other->stateid_);
  std::swap(turnouttemp_, other->turnouttemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_OperationalStateAPIMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_OperationalStateAPIMatch_descriptor_;
  metadata.reflection = PB_OperationalStateAPIMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_OperationalStateAPIMatch

// optional int32 turnout = 1;
void PB_OperationalStateAPIMatch::clear_turnout() {
  turnout_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIMatch::turnout() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIMatch.turnout)
  return turnout_;
}
 void PB_OperationalStateAPIMatch::set_turnout(::google::protobuf::int32 value) {
  
  turnout_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIMatch.turnout)
}

// optional int32 turnoutID = 2;
void PB_OperationalStateAPIMatch::clear_turnoutid() {
  turnoutid_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIMatch::turnoutid() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIMatch.turnoutID)
  return turnoutid_;
}
 void PB_OperationalStateAPIMatch::set_turnoutid(::google::protobuf::int32 value) {
  
  turnoutid_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIMatch.turnoutID)
}

// optional int32 operational = 3;
void PB_OperationalStateAPIMatch::clear_operational() {
  operational_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIMatch::operational() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIMatch.operational)
  return operational_;
}
 void PB_OperationalStateAPIMatch::set_operational(::google::protobuf::int32 value) {
  
  operational_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIMatch.operational)
}

// optional int32 stateID = 4;
void PB_OperationalStateAPIMatch::clear_stateid() {
  stateid_ = 0;
}
 ::google::protobuf::int32 PB_OperationalStateAPIMatch::stateid() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIMatch.stateID)
  return stateid_;
}
 void PB_OperationalStateAPIMatch::set_stateid(::google::protobuf::int32 value) {
  
  stateid_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIMatch.stateID)
}

// optional double turnoutTemp = 5;
void PB_OperationalStateAPIMatch::clear_turnouttemp() {
  turnouttemp_ = 0;
}
 double PB_OperationalStateAPIMatch::turnouttemp() const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIMatch.turnoutTemp)
  return turnouttemp_;
}
 void PB_OperationalStateAPIMatch::set_turnouttemp(double value) {
  
  turnouttemp_ = value;
  // @@protoc_insertion_point(field_set:PB_OperationalStateAPIMatch.turnoutTemp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_OperationalStateAPIMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_OperationalStateAPIMatchSet::PB_OperationalStateAPIMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_OperationalStateAPIMatchSet)
}

void PB_OperationalStateAPIMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_OperationalStateAPIMatchSet::PB_OperationalStateAPIMatchSet(const PB_OperationalStateAPIMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_OperationalStateAPIMatchSet)
}

void PB_OperationalStateAPIMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_OperationalStateAPIMatchSet::~PB_OperationalStateAPIMatchSet() {
  // @@protoc_insertion_point(destructor:PB_OperationalStateAPIMatchSet)
  SharedDtor();
}

void PB_OperationalStateAPIMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_OperationalStateAPIMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_OperationalStateAPIMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_OperationalStateAPIMatchSet_descriptor_;
}

const PB_OperationalStateAPIMatchSet& PB_OperationalStateAPIMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_OperationalStateAPIMatchSet* PB_OperationalStateAPIMatchSet::default_instance_ = NULL;

PB_OperationalStateAPIMatchSet* PB_OperationalStateAPIMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_OperationalStateAPIMatchSet* n = new PB_OperationalStateAPIMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_OperationalStateAPIMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_OperationalStateAPIMatchSet)
  matches_.Clear();
}

bool PB_OperationalStateAPIMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_OperationalStateAPIMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_OperationalStateAPIMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_OperationalStateAPIMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_OperationalStateAPIMatchSet)
  return false;
#undef DO_
}

void PB_OperationalStateAPIMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_OperationalStateAPIMatchSet)
  // repeated .PB_OperationalStateAPIMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_OperationalStateAPIMatchSet)
}

::google::protobuf::uint8* PB_OperationalStateAPIMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_OperationalStateAPIMatchSet)
  // repeated .PB_OperationalStateAPIMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_OperationalStateAPIMatchSet)
  return target;
}

int PB_OperationalStateAPIMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_OperationalStateAPIMatchSet)
  int total_size = 0;

  // repeated .PB_OperationalStateAPIMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_OperationalStateAPIMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_OperationalStateAPIMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_OperationalStateAPIMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_OperationalStateAPIMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_OperationalStateAPIMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_OperationalStateAPIMatchSet)
    MergeFrom(*source);
  }
}

void PB_OperationalStateAPIMatchSet::MergeFrom(const PB_OperationalStateAPIMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_OperationalStateAPIMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_OperationalStateAPIMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_OperationalStateAPIMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_OperationalStateAPIMatchSet::CopyFrom(const PB_OperationalStateAPIMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_OperationalStateAPIMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OperationalStateAPIMatchSet::IsInitialized() const {

  return true;
}

void PB_OperationalStateAPIMatchSet::Swap(PB_OperationalStateAPIMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_OperationalStateAPIMatchSet::InternalSwap(PB_OperationalStateAPIMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_OperationalStateAPIMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_OperationalStateAPIMatchSet_descriptor_;
  metadata.reflection = PB_OperationalStateAPIMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_OperationalStateAPIMatchSet

// repeated .PB_OperationalStateAPIMatch matches = 1;
int PB_OperationalStateAPIMatchSet::matches_size() const {
  return matches_.size();
}
void PB_OperationalStateAPIMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_OperationalStateAPIMatch& PB_OperationalStateAPIMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_OperationalStateAPIMatchSet.matches)
  return matches_.Get(index);
}
::PB_OperationalStateAPIMatch* PB_OperationalStateAPIMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_OperationalStateAPIMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_OperationalStateAPIMatch* PB_OperationalStateAPIMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_OperationalStateAPIMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_OperationalStateAPIMatch >*
PB_OperationalStateAPIMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_OperationalStateAPIMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_OperationalStateAPIMatch >&
PB_OperationalStateAPIMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_OperationalStateAPIMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_FrozenStateAPIFrame_0::k0FieldNumber;
const int PB_FrozenStateAPIFrame_0::k1FieldNumber;
const int PB_FrozenStateAPIFrame_0::k2FieldNumber;
const int PB_FrozenStateAPIFrame_0::k3FieldNumber;
const int PB_FrozenStateAPIFrame_0::k4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_FrozenStateAPIFrame_0::PB_FrozenStateAPIFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_FrozenStateAPIFrame_0)
}

void PB_FrozenStateAPIFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_FrozenStateAPIFrame_0::PB_FrozenStateAPIFrame_0(const PB_FrozenStateAPIFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_FrozenStateAPIFrame_0)
}

void PB_FrozenStateAPIFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
  _4_ = 0;
}

PB_FrozenStateAPIFrame_0::~PB_FrozenStateAPIFrame_0() {
  // @@protoc_insertion_point(destructor:PB_FrozenStateAPIFrame_0)
  SharedDtor();
}

void PB_FrozenStateAPIFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_FrozenStateAPIFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_FrozenStateAPIFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_FrozenStateAPIFrame_0_descriptor_;
}

const PB_FrozenStateAPIFrame_0& PB_FrozenStateAPIFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_FrozenStateAPIFrame_0* PB_FrozenStateAPIFrame_0::default_instance_ = NULL;

PB_FrozenStateAPIFrame_0* PB_FrozenStateAPIFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_FrozenStateAPIFrame_0* n = new PB_FrozenStateAPIFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_FrozenStateAPIFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_FrozenStateAPIFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_FrozenStateAPIFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_FrozenStateAPIFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _4_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_FrozenStateAPIFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_FrozenStateAPIFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse__4;
        break;
      }

      // optional double _4 = 5;
      case 5: {
        if (tag == 41) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_FrozenStateAPIFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_FrozenStateAPIFrame_0)
  return false;
#undef DO_
}

void PB_FrozenStateAPIFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_FrozenStateAPIFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // optional double _4 = 5;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->_4(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_FrozenStateAPIFrame_0)
}

::google::protobuf::uint8* PB_FrozenStateAPIFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_FrozenStateAPIFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // optional double _4 = 5;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->_4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_FrozenStateAPIFrame_0)
  return target;
}

int PB_FrozenStateAPIFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_FrozenStateAPIFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  // optional double _4 = 5;
  if (this->_4() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_FrozenStateAPIFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_FrozenStateAPIFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_FrozenStateAPIFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_FrozenStateAPIFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_FrozenStateAPIFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_FrozenStateAPIFrame_0)
    MergeFrom(*source);
  }
}

void PB_FrozenStateAPIFrame_0::MergeFrom(const PB_FrozenStateAPIFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_FrozenStateAPIFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
}

void PB_FrozenStateAPIFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_FrozenStateAPIFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_FrozenStateAPIFrame_0::CopyFrom(const PB_FrozenStateAPIFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_FrozenStateAPIFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FrozenStateAPIFrame_0::IsInitialized() const {

  return true;
}

void PB_FrozenStateAPIFrame_0::Swap(PB_FrozenStateAPIFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_FrozenStateAPIFrame_0::InternalSwap(PB_FrozenStateAPIFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  std::swap(_4_, other->_4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_FrozenStateAPIFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_FrozenStateAPIFrame_0_descriptor_;
  metadata.reflection = PB_FrozenStateAPIFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_FrozenStateAPIFrame_0

// optional int32 _0 = 1;
void PB_FrozenStateAPIFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIFrame_0._0)
  return _0_;
}
 void PB_FrozenStateAPIFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIFrame_0._0)
}

// optional int32 _1 = 2;
void PB_FrozenStateAPIFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIFrame_0._1)
  return _1_;
}
 void PB_FrozenStateAPIFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIFrame_0._1)
}

// optional int32 _2 = 3;
void PB_FrozenStateAPIFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIFrame_0._2)
  return _2_;
}
 void PB_FrozenStateAPIFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIFrame_0._2)
}

// optional int32 _3 = 4;
void PB_FrozenStateAPIFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_FrozenStateAPIFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIFrame_0._3)
  return _3_;
}
 void PB_FrozenStateAPIFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIFrame_0._3)
}

// optional double _4 = 5;
void PB_FrozenStateAPIFrame_0::clear__4() {
  _4_ = 0;
}
 double PB_FrozenStateAPIFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIFrame_0._4)
  return _4_;
}
 void PB_FrozenStateAPIFrame_0::set__4(double value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_FrozenStateAPIFrame_0._4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_FrozenStateAPIFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_FrozenStateAPIFrame_0Vector::PB_FrozenStateAPIFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_FrozenStateAPIFrame_0Vector)
}

void PB_FrozenStateAPIFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_FrozenStateAPIFrame_0Vector::PB_FrozenStateAPIFrame_0Vector(const PB_FrozenStateAPIFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_FrozenStateAPIFrame_0Vector)
}

void PB_FrozenStateAPIFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_FrozenStateAPIFrame_0Vector::~PB_FrozenStateAPIFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_FrozenStateAPIFrame_0Vector)
  SharedDtor();
}

void PB_FrozenStateAPIFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_FrozenStateAPIFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_FrozenStateAPIFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_FrozenStateAPIFrame_0Vector_descriptor_;
}

const PB_FrozenStateAPIFrame_0Vector& PB_FrozenStateAPIFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDerivedInput_2eproto();
  return *default_instance_;
}

PB_FrozenStateAPIFrame_0Vector* PB_FrozenStateAPIFrame_0Vector::default_instance_ = NULL;

PB_FrozenStateAPIFrame_0Vector* PB_FrozenStateAPIFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_FrozenStateAPIFrame_0Vector* n = new PB_FrozenStateAPIFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_FrozenStateAPIFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_FrozenStateAPIFrame_0Vector)
  frames_.Clear();
}

bool PB_FrozenStateAPIFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_FrozenStateAPIFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_FrozenStateAPIFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_FrozenStateAPIFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_FrozenStateAPIFrame_0Vector)
  return false;
#undef DO_
}

void PB_FrozenStateAPIFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_FrozenStateAPIFrame_0Vector)
  // repeated .PB_FrozenStateAPIFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_FrozenStateAPIFrame_0Vector)
}

::google::protobuf::uint8* PB_FrozenStateAPIFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_FrozenStateAPIFrame_0Vector)
  // repeated .PB_FrozenStateAPIFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_FrozenStateAPIFrame_0Vector)
  return target;
}

int PB_FrozenStateAPIFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_FrozenStateAPIFrame_0Vector)
  int total_size = 0;

  // repeated .PB_FrozenStateAPIFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_FrozenStateAPIFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_FrozenStateAPIFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_FrozenStateAPIFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_FrozenStateAPIFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_FrozenStateAPIFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_FrozenStateAPIFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_FrozenStateAPIFrame_0Vector::MergeFrom(const PB_FrozenStateAPIFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_FrozenStateAPIFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_FrozenStateAPIFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_FrozenStateAPIFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_FrozenStateAPIFrame_0Vector::CopyFrom(const PB_FrozenStateAPIFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_FrozenStateAPIFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FrozenStateAPIFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_FrozenStateAPIFrame_0Vector::Swap(PB_FrozenStateAPIFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_FrozenStateAPIFrame_0Vector::InternalSwap(PB_FrozenStateAPIFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_FrozenStateAPIFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_FrozenStateAPIFrame_0Vector_descriptor_;
  metadata.reflection = PB_FrozenStateAPIFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_FrozenStateAPIFrame_0Vector

// repeated .PB_FrozenStateAPIFrame_0 frames = 1;
int PB_FrozenStateAPIFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_FrozenStateAPIFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_FrozenStateAPIFrame_0& PB_FrozenStateAPIFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_FrozenStateAPIFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_FrozenStateAPIFrame_0* PB_FrozenStateAPIFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_FrozenStateAPIFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_FrozenStateAPIFrame_0* PB_FrozenStateAPIFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_FrozenStateAPIFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_FrozenStateAPIFrame_0 >*
PB_FrozenStateAPIFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_FrozenStateAPIFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_FrozenStateAPIFrame_0 >&
PB_FrozenStateAPIFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_FrozenStateAPIFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
