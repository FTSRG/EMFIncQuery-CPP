// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB_DistributedQueries.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PB_DistributedQueries.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_CheckingHellMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CheckingHellMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CheckingHellMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CheckingHellMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ShouldCollideFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ShouldCollideFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ShouldCollideFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ShouldCollideFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CheckingHellFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CheckingHellFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CheckingHellFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CheckingHellFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsDangerousFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ShouldCollideMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ShouldCollideMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_ShouldCollideMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_ShouldCollideMatchSet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PB_5fDistributedQueries_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PB_5fDistributedQueries_2eproto() {
  protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PB_DistributedQueries.proto");
  GOOGLE_CHECK(file != NULL);
  PB_CheckingHellMatch_descriptor_ = file->message_type(0);
  static const int PB_CheckingHellMatch_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatch, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatch, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatch, d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatch, s_),
  };
  PB_CheckingHellMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CheckingHellMatch_descriptor_,
      PB_CheckingHellMatch::default_instance_,
      PB_CheckingHellMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CheckingHellMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatch, _is_default_instance_));
  PB_CheckingHellMatchSet_descriptor_ = file->message_type(1);
  static const int PB_CheckingHellMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatchSet, matches_),
  };
  PB_CheckingHellMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CheckingHellMatchSet_descriptor_,
      PB_CheckingHellMatchSet::default_instance_,
      PB_CheckingHellMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CheckingHellMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellMatchSet, _is_default_instance_));
  PB_ShouldCollideFrame_0_descriptor_ = file->message_type(2);
  static const int PB_ShouldCollideFrame_0_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0, _1_),
  };
  PB_ShouldCollideFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_ShouldCollideFrame_0_descriptor_,
      PB_ShouldCollideFrame_0::default_instance_,
      PB_ShouldCollideFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_ShouldCollideFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0, _is_default_instance_));
  PB_ShouldCollideFrame_0Vector_descriptor_ = file->message_type(3);
  static const int PB_ShouldCollideFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0Vector, frames_),
  };
  PB_ShouldCollideFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_ShouldCollideFrame_0Vector_descriptor_,
      PB_ShouldCollideFrame_0Vector::default_instance_,
      PB_ShouldCollideFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_ShouldCollideFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideFrame_0Vector, _is_default_instance_));
  PB_CheckingHellFrame_0_descriptor_ = file->message_type(4);
  static const int PB_CheckingHellFrame_0_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _6_),
  };
  PB_CheckingHellFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CheckingHellFrame_0_descriptor_,
      PB_CheckingHellFrame_0::default_instance_,
      PB_CheckingHellFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CheckingHellFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0, _is_default_instance_));
  PB_CheckingHellFrame_0Vector_descriptor_ = file->message_type(5);
  static const int PB_CheckingHellFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0Vector, frames_),
  };
  PB_CheckingHellFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CheckingHellFrame_0Vector_descriptor_,
      PB_CheckingHellFrame_0Vector::default_instance_,
      PB_CheckingHellFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CheckingHellFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CheckingHellFrame_0Vector, _is_default_instance_));
  PB_IsDangerousMatch_descriptor_ = file->message_type(6);
  static const int PB_IsDangerousMatch_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, segment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, turnout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, train_),
  };
  PB_IsDangerousMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousMatch_descriptor_,
      PB_IsDangerousMatch::default_instance_,
      PB_IsDangerousMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatch, _is_default_instance_));
  PB_IsDangerousMatchSet_descriptor_ = file->message_type(7);
  static const int PB_IsDangerousMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatchSet, matches_),
  };
  PB_IsDangerousMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousMatchSet_descriptor_,
      PB_IsDangerousMatchSet::default_instance_,
      PB_IsDangerousMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousMatchSet, _is_default_instance_));
  PB_IsDangerousFrame_0_descriptor_ = file->message_type(8);
  static const int PB_IsDangerousFrame_0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _3_),
  };
  PB_IsDangerousFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousFrame_0_descriptor_,
      PB_IsDangerousFrame_0::default_instance_,
      PB_IsDangerousFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0, _is_default_instance_));
  PB_IsDangerousFrame_0Vector_descriptor_ = file->message_type(9);
  static const int PB_IsDangerousFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0Vector, frames_),
  };
  PB_IsDangerousFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsDangerousFrame_0Vector_descriptor_,
      PB_IsDangerousFrame_0Vector::default_instance_,
      PB_IsDangerousFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsDangerousFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsDangerousFrame_0Vector, _is_default_instance_));
  PB_ShouldCollideMatch_descriptor_ = file->message_type(10);
  static const int PB_ShouldCollideMatch_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatch, rp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatch, tr_),
  };
  PB_ShouldCollideMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_ShouldCollideMatch_descriptor_,
      PB_ShouldCollideMatch::default_instance_,
      PB_ShouldCollideMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_ShouldCollideMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatch, _is_default_instance_));
  PB_ShouldCollideMatchSet_descriptor_ = file->message_type(11);
  static const int PB_ShouldCollideMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatchSet, matches_),
  };
  PB_ShouldCollideMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_ShouldCollideMatchSet_descriptor_,
      PB_ShouldCollideMatchSet::default_instance_,
      PB_ShouldCollideMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_ShouldCollideMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_ShouldCollideMatchSet, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PB_5fDistributedQueries_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CheckingHellMatch_descriptor_, &PB_CheckingHellMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CheckingHellMatchSet_descriptor_, &PB_CheckingHellMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_ShouldCollideFrame_0_descriptor_, &PB_ShouldCollideFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_ShouldCollideFrame_0Vector_descriptor_, &PB_ShouldCollideFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CheckingHellFrame_0_descriptor_, &PB_CheckingHellFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CheckingHellFrame_0Vector_descriptor_, &PB_CheckingHellFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousMatch_descriptor_, &PB_IsDangerousMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousMatchSet_descriptor_, &PB_IsDangerousMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousFrame_0_descriptor_, &PB_IsDangerousFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsDangerousFrame_0Vector_descriptor_, &PB_IsDangerousFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_ShouldCollideMatch_descriptor_, &PB_ShouldCollideMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_ShouldCollideMatchSet_descriptor_, &PB_ShouldCollideMatchSet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PB_5fDistributedQueries_2eproto() {
  delete PB_CheckingHellMatch::default_instance_;
  delete PB_CheckingHellMatch_reflection_;
  delete PB_CheckingHellMatchSet::default_instance_;
  delete PB_CheckingHellMatchSet_reflection_;
  delete PB_ShouldCollideFrame_0::default_instance_;
  delete PB_ShouldCollideFrame_0_reflection_;
  delete PB_ShouldCollideFrame_0Vector::default_instance_;
  delete PB_ShouldCollideFrame_0Vector_reflection_;
  delete PB_CheckingHellFrame_0::default_instance_;
  delete PB_CheckingHellFrame_0_reflection_;
  delete PB_CheckingHellFrame_0Vector::default_instance_;
  delete PB_CheckingHellFrame_0Vector_reflection_;
  delete PB_IsDangerousMatch::default_instance_;
  delete PB_IsDangerousMatch_reflection_;
  delete PB_IsDangerousMatchSet::default_instance_;
  delete PB_IsDangerousMatchSet_reflection_;
  delete PB_IsDangerousFrame_0::default_instance_;
  delete PB_IsDangerousFrame_0_reflection_;
  delete PB_IsDangerousFrame_0Vector::default_instance_;
  delete PB_IsDangerousFrame_0Vector_reflection_;
  delete PB_ShouldCollideMatch::default_instance_;
  delete PB_ShouldCollideMatch_reflection_;
  delete PB_ShouldCollideMatchSet::default_instance_;
  delete PB_ShouldCollideMatchSet_reflection_;
}

void protobuf_AddDesc_PB_5fDistributedQueries_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_PB_5fDistributedQueries_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033PB_DistributedQueries.proto\"B\n\024PB_Chec"
    "kingHellMatch\022\t\n\001a\030\001 \001(\005\022\t\n\001b\030\002 \001(\005\022\t\n\001d"
    "\030\003 \001(\001\022\t\n\001s\030\004 \001(\t\"A\n\027PB_CheckingHellMatc"
    "hSet\022&\n\007matches\030\001 \003(\0132\025.PB_CheckingHellM"
    "atch\"1\n\027PB_ShouldCollideFrame_0\022\n\n\002_0\030\001 "
    "\001(\005\022\n\n\002_1\030\002 \001(\005\"I\n\035PB_ShouldCollideFrame"
    "_0Vector\022(\n\006frames\030\001 \003(\0132\030.PB_ShouldColl"
    "ideFrame_0\"l\n\026PB_CheckingHellFrame_0\022\n\n\002"
    "_0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\001\022\n\n\002_3\030\004"
    " \001(\t\022\n\n\002_4\030\005 \001(\005\022\n\n\002_5\030\006 \001(\005\022\n\n\002_6\030\007 \001(\005"
    "\"G\n\034PB_CheckingHellFrame_0Vector\022\'\n\006fram"
    "es\030\001 \003(\0132\027.PB_CheckingHellFrame_0\"F\n\023PB_"
    "IsDangerousMatch\022\017\n\007segment\030\001 \001(\005\022\017\n\007tur"
    "nout\030\002 \001(\005\022\r\n\005train\030\003 \001(\005\"\?\n\026PB_IsDanger"
    "ousMatchSet\022%\n\007matches\030\001 \003(\0132\024.PB_IsDang"
    "erousMatch\"G\n\025PB_IsDangerousFrame_0\022\n\n\002_"
    "0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\022\n\n\002_3\030\004 "
    "\001(\005\"E\n\033PB_IsDangerousFrame_0Vector\022&\n\006fr"
    "ames\030\001 \003(\0132\026.PB_IsDangerousFrame_0\"/\n\025PB"
    "_ShouldCollideMatch\022\n\n\002rp\030\001 \001(\005\022\n\n\002tr\030\002 "
    "\001(\005\"C\n\030PB_ShouldCollideMatchSet\022\'\n\007match"
    "es\030\001 \003(\0132\026.PB_ShouldCollideMatchb\006proto3", 880);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PB_DistributedQueries.proto", &protobuf_RegisterTypes);
  PB_CheckingHellMatch::default_instance_ = new PB_CheckingHellMatch();
  PB_CheckingHellMatchSet::default_instance_ = new PB_CheckingHellMatchSet();
  PB_ShouldCollideFrame_0::default_instance_ = new PB_ShouldCollideFrame_0();
  PB_ShouldCollideFrame_0Vector::default_instance_ = new PB_ShouldCollideFrame_0Vector();
  PB_CheckingHellFrame_0::default_instance_ = new PB_CheckingHellFrame_0();
  PB_CheckingHellFrame_0Vector::default_instance_ = new PB_CheckingHellFrame_0Vector();
  PB_IsDangerousMatch::default_instance_ = new PB_IsDangerousMatch();
  PB_IsDangerousMatchSet::default_instance_ = new PB_IsDangerousMatchSet();
  PB_IsDangerousFrame_0::default_instance_ = new PB_IsDangerousFrame_0();
  PB_IsDangerousFrame_0Vector::default_instance_ = new PB_IsDangerousFrame_0Vector();
  PB_ShouldCollideMatch::default_instance_ = new PB_ShouldCollideMatch();
  PB_ShouldCollideMatchSet::default_instance_ = new PB_ShouldCollideMatchSet();
  PB_CheckingHellMatch::default_instance_->InitAsDefaultInstance();
  PB_CheckingHellMatchSet::default_instance_->InitAsDefaultInstance();
  PB_ShouldCollideFrame_0::default_instance_->InitAsDefaultInstance();
  PB_ShouldCollideFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_CheckingHellFrame_0::default_instance_->InitAsDefaultInstance();
  PB_CheckingHellFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousMatch::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousMatchSet::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousFrame_0::default_instance_->InitAsDefaultInstance();
  PB_IsDangerousFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_ShouldCollideMatch::default_instance_->InitAsDefaultInstance();
  PB_ShouldCollideMatchSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PB_5fDistributedQueries_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PB_5fDistributedQueries_2eproto {
  StaticDescriptorInitializer_PB_5fDistributedQueries_2eproto() {
    protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  }
} static_descriptor_initializer_PB_5fDistributedQueries_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CheckingHellMatch::kAFieldNumber;
const int PB_CheckingHellMatch::kBFieldNumber;
const int PB_CheckingHellMatch::kDFieldNumber;
const int PB_CheckingHellMatch::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CheckingHellMatch::PB_CheckingHellMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CheckingHellMatch)
}

void PB_CheckingHellMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CheckingHellMatch::PB_CheckingHellMatch(const PB_CheckingHellMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CheckingHellMatch)
}

void PB_CheckingHellMatch::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  b_ = 0;
  d_ = 0;
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PB_CheckingHellMatch::~PB_CheckingHellMatch() {
  // @@protoc_insertion_point(destructor:PB_CheckingHellMatch)
  SharedDtor();
}

void PB_CheckingHellMatch::SharedDtor() {
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PB_CheckingHellMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CheckingHellMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CheckingHellMatch_descriptor_;
}

const PB_CheckingHellMatch& PB_CheckingHellMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_CheckingHellMatch* PB_CheckingHellMatch::default_instance_ = NULL;

PB_CheckingHellMatch* PB_CheckingHellMatch::New(::google::protobuf::Arena* arena) const {
  PB_CheckingHellMatch* n = new PB_CheckingHellMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CheckingHellMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CheckingHellMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_CheckingHellMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_CheckingHellMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, d_);
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PB_CheckingHellMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CheckingHellMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // optional int32 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_d;
        break;
      }

      // optional double d = 3;
      case 3: {
        if (tag == 25) {
         parse_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_s;
        break;
      }

      // optional string s = 4;
      case 4: {
        if (tag == 34) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->s().data(), this->s().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB_CheckingHellMatch.s"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CheckingHellMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CheckingHellMatch)
  return false;
#undef DO_
}

void PB_CheckingHellMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CheckingHellMatch)
  // optional int32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // optional double d = 3;
  if (this->d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->d(), output);
  }

  // optional string s = 4;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB_CheckingHellMatch.s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->s(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CheckingHellMatch)
}

::google::protobuf::uint8* PB_CheckingHellMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CheckingHellMatch)
  // optional int32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // optional double d = 3;
  if (this->d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->d(), target);
  }

  // optional string s = 4;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB_CheckingHellMatch.s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->s(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CheckingHellMatch)
  return target;
}

int PB_CheckingHellMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CheckingHellMatch)
  int total_size = 0;

  // optional int32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  // optional double d = 3;
  if (this->d() != 0) {
    total_size += 1 + 8;
  }

  // optional string s = 4;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CheckingHellMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CheckingHellMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CheckingHellMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CheckingHellMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CheckingHellMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CheckingHellMatch)
    MergeFrom(*source);
  }
}

void PB_CheckingHellMatch::MergeFrom(const PB_CheckingHellMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CheckingHellMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
  if (from.d() != 0) {
    set_d(from.d());
  }
  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
}

void PB_CheckingHellMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CheckingHellMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CheckingHellMatch::CopyFrom(const PB_CheckingHellMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CheckingHellMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CheckingHellMatch::IsInitialized() const {

  return true;
}

void PB_CheckingHellMatch::Swap(PB_CheckingHellMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CheckingHellMatch::InternalSwap(PB_CheckingHellMatch* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  std::swap(d_, other->d_);
  s_.Swap(&other->s_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CheckingHellMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CheckingHellMatch_descriptor_;
  metadata.reflection = PB_CheckingHellMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CheckingHellMatch

// optional int32 a = 1;
void PB_CheckingHellMatch::clear_a() {
  a_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellMatch::a() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellMatch.a)
  return a_;
}
 void PB_CheckingHellMatch::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellMatch.a)
}

// optional int32 b = 2;
void PB_CheckingHellMatch::clear_b() {
  b_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellMatch::b() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellMatch.b)
  return b_;
}
 void PB_CheckingHellMatch::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellMatch.b)
}

// optional double d = 3;
void PB_CheckingHellMatch::clear_d() {
  d_ = 0;
}
 double PB_CheckingHellMatch::d() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellMatch.d)
  return d_;
}
 void PB_CheckingHellMatch::set_d(double value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellMatch.d)
}

// optional string s = 4;
void PB_CheckingHellMatch::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PB_CheckingHellMatch::s() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellMatch.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_CheckingHellMatch::set_s(const ::std::string& value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB_CheckingHellMatch.s)
}
 void PB_CheckingHellMatch::set_s(const char* value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB_CheckingHellMatch.s)
}
 void PB_CheckingHellMatch::set_s(const char* value, size_t size) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB_CheckingHellMatch.s)
}
 ::std::string* PB_CheckingHellMatch::mutable_s() {
  
  // @@protoc_insertion_point(field_mutable:PB_CheckingHellMatch.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PB_CheckingHellMatch::release_s() {
  // @@protoc_insertion_point(field_release:PB_CheckingHellMatch.s)
  
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_CheckingHellMatch::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    
  } else {
    
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:PB_CheckingHellMatch.s)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CheckingHellMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CheckingHellMatchSet::PB_CheckingHellMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CheckingHellMatchSet)
}

void PB_CheckingHellMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CheckingHellMatchSet::PB_CheckingHellMatchSet(const PB_CheckingHellMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CheckingHellMatchSet)
}

void PB_CheckingHellMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_CheckingHellMatchSet::~PB_CheckingHellMatchSet() {
  // @@protoc_insertion_point(destructor:PB_CheckingHellMatchSet)
  SharedDtor();
}

void PB_CheckingHellMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_CheckingHellMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CheckingHellMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CheckingHellMatchSet_descriptor_;
}

const PB_CheckingHellMatchSet& PB_CheckingHellMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_CheckingHellMatchSet* PB_CheckingHellMatchSet::default_instance_ = NULL;

PB_CheckingHellMatchSet* PB_CheckingHellMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_CheckingHellMatchSet* n = new PB_CheckingHellMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CheckingHellMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CheckingHellMatchSet)
  matches_.Clear();
}

bool PB_CheckingHellMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CheckingHellMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_CheckingHellMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CheckingHellMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CheckingHellMatchSet)
  return false;
#undef DO_
}

void PB_CheckingHellMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CheckingHellMatchSet)
  // repeated .PB_CheckingHellMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CheckingHellMatchSet)
}

::google::protobuf::uint8* PB_CheckingHellMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CheckingHellMatchSet)
  // repeated .PB_CheckingHellMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CheckingHellMatchSet)
  return target;
}

int PB_CheckingHellMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CheckingHellMatchSet)
  int total_size = 0;

  // repeated .PB_CheckingHellMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CheckingHellMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CheckingHellMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CheckingHellMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CheckingHellMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CheckingHellMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CheckingHellMatchSet)
    MergeFrom(*source);
  }
}

void PB_CheckingHellMatchSet::MergeFrom(const PB_CheckingHellMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CheckingHellMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_CheckingHellMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CheckingHellMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CheckingHellMatchSet::CopyFrom(const PB_CheckingHellMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CheckingHellMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CheckingHellMatchSet::IsInitialized() const {

  return true;
}

void PB_CheckingHellMatchSet::Swap(PB_CheckingHellMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CheckingHellMatchSet::InternalSwap(PB_CheckingHellMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CheckingHellMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CheckingHellMatchSet_descriptor_;
  metadata.reflection = PB_CheckingHellMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CheckingHellMatchSet

// repeated .PB_CheckingHellMatch matches = 1;
int PB_CheckingHellMatchSet::matches_size() const {
  return matches_.size();
}
void PB_CheckingHellMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_CheckingHellMatch& PB_CheckingHellMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellMatchSet.matches)
  return matches_.Get(index);
}
::PB_CheckingHellMatch* PB_CheckingHellMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_CheckingHellMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_CheckingHellMatch* PB_CheckingHellMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_CheckingHellMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_CheckingHellMatch >*
PB_CheckingHellMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_CheckingHellMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_CheckingHellMatch >&
PB_CheckingHellMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_CheckingHellMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_ShouldCollideFrame_0::k0FieldNumber;
const int PB_ShouldCollideFrame_0::k1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_ShouldCollideFrame_0::PB_ShouldCollideFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_ShouldCollideFrame_0)
}

void PB_ShouldCollideFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_ShouldCollideFrame_0::PB_ShouldCollideFrame_0(const PB_ShouldCollideFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_ShouldCollideFrame_0)
}

void PB_ShouldCollideFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
}

PB_ShouldCollideFrame_0::~PB_ShouldCollideFrame_0() {
  // @@protoc_insertion_point(destructor:PB_ShouldCollideFrame_0)
  SharedDtor();
}

void PB_ShouldCollideFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_ShouldCollideFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ShouldCollideFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ShouldCollideFrame_0_descriptor_;
}

const PB_ShouldCollideFrame_0& PB_ShouldCollideFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_ShouldCollideFrame_0* PB_ShouldCollideFrame_0::default_instance_ = NULL;

PB_ShouldCollideFrame_0* PB_ShouldCollideFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_ShouldCollideFrame_0* n = new PB_ShouldCollideFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_ShouldCollideFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_ShouldCollideFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_ShouldCollideFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_ShouldCollideFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _1_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_ShouldCollideFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_ShouldCollideFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_ShouldCollideFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_ShouldCollideFrame_0)
  return false;
#undef DO_
}

void PB_ShouldCollideFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_ShouldCollideFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_ShouldCollideFrame_0)
}

::google::protobuf::uint8* PB_ShouldCollideFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_ShouldCollideFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_ShouldCollideFrame_0)
  return target;
}

int PB_ShouldCollideFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_ShouldCollideFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ShouldCollideFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_ShouldCollideFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_ShouldCollideFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_ShouldCollideFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_ShouldCollideFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_ShouldCollideFrame_0)
    MergeFrom(*source);
  }
}

void PB_ShouldCollideFrame_0::MergeFrom(const PB_ShouldCollideFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_ShouldCollideFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
}

void PB_ShouldCollideFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_ShouldCollideFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ShouldCollideFrame_0::CopyFrom(const PB_ShouldCollideFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_ShouldCollideFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ShouldCollideFrame_0::IsInitialized() const {

  return true;
}

void PB_ShouldCollideFrame_0::Swap(PB_ShouldCollideFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_ShouldCollideFrame_0::InternalSwap(PB_ShouldCollideFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_ShouldCollideFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ShouldCollideFrame_0_descriptor_;
  metadata.reflection = PB_ShouldCollideFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_ShouldCollideFrame_0

// optional int32 _0 = 1;
void PB_ShouldCollideFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_ShouldCollideFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_ShouldCollideFrame_0._0)
  return _0_;
}
 void PB_ShouldCollideFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_ShouldCollideFrame_0._0)
}

// optional int32 _1 = 2;
void PB_ShouldCollideFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_ShouldCollideFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_ShouldCollideFrame_0._1)
  return _1_;
}
 void PB_ShouldCollideFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_ShouldCollideFrame_0._1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_ShouldCollideFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_ShouldCollideFrame_0Vector::PB_ShouldCollideFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_ShouldCollideFrame_0Vector)
}

void PB_ShouldCollideFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_ShouldCollideFrame_0Vector::PB_ShouldCollideFrame_0Vector(const PB_ShouldCollideFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_ShouldCollideFrame_0Vector)
}

void PB_ShouldCollideFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_ShouldCollideFrame_0Vector::~PB_ShouldCollideFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_ShouldCollideFrame_0Vector)
  SharedDtor();
}

void PB_ShouldCollideFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_ShouldCollideFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ShouldCollideFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ShouldCollideFrame_0Vector_descriptor_;
}

const PB_ShouldCollideFrame_0Vector& PB_ShouldCollideFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_ShouldCollideFrame_0Vector* PB_ShouldCollideFrame_0Vector::default_instance_ = NULL;

PB_ShouldCollideFrame_0Vector* PB_ShouldCollideFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_ShouldCollideFrame_0Vector* n = new PB_ShouldCollideFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_ShouldCollideFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_ShouldCollideFrame_0Vector)
  frames_.Clear();
}

bool PB_ShouldCollideFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_ShouldCollideFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_ShouldCollideFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_ShouldCollideFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_ShouldCollideFrame_0Vector)
  return false;
#undef DO_
}

void PB_ShouldCollideFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_ShouldCollideFrame_0Vector)
  // repeated .PB_ShouldCollideFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_ShouldCollideFrame_0Vector)
}

::google::protobuf::uint8* PB_ShouldCollideFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_ShouldCollideFrame_0Vector)
  // repeated .PB_ShouldCollideFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_ShouldCollideFrame_0Vector)
  return target;
}

int PB_ShouldCollideFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_ShouldCollideFrame_0Vector)
  int total_size = 0;

  // repeated .PB_ShouldCollideFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ShouldCollideFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_ShouldCollideFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_ShouldCollideFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_ShouldCollideFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_ShouldCollideFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_ShouldCollideFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_ShouldCollideFrame_0Vector::MergeFrom(const PB_ShouldCollideFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_ShouldCollideFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_ShouldCollideFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_ShouldCollideFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ShouldCollideFrame_0Vector::CopyFrom(const PB_ShouldCollideFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_ShouldCollideFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ShouldCollideFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_ShouldCollideFrame_0Vector::Swap(PB_ShouldCollideFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_ShouldCollideFrame_0Vector::InternalSwap(PB_ShouldCollideFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_ShouldCollideFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ShouldCollideFrame_0Vector_descriptor_;
  metadata.reflection = PB_ShouldCollideFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_ShouldCollideFrame_0Vector

// repeated .PB_ShouldCollideFrame_0 frames = 1;
int PB_ShouldCollideFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_ShouldCollideFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_ShouldCollideFrame_0& PB_ShouldCollideFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_ShouldCollideFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_ShouldCollideFrame_0* PB_ShouldCollideFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_ShouldCollideFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_ShouldCollideFrame_0* PB_ShouldCollideFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_ShouldCollideFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_ShouldCollideFrame_0 >*
PB_ShouldCollideFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_ShouldCollideFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_ShouldCollideFrame_0 >&
PB_ShouldCollideFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_ShouldCollideFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CheckingHellFrame_0::k0FieldNumber;
const int PB_CheckingHellFrame_0::k1FieldNumber;
const int PB_CheckingHellFrame_0::k2FieldNumber;
const int PB_CheckingHellFrame_0::k3FieldNumber;
const int PB_CheckingHellFrame_0::k4FieldNumber;
const int PB_CheckingHellFrame_0::k5FieldNumber;
const int PB_CheckingHellFrame_0::k6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CheckingHellFrame_0::PB_CheckingHellFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CheckingHellFrame_0)
}

void PB_CheckingHellFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CheckingHellFrame_0::PB_CheckingHellFrame_0(const PB_CheckingHellFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CheckingHellFrame_0)
}

void PB_CheckingHellFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _4_ = 0;
  _5_ = 0;
  _6_ = 0;
}

PB_CheckingHellFrame_0::~PB_CheckingHellFrame_0() {
  // @@protoc_insertion_point(destructor:PB_CheckingHellFrame_0)
  SharedDtor();
}

void PB_CheckingHellFrame_0::SharedDtor() {
  _3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PB_CheckingHellFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CheckingHellFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CheckingHellFrame_0_descriptor_;
}

const PB_CheckingHellFrame_0& PB_CheckingHellFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_CheckingHellFrame_0* PB_CheckingHellFrame_0::default_instance_ = NULL;

PB_CheckingHellFrame_0* PB_CheckingHellFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_CheckingHellFrame_0* n = new PB_CheckingHellFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CheckingHellFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CheckingHellFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_CheckingHellFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_CheckingHellFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _2_);
  ZR_(_4_, _6_);
  _3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PB_CheckingHellFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CheckingHellFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse__2;
        break;
      }

      // optional double _2 = 3;
      case 3: {
        if (tag == 25) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse__3;
        break;
      }

      // optional string _3 = 4;
      case 4: {
        if (tag == 34) {
         parse__3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_3().data(), this->_3().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PB_CheckingHellFrame_0._3"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse__4;
        break;
      }

      // optional int32 _4 = 5;
      case 5: {
        if (tag == 40) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse__5;
        break;
      }

      // optional int32 _5 = 6;
      case 6: {
        if (tag == 48) {
         parse__5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse__6;
        break;
      }

      // optional int32 _6 = 7;
      case 7: {
        if (tag == 56) {
         parse__6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CheckingHellFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CheckingHellFrame_0)
  return false;
#undef DO_
}

void PB_CheckingHellFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CheckingHellFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional double _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->_2(), output);
  }

  // optional string _3 = 4;
  if (this->_3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_3().data(), this->_3().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB_CheckingHellFrame_0._3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_3(), output);
  }

  // optional int32 _4 = 5;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->_4(), output);
  }

  // optional int32 _5 = 6;
  if (this->_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->_5(), output);
  }

  // optional int32 _6 = 7;
  if (this->_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->_6(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CheckingHellFrame_0)
}

::google::protobuf::uint8* PB_CheckingHellFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CheckingHellFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional double _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->_2(), target);
  }

  // optional string _3 = 4;
  if (this->_3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_3().data(), this->_3().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PB_CheckingHellFrame_0._3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_3(), target);
  }

  // optional int32 _4 = 5;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->_4(), target);
  }

  // optional int32 _5 = 6;
  if (this->_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->_5(), target);
  }

  // optional int32 _6 = 7;
  if (this->_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->_6(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CheckingHellFrame_0)
  return target;
}

int PB_CheckingHellFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CheckingHellFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional double _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 + 8;
  }

  // optional string _3 = 4;
  if (this->_3().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_3());
  }

  // optional int32 _4 = 5;
  if (this->_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_4());
  }

  // optional int32 _5 = 6;
  if (this->_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_5());
  }

  // optional int32 _6 = 7;
  if (this->_6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_6());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CheckingHellFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CheckingHellFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CheckingHellFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CheckingHellFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CheckingHellFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CheckingHellFrame_0)
    MergeFrom(*source);
  }
}

void PB_CheckingHellFrame_0::MergeFrom(const PB_CheckingHellFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CheckingHellFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3().size() > 0) {

    _3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._3_);
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
  if (from._5() != 0) {
    set__5(from._5());
  }
  if (from._6() != 0) {
    set__6(from._6());
  }
}

void PB_CheckingHellFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CheckingHellFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CheckingHellFrame_0::CopyFrom(const PB_CheckingHellFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CheckingHellFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CheckingHellFrame_0::IsInitialized() const {

  return true;
}

void PB_CheckingHellFrame_0::Swap(PB_CheckingHellFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CheckingHellFrame_0::InternalSwap(PB_CheckingHellFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  _3_.Swap(&other->_3_);
  std::swap(_4_, other->_4_);
  std::swap(_5_, other->_5_);
  std::swap(_6_, other->_6_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CheckingHellFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CheckingHellFrame_0_descriptor_;
  metadata.reflection = PB_CheckingHellFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CheckingHellFrame_0

// optional int32 _0 = 1;
void PB_CheckingHellFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._0)
  return _0_;
}
 void PB_CheckingHellFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._0)
}

// optional int32 _1 = 2;
void PB_CheckingHellFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._1)
  return _1_;
}
 void PB_CheckingHellFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._1)
}

// optional double _2 = 3;
void PB_CheckingHellFrame_0::clear__2() {
  _2_ = 0;
}
 double PB_CheckingHellFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._2)
  return _2_;
}
 void PB_CheckingHellFrame_0::set__2(double value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._2)
}

// optional string _3 = 4;
void PB_CheckingHellFrame_0::clear__3() {
  _3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PB_CheckingHellFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._3)
  return _3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_CheckingHellFrame_0::set__3(const ::std::string& value) {
  
  _3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._3)
}
 void PB_CheckingHellFrame_0::set__3(const char* value) {
  
  _3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PB_CheckingHellFrame_0._3)
}
 void PB_CheckingHellFrame_0::set__3(const char* value, size_t size) {
  
  _3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PB_CheckingHellFrame_0._3)
}
 ::std::string* PB_CheckingHellFrame_0::mutable__3() {
  
  // @@protoc_insertion_point(field_mutable:PB_CheckingHellFrame_0._3)
  return _3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PB_CheckingHellFrame_0::release__3() {
  // @@protoc_insertion_point(field_release:PB_CheckingHellFrame_0._3)
  
  return _3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PB_CheckingHellFrame_0::set_allocated__3(::std::string* _3) {
  if (_3 != NULL) {
    
  } else {
    
  }
  _3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _3);
  // @@protoc_insertion_point(field_set_allocated:PB_CheckingHellFrame_0._3)
}

// optional int32 _4 = 5;
void PB_CheckingHellFrame_0::clear__4() {
  _4_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._4)
  return _4_;
}
 void PB_CheckingHellFrame_0::set__4(::google::protobuf::int32 value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._4)
}

// optional int32 _5 = 6;
void PB_CheckingHellFrame_0::clear__5() {
  _5_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellFrame_0::_5() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._5)
  return _5_;
}
 void PB_CheckingHellFrame_0::set__5(::google::protobuf::int32 value) {
  
  _5_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._5)
}

// optional int32 _6 = 7;
void PB_CheckingHellFrame_0::clear__6() {
  _6_ = 0;
}
 ::google::protobuf::int32 PB_CheckingHellFrame_0::_6() const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0._6)
  return _6_;
}
 void PB_CheckingHellFrame_0::set__6(::google::protobuf::int32 value) {
  
  _6_ = value;
  // @@protoc_insertion_point(field_set:PB_CheckingHellFrame_0._6)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CheckingHellFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CheckingHellFrame_0Vector::PB_CheckingHellFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CheckingHellFrame_0Vector)
}

void PB_CheckingHellFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CheckingHellFrame_0Vector::PB_CheckingHellFrame_0Vector(const PB_CheckingHellFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CheckingHellFrame_0Vector)
}

void PB_CheckingHellFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_CheckingHellFrame_0Vector::~PB_CheckingHellFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_CheckingHellFrame_0Vector)
  SharedDtor();
}

void PB_CheckingHellFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_CheckingHellFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CheckingHellFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CheckingHellFrame_0Vector_descriptor_;
}

const PB_CheckingHellFrame_0Vector& PB_CheckingHellFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_CheckingHellFrame_0Vector* PB_CheckingHellFrame_0Vector::default_instance_ = NULL;

PB_CheckingHellFrame_0Vector* PB_CheckingHellFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_CheckingHellFrame_0Vector* n = new PB_CheckingHellFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CheckingHellFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CheckingHellFrame_0Vector)
  frames_.Clear();
}

bool PB_CheckingHellFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CheckingHellFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_CheckingHellFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CheckingHellFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CheckingHellFrame_0Vector)
  return false;
#undef DO_
}

void PB_CheckingHellFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CheckingHellFrame_0Vector)
  // repeated .PB_CheckingHellFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CheckingHellFrame_0Vector)
}

::google::protobuf::uint8* PB_CheckingHellFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CheckingHellFrame_0Vector)
  // repeated .PB_CheckingHellFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CheckingHellFrame_0Vector)
  return target;
}

int PB_CheckingHellFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CheckingHellFrame_0Vector)
  int total_size = 0;

  // repeated .PB_CheckingHellFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CheckingHellFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CheckingHellFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CheckingHellFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CheckingHellFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CheckingHellFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CheckingHellFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_CheckingHellFrame_0Vector::MergeFrom(const PB_CheckingHellFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CheckingHellFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_CheckingHellFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CheckingHellFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CheckingHellFrame_0Vector::CopyFrom(const PB_CheckingHellFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CheckingHellFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CheckingHellFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_CheckingHellFrame_0Vector::Swap(PB_CheckingHellFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CheckingHellFrame_0Vector::InternalSwap(PB_CheckingHellFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CheckingHellFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CheckingHellFrame_0Vector_descriptor_;
  metadata.reflection = PB_CheckingHellFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CheckingHellFrame_0Vector

// repeated .PB_CheckingHellFrame_0 frames = 1;
int PB_CheckingHellFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_CheckingHellFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_CheckingHellFrame_0& PB_CheckingHellFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_CheckingHellFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_CheckingHellFrame_0* PB_CheckingHellFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_CheckingHellFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_CheckingHellFrame_0* PB_CheckingHellFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_CheckingHellFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_CheckingHellFrame_0 >*
PB_CheckingHellFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_CheckingHellFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_CheckingHellFrame_0 >&
PB_CheckingHellFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_CheckingHellFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousMatch::kSegmentFieldNumber;
const int PB_IsDangerousMatch::kTurnoutFieldNumber;
const int PB_IsDangerousMatch::kTrainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousMatch::PB_IsDangerousMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousMatch)
}

void PB_IsDangerousMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousMatch::PB_IsDangerousMatch(const PB_IsDangerousMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousMatch)
}

void PB_IsDangerousMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  segment_ = 0;
  turnout_ = 0;
  train_ = 0;
}

PB_IsDangerousMatch::~PB_IsDangerousMatch() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousMatch)
  SharedDtor();
}

void PB_IsDangerousMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousMatch_descriptor_;
}

const PB_IsDangerousMatch& PB_IsDangerousMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousMatch* PB_IsDangerousMatch::default_instance_ = NULL;

PB_IsDangerousMatch* PB_IsDangerousMatch::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousMatch* n = new PB_IsDangerousMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_IsDangerousMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_IsDangerousMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(segment_, train_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_IsDangerousMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 segment = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_turnout;
        break;
      }

      // optional int32 turnout = 2;
      case 2: {
        if (tag == 16) {
         parse_turnout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnout_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_train;
        break;
      }

      // optional int32 train = 3;
      case 3: {
        if (tag == 24) {
         parse_train:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousMatch)
  return false;
#undef DO_
}

void PB_IsDangerousMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousMatch)
  // optional int32 segment = 1;
  if (this->segment() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->segment(), output);
  }

  // optional int32 turnout = 2;
  if (this->turnout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->turnout(), output);
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->train(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousMatch)
}

::google::protobuf::uint8* PB_IsDangerousMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousMatch)
  // optional int32 segment = 1;
  if (this->segment() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->segment(), target);
  }

  // optional int32 turnout = 2;
  if (this->turnout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->turnout(), target);
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->train(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousMatch)
  return target;
}

int PB_IsDangerousMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousMatch)
  int total_size = 0;

  // optional int32 segment = 1;
  if (this->segment() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment());
  }

  // optional int32 turnout = 2;
  if (this->turnout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnout());
  }

  // optional int32 train = 3;
  if (this->train() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->train());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousMatch)
    MergeFrom(*source);
  }
}

void PB_IsDangerousMatch::MergeFrom(const PB_IsDangerousMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.segment() != 0) {
    set_segment(from.segment());
  }
  if (from.turnout() != 0) {
    set_turnout(from.turnout());
  }
  if (from.train() != 0) {
    set_train(from.train());
  }
}

void PB_IsDangerousMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousMatch::CopyFrom(const PB_IsDangerousMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousMatch::IsInitialized() const {

  return true;
}

void PB_IsDangerousMatch::Swap(PB_IsDangerousMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousMatch::InternalSwap(PB_IsDangerousMatch* other) {
  std::swap(segment_, other->segment_);
  std::swap(turnout_, other->turnout_);
  std::swap(train_, other->train_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousMatch_descriptor_;
  metadata.reflection = PB_IsDangerousMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousMatch

// optional int32 segment = 1;
void PB_IsDangerousMatch::clear_segment() {
  segment_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousMatch::segment() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatch.segment)
  return segment_;
}
 void PB_IsDangerousMatch::set_segment(::google::protobuf::int32 value) {
  
  segment_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousMatch.segment)
}

// optional int32 turnout = 2;
void PB_IsDangerousMatch::clear_turnout() {
  turnout_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousMatch::turnout() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatch.turnout)
  return turnout_;
}
 void PB_IsDangerousMatch::set_turnout(::google::protobuf::int32 value) {
  
  turnout_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousMatch.turnout)
}

// optional int32 train = 3;
void PB_IsDangerousMatch::clear_train() {
  train_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousMatch::train() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatch.train)
  return train_;
}
 void PB_IsDangerousMatch::set_train(::google::protobuf::int32 value) {
  
  train_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousMatch.train)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousMatchSet::PB_IsDangerousMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousMatchSet)
}

void PB_IsDangerousMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousMatchSet::PB_IsDangerousMatchSet(const PB_IsDangerousMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousMatchSet)
}

void PB_IsDangerousMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsDangerousMatchSet::~PB_IsDangerousMatchSet() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousMatchSet)
  SharedDtor();
}

void PB_IsDangerousMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousMatchSet_descriptor_;
}

const PB_IsDangerousMatchSet& PB_IsDangerousMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousMatchSet* PB_IsDangerousMatchSet::default_instance_ = NULL;

PB_IsDangerousMatchSet* PB_IsDangerousMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousMatchSet* n = new PB_IsDangerousMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousMatchSet)
  matches_.Clear();
}

bool PB_IsDangerousMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsDangerousMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousMatchSet)
  return false;
#undef DO_
}

void PB_IsDangerousMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousMatchSet)
  // repeated .PB_IsDangerousMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousMatchSet)
}

::google::protobuf::uint8* PB_IsDangerousMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousMatchSet)
  // repeated .PB_IsDangerousMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousMatchSet)
  return target;
}

int PB_IsDangerousMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousMatchSet)
  int total_size = 0;

  // repeated .PB_IsDangerousMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousMatchSet)
    MergeFrom(*source);
  }
}

void PB_IsDangerousMatchSet::MergeFrom(const PB_IsDangerousMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_IsDangerousMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousMatchSet::CopyFrom(const PB_IsDangerousMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousMatchSet::IsInitialized() const {

  return true;
}

void PB_IsDangerousMatchSet::Swap(PB_IsDangerousMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousMatchSet::InternalSwap(PB_IsDangerousMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousMatchSet_descriptor_;
  metadata.reflection = PB_IsDangerousMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousMatchSet

// repeated .PB_IsDangerousMatch matches = 1;
int PB_IsDangerousMatchSet::matches_size() const {
  return matches_.size();
}
void PB_IsDangerousMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_IsDangerousMatch& PB_IsDangerousMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousMatchSet.matches)
  return matches_.Get(index);
}
::PB_IsDangerousMatch* PB_IsDangerousMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsDangerousMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_IsDangerousMatch* PB_IsDangerousMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_IsDangerousMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsDangerousMatch >*
PB_IsDangerousMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsDangerousMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsDangerousMatch >&
PB_IsDangerousMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_IsDangerousMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousFrame_0::k0FieldNumber;
const int PB_IsDangerousFrame_0::k1FieldNumber;
const int PB_IsDangerousFrame_0::k2FieldNumber;
const int PB_IsDangerousFrame_0::k3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousFrame_0::PB_IsDangerousFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousFrame_0)
}

void PB_IsDangerousFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousFrame_0::PB_IsDangerousFrame_0(const PB_IsDangerousFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousFrame_0)
}

void PB_IsDangerousFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
}

PB_IsDangerousFrame_0::~PB_IsDangerousFrame_0() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousFrame_0)
  SharedDtor();
}

void PB_IsDangerousFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousFrame_0_descriptor_;
}

const PB_IsDangerousFrame_0& PB_IsDangerousFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousFrame_0* PB_IsDangerousFrame_0::default_instance_ = NULL;

PB_IsDangerousFrame_0* PB_IsDangerousFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousFrame_0* n = new PB_IsDangerousFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_IsDangerousFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_IsDangerousFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _3_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_IsDangerousFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousFrame_0)
  return false;
#undef DO_
}

void PB_IsDangerousFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousFrame_0)
}

::google::protobuf::uint8* PB_IsDangerousFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousFrame_0)
  return target;
}

int PB_IsDangerousFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousFrame_0)
    MergeFrom(*source);
  }
}

void PB_IsDangerousFrame_0::MergeFrom(const PB_IsDangerousFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
}

void PB_IsDangerousFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousFrame_0::CopyFrom(const PB_IsDangerousFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousFrame_0::IsInitialized() const {

  return true;
}

void PB_IsDangerousFrame_0::Swap(PB_IsDangerousFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousFrame_0::InternalSwap(PB_IsDangerousFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousFrame_0_descriptor_;
  metadata.reflection = PB_IsDangerousFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousFrame_0

// optional int32 _0 = 1;
void PB_IsDangerousFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._0)
  return _0_;
}
 void PB_IsDangerousFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._0)
}

// optional int32 _1 = 2;
void PB_IsDangerousFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._1)
  return _1_;
}
 void PB_IsDangerousFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._1)
}

// optional int32 _2 = 3;
void PB_IsDangerousFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._2)
  return _2_;
}
 void PB_IsDangerousFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._2)
}

// optional int32 _3 = 4;
void PB_IsDangerousFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_IsDangerousFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0._3)
  return _3_;
}
 void PB_IsDangerousFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_IsDangerousFrame_0._3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsDangerousFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsDangerousFrame_0Vector::PB_IsDangerousFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsDangerousFrame_0Vector)
}

void PB_IsDangerousFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsDangerousFrame_0Vector::PB_IsDangerousFrame_0Vector(const PB_IsDangerousFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsDangerousFrame_0Vector)
}

void PB_IsDangerousFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsDangerousFrame_0Vector::~PB_IsDangerousFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_IsDangerousFrame_0Vector)
  SharedDtor();
}

void PB_IsDangerousFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsDangerousFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsDangerousFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsDangerousFrame_0Vector_descriptor_;
}

const PB_IsDangerousFrame_0Vector& PB_IsDangerousFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_IsDangerousFrame_0Vector* PB_IsDangerousFrame_0Vector::default_instance_ = NULL;

PB_IsDangerousFrame_0Vector* PB_IsDangerousFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_IsDangerousFrame_0Vector* n = new PB_IsDangerousFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsDangerousFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsDangerousFrame_0Vector)
  frames_.Clear();
}

bool PB_IsDangerousFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsDangerousFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsDangerousFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsDangerousFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsDangerousFrame_0Vector)
  return false;
#undef DO_
}

void PB_IsDangerousFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsDangerousFrame_0Vector)
  // repeated .PB_IsDangerousFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsDangerousFrame_0Vector)
}

::google::protobuf::uint8* PB_IsDangerousFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsDangerousFrame_0Vector)
  // repeated .PB_IsDangerousFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsDangerousFrame_0Vector)
  return target;
}

int PB_IsDangerousFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsDangerousFrame_0Vector)
  int total_size = 0;

  // repeated .PB_IsDangerousFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsDangerousFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsDangerousFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsDangerousFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsDangerousFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsDangerousFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsDangerousFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_IsDangerousFrame_0Vector::MergeFrom(const PB_IsDangerousFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsDangerousFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_IsDangerousFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsDangerousFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsDangerousFrame_0Vector::CopyFrom(const PB_IsDangerousFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsDangerousFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsDangerousFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_IsDangerousFrame_0Vector::Swap(PB_IsDangerousFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsDangerousFrame_0Vector::InternalSwap(PB_IsDangerousFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsDangerousFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsDangerousFrame_0Vector_descriptor_;
  metadata.reflection = PB_IsDangerousFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsDangerousFrame_0Vector

// repeated .PB_IsDangerousFrame_0 frames = 1;
int PB_IsDangerousFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_IsDangerousFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_IsDangerousFrame_0& PB_IsDangerousFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsDangerousFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_IsDangerousFrame_0* PB_IsDangerousFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsDangerousFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_IsDangerousFrame_0* PB_IsDangerousFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_IsDangerousFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsDangerousFrame_0 >*
PB_IsDangerousFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsDangerousFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsDangerousFrame_0 >&
PB_IsDangerousFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_IsDangerousFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_ShouldCollideMatch::kRpFieldNumber;
const int PB_ShouldCollideMatch::kTrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_ShouldCollideMatch::PB_ShouldCollideMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_ShouldCollideMatch)
}

void PB_ShouldCollideMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_ShouldCollideMatch::PB_ShouldCollideMatch(const PB_ShouldCollideMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_ShouldCollideMatch)
}

void PB_ShouldCollideMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rp_ = 0;
  tr_ = 0;
}

PB_ShouldCollideMatch::~PB_ShouldCollideMatch() {
  // @@protoc_insertion_point(destructor:PB_ShouldCollideMatch)
  SharedDtor();
}

void PB_ShouldCollideMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_ShouldCollideMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ShouldCollideMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ShouldCollideMatch_descriptor_;
}

const PB_ShouldCollideMatch& PB_ShouldCollideMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_ShouldCollideMatch* PB_ShouldCollideMatch::default_instance_ = NULL;

PB_ShouldCollideMatch* PB_ShouldCollideMatch::New(::google::protobuf::Arena* arena) const {
  PB_ShouldCollideMatch* n = new PB_ShouldCollideMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_ShouldCollideMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_ShouldCollideMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_ShouldCollideMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_ShouldCollideMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rp_, tr_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_ShouldCollideMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_ShouldCollideMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tr;
        break;
      }

      // optional int32 tr = 2;
      case 2: {
        if (tag == 16) {
         parse_tr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_ShouldCollideMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_ShouldCollideMatch)
  return false;
#undef DO_
}

void PB_ShouldCollideMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_ShouldCollideMatch)
  // optional int32 rp = 1;
  if (this->rp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rp(), output);
  }

  // optional int32 tr = 2;
  if (this->tr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tr(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_ShouldCollideMatch)
}

::google::protobuf::uint8* PB_ShouldCollideMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_ShouldCollideMatch)
  // optional int32 rp = 1;
  if (this->rp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rp(), target);
  }

  // optional int32 tr = 2;
  if (this->tr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_ShouldCollideMatch)
  return target;
}

int PB_ShouldCollideMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_ShouldCollideMatch)
  int total_size = 0;

  // optional int32 rp = 1;
  if (this->rp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rp());
  }

  // optional int32 tr = 2;
  if (this->tr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ShouldCollideMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_ShouldCollideMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_ShouldCollideMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_ShouldCollideMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_ShouldCollideMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_ShouldCollideMatch)
    MergeFrom(*source);
  }
}

void PB_ShouldCollideMatch::MergeFrom(const PB_ShouldCollideMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_ShouldCollideMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rp() != 0) {
    set_rp(from.rp());
  }
  if (from.tr() != 0) {
    set_tr(from.tr());
  }
}

void PB_ShouldCollideMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_ShouldCollideMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ShouldCollideMatch::CopyFrom(const PB_ShouldCollideMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_ShouldCollideMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ShouldCollideMatch::IsInitialized() const {

  return true;
}

void PB_ShouldCollideMatch::Swap(PB_ShouldCollideMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_ShouldCollideMatch::InternalSwap(PB_ShouldCollideMatch* other) {
  std::swap(rp_, other->rp_);
  std::swap(tr_, other->tr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_ShouldCollideMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ShouldCollideMatch_descriptor_;
  metadata.reflection = PB_ShouldCollideMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_ShouldCollideMatch

// optional int32 rp = 1;
void PB_ShouldCollideMatch::clear_rp() {
  rp_ = 0;
}
 ::google::protobuf::int32 PB_ShouldCollideMatch::rp() const {
  // @@protoc_insertion_point(field_get:PB_ShouldCollideMatch.rp)
  return rp_;
}
 void PB_ShouldCollideMatch::set_rp(::google::protobuf::int32 value) {
  
  rp_ = value;
  // @@protoc_insertion_point(field_set:PB_ShouldCollideMatch.rp)
}

// optional int32 tr = 2;
void PB_ShouldCollideMatch::clear_tr() {
  tr_ = 0;
}
 ::google::protobuf::int32 PB_ShouldCollideMatch::tr() const {
  // @@protoc_insertion_point(field_get:PB_ShouldCollideMatch.tr)
  return tr_;
}
 void PB_ShouldCollideMatch::set_tr(::google::protobuf::int32 value) {
  
  tr_ = value;
  // @@protoc_insertion_point(field_set:PB_ShouldCollideMatch.tr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_ShouldCollideMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_ShouldCollideMatchSet::PB_ShouldCollideMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_ShouldCollideMatchSet)
}

void PB_ShouldCollideMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_ShouldCollideMatchSet::PB_ShouldCollideMatchSet(const PB_ShouldCollideMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_ShouldCollideMatchSet)
}

void PB_ShouldCollideMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_ShouldCollideMatchSet::~PB_ShouldCollideMatchSet() {
  // @@protoc_insertion_point(destructor:PB_ShouldCollideMatchSet)
  SharedDtor();
}

void PB_ShouldCollideMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_ShouldCollideMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_ShouldCollideMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_ShouldCollideMatchSet_descriptor_;
}

const PB_ShouldCollideMatchSet& PB_ShouldCollideMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fDistributedQueries_2eproto();
  return *default_instance_;
}

PB_ShouldCollideMatchSet* PB_ShouldCollideMatchSet::default_instance_ = NULL;

PB_ShouldCollideMatchSet* PB_ShouldCollideMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_ShouldCollideMatchSet* n = new PB_ShouldCollideMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_ShouldCollideMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_ShouldCollideMatchSet)
  matches_.Clear();
}

bool PB_ShouldCollideMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_ShouldCollideMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_ShouldCollideMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_ShouldCollideMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_ShouldCollideMatchSet)
  return false;
#undef DO_
}

void PB_ShouldCollideMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_ShouldCollideMatchSet)
  // repeated .PB_ShouldCollideMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_ShouldCollideMatchSet)
}

::google::protobuf::uint8* PB_ShouldCollideMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_ShouldCollideMatchSet)
  // repeated .PB_ShouldCollideMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_ShouldCollideMatchSet)
  return target;
}

int PB_ShouldCollideMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_ShouldCollideMatchSet)
  int total_size = 0;

  // repeated .PB_ShouldCollideMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_ShouldCollideMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_ShouldCollideMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_ShouldCollideMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_ShouldCollideMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_ShouldCollideMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_ShouldCollideMatchSet)
    MergeFrom(*source);
  }
}

void PB_ShouldCollideMatchSet::MergeFrom(const PB_ShouldCollideMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_ShouldCollideMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_ShouldCollideMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_ShouldCollideMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ShouldCollideMatchSet::CopyFrom(const PB_ShouldCollideMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_ShouldCollideMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ShouldCollideMatchSet::IsInitialized() const {

  return true;
}

void PB_ShouldCollideMatchSet::Swap(PB_ShouldCollideMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_ShouldCollideMatchSet::InternalSwap(PB_ShouldCollideMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_ShouldCollideMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_ShouldCollideMatchSet_descriptor_;
  metadata.reflection = PB_ShouldCollideMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_ShouldCollideMatchSet

// repeated .PB_ShouldCollideMatch matches = 1;
int PB_ShouldCollideMatchSet::matches_size() const {
  return matches_.size();
}
void PB_ShouldCollideMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_ShouldCollideMatch& PB_ShouldCollideMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_ShouldCollideMatchSet.matches)
  return matches_.Get(index);
}
::PB_ShouldCollideMatch* PB_ShouldCollideMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_ShouldCollideMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_ShouldCollideMatch* PB_ShouldCollideMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_ShouldCollideMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_ShouldCollideMatch >*
PB_ShouldCollideMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_ShouldCollideMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_ShouldCollideMatch >&
PB_ShouldCollideMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_ShouldCollideMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
