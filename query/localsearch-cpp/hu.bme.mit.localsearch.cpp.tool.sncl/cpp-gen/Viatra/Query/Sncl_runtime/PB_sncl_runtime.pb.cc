// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PB_sncl_runtime.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PB_sncl_runtime.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_GreaterThanOneSNConnectionFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_GreaterThanOneSNConnectionFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PconnectedFrame_1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PconnectedFrame_1_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PconnectedFrame_1Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PconnectedFrame_1Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PconnectedFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PconnectedFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PconnectedFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PconnectedFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumInEqualityWithMemberFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumInEqualityWithMemberFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumEqualityWithMemberFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumEqualityWithMemberFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedSNFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedSNFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedSNFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedSNFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_LinkedMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_LinkedMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_LinkedMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_LinkedMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RingMembersFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RingMembersFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RingMembersFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RingMembersFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CountLinksMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CountLinksMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CountLinksMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CountLinksMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumEqualityWithMemberMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumEqualityWithMemberMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_LinkedFrame_1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_LinkedFrame_1_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_LinkedFrame_1Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_LinkedFrame_1Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_LinkedFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_LinkedFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_LinkedFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_LinkedFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedSNMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedSNMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedSNMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedSNMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumInEqualityWithMemberMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NumInEqualityWithMemberMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PconnectedMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PconnectedMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PconnectedMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PconnectedMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NotInRingMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NotInRingMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NotInRingMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NotInRingMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedCLMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedCLMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedCLMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedCLMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedCLFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedCLFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_IsolatedCLFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_IsolatedCLFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NotInRingFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NotInRingFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_NotInRingFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_NotInRingFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RingMembersMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RingMembersMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RingMembersMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RingMembersMatchSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CountLinksFrame_0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CountLinksFrame_0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_CountLinksFrame_0Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_CountLinksFrame_0Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionMatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_GreaterThanOneSNConnectionMatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionMatchSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_GreaterThanOneSNConnectionMatchSet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PB_5fsncl_5fruntime_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PB_5fsncl_5fruntime_2eproto() {
  protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PB_sncl_runtime.proto");
  GOOGLE_CHECK(file != NULL);
  PB_GreaterThanOneSNConnectionFrame_0_descriptor_ = file->message_type(0);
  static const int PB_GreaterThanOneSNConnectionFrame_0_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _6_),
  };
  PB_GreaterThanOneSNConnectionFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_GreaterThanOneSNConnectionFrame_0_descriptor_,
      PB_GreaterThanOneSNConnectionFrame_0::default_instance_,
      PB_GreaterThanOneSNConnectionFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_GreaterThanOneSNConnectionFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0, _is_default_instance_));
  PB_GreaterThanOneSNConnectionFrame_0Vector_descriptor_ = file->message_type(1);
  static const int PB_GreaterThanOneSNConnectionFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0Vector, frames_),
  };
  PB_GreaterThanOneSNConnectionFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_GreaterThanOneSNConnectionFrame_0Vector_descriptor_,
      PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance_,
      PB_GreaterThanOneSNConnectionFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_GreaterThanOneSNConnectionFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionFrame_0Vector, _is_default_instance_));
  PB_PconnectedFrame_1_descriptor_ = file->message_type(2);
  static const int PB_PconnectedFrame_1_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1, _2_),
  };
  PB_PconnectedFrame_1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PconnectedFrame_1_descriptor_,
      PB_PconnectedFrame_1::default_instance_,
      PB_PconnectedFrame_1_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PconnectedFrame_1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1, _is_default_instance_));
  PB_PconnectedFrame_1Vector_descriptor_ = file->message_type(3);
  static const int PB_PconnectedFrame_1Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1Vector, frames_),
  };
  PB_PconnectedFrame_1Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PconnectedFrame_1Vector_descriptor_,
      PB_PconnectedFrame_1Vector::default_instance_,
      PB_PconnectedFrame_1Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PconnectedFrame_1Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_1Vector, _is_default_instance_));
  PB_PconnectedFrame_0_descriptor_ = file->message_type(4);
  static const int PB_PconnectedFrame_0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0, _3_),
  };
  PB_PconnectedFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PconnectedFrame_0_descriptor_,
      PB_PconnectedFrame_0::default_instance_,
      PB_PconnectedFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PconnectedFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0, _is_default_instance_));
  PB_PconnectedFrame_0Vector_descriptor_ = file->message_type(5);
  static const int PB_PconnectedFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0Vector, frames_),
  };
  PB_PconnectedFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PconnectedFrame_0Vector_descriptor_,
      PB_PconnectedFrame_0Vector::default_instance_,
      PB_PconnectedFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PconnectedFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedFrame_0Vector, _is_default_instance_));
  PB_NumInEqualityWithMemberFrame_0_descriptor_ = file->message_type(6);
  static const int PB_NumInEqualityWithMemberFrame_0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0, _4_),
  };
  PB_NumInEqualityWithMemberFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumInEqualityWithMemberFrame_0_descriptor_,
      PB_NumInEqualityWithMemberFrame_0::default_instance_,
      PB_NumInEqualityWithMemberFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumInEqualityWithMemberFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0, _is_default_instance_));
  PB_NumInEqualityWithMemberFrame_0Vector_descriptor_ = file->message_type(7);
  static const int PB_NumInEqualityWithMemberFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0Vector, frames_),
  };
  PB_NumInEqualityWithMemberFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumInEqualityWithMemberFrame_0Vector_descriptor_,
      PB_NumInEqualityWithMemberFrame_0Vector::default_instance_,
      PB_NumInEqualityWithMemberFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumInEqualityWithMemberFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberFrame_0Vector, _is_default_instance_));
  PB_NumEqualityWithMemberFrame_0_descriptor_ = file->message_type(8);
  static const int PB_NumEqualityWithMemberFrame_0_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0, _2_),
  };
  PB_NumEqualityWithMemberFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumEqualityWithMemberFrame_0_descriptor_,
      PB_NumEqualityWithMemberFrame_0::default_instance_,
      PB_NumEqualityWithMemberFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumEqualityWithMemberFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0, _is_default_instance_));
  PB_NumEqualityWithMemberFrame_0Vector_descriptor_ = file->message_type(9);
  static const int PB_NumEqualityWithMemberFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0Vector, frames_),
  };
  PB_NumEqualityWithMemberFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumEqualityWithMemberFrame_0Vector_descriptor_,
      PB_NumEqualityWithMemberFrame_0Vector::default_instance_,
      PB_NumEqualityWithMemberFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumEqualityWithMemberFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberFrame_0Vector, _is_default_instance_));
  PB_IsolatedSNFrame_0_descriptor_ = file->message_type(10);
  static const int PB_IsolatedSNFrame_0_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0, _2_),
  };
  PB_IsolatedSNFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedSNFrame_0_descriptor_,
      PB_IsolatedSNFrame_0::default_instance_,
      PB_IsolatedSNFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedSNFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0, _is_default_instance_));
  PB_IsolatedSNFrame_0Vector_descriptor_ = file->message_type(11);
  static const int PB_IsolatedSNFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0Vector, frames_),
  };
  PB_IsolatedSNFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedSNFrame_0Vector_descriptor_,
      PB_IsolatedSNFrame_0Vector::default_instance_,
      PB_IsolatedSNFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedSNFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNFrame_0Vector, _is_default_instance_));
  PB_LinkedMatch_descriptor_ = file->message_type(12);
  static const int PB_LinkedMatch_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatch, s1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatch, s2_),
  };
  PB_LinkedMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_LinkedMatch_descriptor_,
      PB_LinkedMatch::default_instance_,
      PB_LinkedMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_LinkedMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatch, _is_default_instance_));
  PB_LinkedMatchSet_descriptor_ = file->message_type(13);
  static const int PB_LinkedMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatchSet, matches_),
  };
  PB_LinkedMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_LinkedMatchSet_descriptor_,
      PB_LinkedMatchSet::default_instance_,
      PB_LinkedMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_LinkedMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedMatchSet, _is_default_instance_));
  PB_RingMembersFrame_0_descriptor_ = file->message_type(14);
  static const int PB_RingMembersFrame_0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0, _4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0, _5_),
  };
  PB_RingMembersFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_RingMembersFrame_0_descriptor_,
      PB_RingMembersFrame_0::default_instance_,
      PB_RingMembersFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_RingMembersFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0, _is_default_instance_));
  PB_RingMembersFrame_0Vector_descriptor_ = file->message_type(15);
  static const int PB_RingMembersFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0Vector, frames_),
  };
  PB_RingMembersFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_RingMembersFrame_0Vector_descriptor_,
      PB_RingMembersFrame_0Vector::default_instance_,
      PB_RingMembersFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_RingMembersFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersFrame_0Vector, _is_default_instance_));
  PB_CountLinksMatch_descriptor_ = file->message_type(16);
  static const int PB_CountLinksMatch_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatch, c1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatch, numofsn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatch, numofcl_),
  };
  PB_CountLinksMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CountLinksMatch_descriptor_,
      PB_CountLinksMatch::default_instance_,
      PB_CountLinksMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CountLinksMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatch, _is_default_instance_));
  PB_CountLinksMatchSet_descriptor_ = file->message_type(17);
  static const int PB_CountLinksMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatchSet, matches_),
  };
  PB_CountLinksMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CountLinksMatchSet_descriptor_,
      PB_CountLinksMatchSet::default_instance_,
      PB_CountLinksMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CountLinksMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksMatchSet, _is_default_instance_));
  PB_NumEqualityWithMemberMatch_descriptor_ = file->message_type(18);
  static const int PB_NumEqualityWithMemberMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberMatch, c1_),
  };
  PB_NumEqualityWithMemberMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumEqualityWithMemberMatch_descriptor_,
      PB_NumEqualityWithMemberMatch::default_instance_,
      PB_NumEqualityWithMemberMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumEqualityWithMemberMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberMatch, _is_default_instance_));
  PB_NumEqualityWithMemberMatchSet_descriptor_ = file->message_type(19);
  static const int PB_NumEqualityWithMemberMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberMatchSet, matches_),
  };
  PB_NumEqualityWithMemberMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumEqualityWithMemberMatchSet_descriptor_,
      PB_NumEqualityWithMemberMatchSet::default_instance_,
      PB_NumEqualityWithMemberMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumEqualityWithMemberMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumEqualityWithMemberMatchSet, _is_default_instance_));
  PB_LinkedFrame_1_descriptor_ = file->message_type(20);
  static const int PB_LinkedFrame_1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1, _1_),
  };
  PB_LinkedFrame_1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_LinkedFrame_1_descriptor_,
      PB_LinkedFrame_1::default_instance_,
      PB_LinkedFrame_1_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_LinkedFrame_1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1, _is_default_instance_));
  PB_LinkedFrame_1Vector_descriptor_ = file->message_type(21);
  static const int PB_LinkedFrame_1Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1Vector, frames_),
  };
  PB_LinkedFrame_1Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_LinkedFrame_1Vector_descriptor_,
      PB_LinkedFrame_1Vector::default_instance_,
      PB_LinkedFrame_1Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_LinkedFrame_1Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_1Vector, _is_default_instance_));
  PB_LinkedFrame_0_descriptor_ = file->message_type(22);
  static const int PB_LinkedFrame_0_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0, _1_),
  };
  PB_LinkedFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_LinkedFrame_0_descriptor_,
      PB_LinkedFrame_0::default_instance_,
      PB_LinkedFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_LinkedFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0, _is_default_instance_));
  PB_LinkedFrame_0Vector_descriptor_ = file->message_type(23);
  static const int PB_LinkedFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0Vector, frames_),
  };
  PB_LinkedFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_LinkedFrame_0Vector_descriptor_,
      PB_LinkedFrame_0Vector::default_instance_,
      PB_LinkedFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_LinkedFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_LinkedFrame_0Vector, _is_default_instance_));
  PB_IsolatedSNMatch_descriptor_ = file->message_type(24);
  static const int PB_IsolatedSNMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNMatch, c1_),
  };
  PB_IsolatedSNMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedSNMatch_descriptor_,
      PB_IsolatedSNMatch::default_instance_,
      PB_IsolatedSNMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedSNMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNMatch, _is_default_instance_));
  PB_IsolatedSNMatchSet_descriptor_ = file->message_type(25);
  static const int PB_IsolatedSNMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNMatchSet, matches_),
  };
  PB_IsolatedSNMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedSNMatchSet_descriptor_,
      PB_IsolatedSNMatchSet::default_instance_,
      PB_IsolatedSNMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedSNMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedSNMatchSet, _is_default_instance_));
  PB_NumInEqualityWithMemberMatch_descriptor_ = file->message_type(26);
  static const int PB_NumInEqualityWithMemberMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberMatch, c1_),
  };
  PB_NumInEqualityWithMemberMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumInEqualityWithMemberMatch_descriptor_,
      PB_NumInEqualityWithMemberMatch::default_instance_,
      PB_NumInEqualityWithMemberMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumInEqualityWithMemberMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberMatch, _is_default_instance_));
  PB_NumInEqualityWithMemberMatchSet_descriptor_ = file->message_type(27);
  static const int PB_NumInEqualityWithMemberMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberMatchSet, matches_),
  };
  PB_NumInEqualityWithMemberMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NumInEqualityWithMemberMatchSet_descriptor_,
      PB_NumInEqualityWithMemberMatchSet::default_instance_,
      PB_NumInEqualityWithMemberMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NumInEqualityWithMemberMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NumInEqualityWithMemberMatchSet, _is_default_instance_));
  PB_PconnectedMatch_descriptor_ = file->message_type(28);
  static const int PB_PconnectedMatch_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatch, c1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatch, c2_),
  };
  PB_PconnectedMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PconnectedMatch_descriptor_,
      PB_PconnectedMatch::default_instance_,
      PB_PconnectedMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PconnectedMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatch, _is_default_instance_));
  PB_PconnectedMatchSet_descriptor_ = file->message_type(29);
  static const int PB_PconnectedMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatchSet, matches_),
  };
  PB_PconnectedMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_PconnectedMatchSet_descriptor_,
      PB_PconnectedMatchSet::default_instance_,
      PB_PconnectedMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_PconnectedMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PconnectedMatchSet, _is_default_instance_));
  PB_NotInRingMatch_descriptor_ = file->message_type(30);
  static const int PB_NotInRingMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingMatch, c1_),
  };
  PB_NotInRingMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NotInRingMatch_descriptor_,
      PB_NotInRingMatch::default_instance_,
      PB_NotInRingMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NotInRingMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingMatch, _is_default_instance_));
  PB_NotInRingMatchSet_descriptor_ = file->message_type(31);
  static const int PB_NotInRingMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingMatchSet, matches_),
  };
  PB_NotInRingMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NotInRingMatchSet_descriptor_,
      PB_NotInRingMatchSet::default_instance_,
      PB_NotInRingMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NotInRingMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingMatchSet, _is_default_instance_));
  PB_IsolatedCLMatch_descriptor_ = file->message_type(32);
  static const int PB_IsolatedCLMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLMatch, c1_),
  };
  PB_IsolatedCLMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedCLMatch_descriptor_,
      PB_IsolatedCLMatch::default_instance_,
      PB_IsolatedCLMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedCLMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLMatch, _is_default_instance_));
  PB_IsolatedCLMatchSet_descriptor_ = file->message_type(33);
  static const int PB_IsolatedCLMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLMatchSet, matches_),
  };
  PB_IsolatedCLMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedCLMatchSet_descriptor_,
      PB_IsolatedCLMatchSet::default_instance_,
      PB_IsolatedCLMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedCLMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLMatchSet, _is_default_instance_));
  PB_IsolatedCLFrame_0_descriptor_ = file->message_type(34);
  static const int PB_IsolatedCLFrame_0_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLFrame_0, _0_),
  };
  PB_IsolatedCLFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedCLFrame_0_descriptor_,
      PB_IsolatedCLFrame_0::default_instance_,
      PB_IsolatedCLFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedCLFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLFrame_0, _is_default_instance_));
  PB_IsolatedCLFrame_0Vector_descriptor_ = file->message_type(35);
  static const int PB_IsolatedCLFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLFrame_0Vector, frames_),
  };
  PB_IsolatedCLFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_IsolatedCLFrame_0Vector_descriptor_,
      PB_IsolatedCLFrame_0Vector::default_instance_,
      PB_IsolatedCLFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_IsolatedCLFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_IsolatedCLFrame_0Vector, _is_default_instance_));
  PB_NotInRingFrame_0_descriptor_ = file->message_type(36);
  static const int PB_NotInRingFrame_0_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0, _3_),
  };
  PB_NotInRingFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NotInRingFrame_0_descriptor_,
      PB_NotInRingFrame_0::default_instance_,
      PB_NotInRingFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NotInRingFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0, _is_default_instance_));
  PB_NotInRingFrame_0Vector_descriptor_ = file->message_type(37);
  static const int PB_NotInRingFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0Vector, frames_),
  };
  PB_NotInRingFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_NotInRingFrame_0Vector_descriptor_,
      PB_NotInRingFrame_0Vector::default_instance_,
      PB_NotInRingFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_NotInRingFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_NotInRingFrame_0Vector, _is_default_instance_));
  PB_RingMembersMatch_descriptor_ = file->message_type(38);
  static const int PB_RingMembersMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersMatch, c1_),
  };
  PB_RingMembersMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_RingMembersMatch_descriptor_,
      PB_RingMembersMatch::default_instance_,
      PB_RingMembersMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_RingMembersMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersMatch, _is_default_instance_));
  PB_RingMembersMatchSet_descriptor_ = file->message_type(39);
  static const int PB_RingMembersMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersMatchSet, matches_),
  };
  PB_RingMembersMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_RingMembersMatchSet_descriptor_,
      PB_RingMembersMatchSet::default_instance_,
      PB_RingMembersMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_RingMembersMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RingMembersMatchSet, _is_default_instance_));
  PB_CountLinksFrame_0_descriptor_ = file->message_type(40);
  static const int PB_CountLinksFrame_0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0, _0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0, _1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0, _2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0, _4_),
  };
  PB_CountLinksFrame_0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CountLinksFrame_0_descriptor_,
      PB_CountLinksFrame_0::default_instance_,
      PB_CountLinksFrame_0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CountLinksFrame_0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0, _is_default_instance_));
  PB_CountLinksFrame_0Vector_descriptor_ = file->message_type(41);
  static const int PB_CountLinksFrame_0Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0Vector, frames_),
  };
  PB_CountLinksFrame_0Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_CountLinksFrame_0Vector_descriptor_,
      PB_CountLinksFrame_0Vector::default_instance_,
      PB_CountLinksFrame_0Vector_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_CountLinksFrame_0Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0Vector, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_CountLinksFrame_0Vector, _is_default_instance_));
  PB_GreaterThanOneSNConnectionMatch_descriptor_ = file->message_type(42);
  static const int PB_GreaterThanOneSNConnectionMatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionMatch, c1_),
  };
  PB_GreaterThanOneSNConnectionMatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_GreaterThanOneSNConnectionMatch_descriptor_,
      PB_GreaterThanOneSNConnectionMatch::default_instance_,
      PB_GreaterThanOneSNConnectionMatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_GreaterThanOneSNConnectionMatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionMatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionMatch, _is_default_instance_));
  PB_GreaterThanOneSNConnectionMatchSet_descriptor_ = file->message_type(43);
  static const int PB_GreaterThanOneSNConnectionMatchSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionMatchSet, matches_),
  };
  PB_GreaterThanOneSNConnectionMatchSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PB_GreaterThanOneSNConnectionMatchSet_descriptor_,
      PB_GreaterThanOneSNConnectionMatchSet::default_instance_,
      PB_GreaterThanOneSNConnectionMatchSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(PB_GreaterThanOneSNConnectionMatchSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionMatchSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_GreaterThanOneSNConnectionMatchSet, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PB_5fsncl_5fruntime_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_GreaterThanOneSNConnectionFrame_0_descriptor_, &PB_GreaterThanOneSNConnectionFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_GreaterThanOneSNConnectionFrame_0Vector_descriptor_, &PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PconnectedFrame_1_descriptor_, &PB_PconnectedFrame_1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PconnectedFrame_1Vector_descriptor_, &PB_PconnectedFrame_1Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PconnectedFrame_0_descriptor_, &PB_PconnectedFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PconnectedFrame_0Vector_descriptor_, &PB_PconnectedFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumInEqualityWithMemberFrame_0_descriptor_, &PB_NumInEqualityWithMemberFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumInEqualityWithMemberFrame_0Vector_descriptor_, &PB_NumInEqualityWithMemberFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumEqualityWithMemberFrame_0_descriptor_, &PB_NumEqualityWithMemberFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumEqualityWithMemberFrame_0Vector_descriptor_, &PB_NumEqualityWithMemberFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedSNFrame_0_descriptor_, &PB_IsolatedSNFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedSNFrame_0Vector_descriptor_, &PB_IsolatedSNFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_LinkedMatch_descriptor_, &PB_LinkedMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_LinkedMatchSet_descriptor_, &PB_LinkedMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_RingMembersFrame_0_descriptor_, &PB_RingMembersFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_RingMembersFrame_0Vector_descriptor_, &PB_RingMembersFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CountLinksMatch_descriptor_, &PB_CountLinksMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CountLinksMatchSet_descriptor_, &PB_CountLinksMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumEqualityWithMemberMatch_descriptor_, &PB_NumEqualityWithMemberMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumEqualityWithMemberMatchSet_descriptor_, &PB_NumEqualityWithMemberMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_LinkedFrame_1_descriptor_, &PB_LinkedFrame_1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_LinkedFrame_1Vector_descriptor_, &PB_LinkedFrame_1Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_LinkedFrame_0_descriptor_, &PB_LinkedFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_LinkedFrame_0Vector_descriptor_, &PB_LinkedFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedSNMatch_descriptor_, &PB_IsolatedSNMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedSNMatchSet_descriptor_, &PB_IsolatedSNMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumInEqualityWithMemberMatch_descriptor_, &PB_NumInEqualityWithMemberMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NumInEqualityWithMemberMatchSet_descriptor_, &PB_NumInEqualityWithMemberMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PconnectedMatch_descriptor_, &PB_PconnectedMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_PconnectedMatchSet_descriptor_, &PB_PconnectedMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NotInRingMatch_descriptor_, &PB_NotInRingMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NotInRingMatchSet_descriptor_, &PB_NotInRingMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedCLMatch_descriptor_, &PB_IsolatedCLMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedCLMatchSet_descriptor_, &PB_IsolatedCLMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedCLFrame_0_descriptor_, &PB_IsolatedCLFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_IsolatedCLFrame_0Vector_descriptor_, &PB_IsolatedCLFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NotInRingFrame_0_descriptor_, &PB_NotInRingFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_NotInRingFrame_0Vector_descriptor_, &PB_NotInRingFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_RingMembersMatch_descriptor_, &PB_RingMembersMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_RingMembersMatchSet_descriptor_, &PB_RingMembersMatchSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CountLinksFrame_0_descriptor_, &PB_CountLinksFrame_0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_CountLinksFrame_0Vector_descriptor_, &PB_CountLinksFrame_0Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_GreaterThanOneSNConnectionMatch_descriptor_, &PB_GreaterThanOneSNConnectionMatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PB_GreaterThanOneSNConnectionMatchSet_descriptor_, &PB_GreaterThanOneSNConnectionMatchSet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PB_5fsncl_5fruntime_2eproto() {
  delete PB_GreaterThanOneSNConnectionFrame_0::default_instance_;
  delete PB_GreaterThanOneSNConnectionFrame_0_reflection_;
  delete PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance_;
  delete PB_GreaterThanOneSNConnectionFrame_0Vector_reflection_;
  delete PB_PconnectedFrame_1::default_instance_;
  delete PB_PconnectedFrame_1_reflection_;
  delete PB_PconnectedFrame_1Vector::default_instance_;
  delete PB_PconnectedFrame_1Vector_reflection_;
  delete PB_PconnectedFrame_0::default_instance_;
  delete PB_PconnectedFrame_0_reflection_;
  delete PB_PconnectedFrame_0Vector::default_instance_;
  delete PB_PconnectedFrame_0Vector_reflection_;
  delete PB_NumInEqualityWithMemberFrame_0::default_instance_;
  delete PB_NumInEqualityWithMemberFrame_0_reflection_;
  delete PB_NumInEqualityWithMemberFrame_0Vector::default_instance_;
  delete PB_NumInEqualityWithMemberFrame_0Vector_reflection_;
  delete PB_NumEqualityWithMemberFrame_0::default_instance_;
  delete PB_NumEqualityWithMemberFrame_0_reflection_;
  delete PB_NumEqualityWithMemberFrame_0Vector::default_instance_;
  delete PB_NumEqualityWithMemberFrame_0Vector_reflection_;
  delete PB_IsolatedSNFrame_0::default_instance_;
  delete PB_IsolatedSNFrame_0_reflection_;
  delete PB_IsolatedSNFrame_0Vector::default_instance_;
  delete PB_IsolatedSNFrame_0Vector_reflection_;
  delete PB_LinkedMatch::default_instance_;
  delete PB_LinkedMatch_reflection_;
  delete PB_LinkedMatchSet::default_instance_;
  delete PB_LinkedMatchSet_reflection_;
  delete PB_RingMembersFrame_0::default_instance_;
  delete PB_RingMembersFrame_0_reflection_;
  delete PB_RingMembersFrame_0Vector::default_instance_;
  delete PB_RingMembersFrame_0Vector_reflection_;
  delete PB_CountLinksMatch::default_instance_;
  delete PB_CountLinksMatch_reflection_;
  delete PB_CountLinksMatchSet::default_instance_;
  delete PB_CountLinksMatchSet_reflection_;
  delete PB_NumEqualityWithMemberMatch::default_instance_;
  delete PB_NumEqualityWithMemberMatch_reflection_;
  delete PB_NumEqualityWithMemberMatchSet::default_instance_;
  delete PB_NumEqualityWithMemberMatchSet_reflection_;
  delete PB_LinkedFrame_1::default_instance_;
  delete PB_LinkedFrame_1_reflection_;
  delete PB_LinkedFrame_1Vector::default_instance_;
  delete PB_LinkedFrame_1Vector_reflection_;
  delete PB_LinkedFrame_0::default_instance_;
  delete PB_LinkedFrame_0_reflection_;
  delete PB_LinkedFrame_0Vector::default_instance_;
  delete PB_LinkedFrame_0Vector_reflection_;
  delete PB_IsolatedSNMatch::default_instance_;
  delete PB_IsolatedSNMatch_reflection_;
  delete PB_IsolatedSNMatchSet::default_instance_;
  delete PB_IsolatedSNMatchSet_reflection_;
  delete PB_NumInEqualityWithMemberMatch::default_instance_;
  delete PB_NumInEqualityWithMemberMatch_reflection_;
  delete PB_NumInEqualityWithMemberMatchSet::default_instance_;
  delete PB_NumInEqualityWithMemberMatchSet_reflection_;
  delete PB_PconnectedMatch::default_instance_;
  delete PB_PconnectedMatch_reflection_;
  delete PB_PconnectedMatchSet::default_instance_;
  delete PB_PconnectedMatchSet_reflection_;
  delete PB_NotInRingMatch::default_instance_;
  delete PB_NotInRingMatch_reflection_;
  delete PB_NotInRingMatchSet::default_instance_;
  delete PB_NotInRingMatchSet_reflection_;
  delete PB_IsolatedCLMatch::default_instance_;
  delete PB_IsolatedCLMatch_reflection_;
  delete PB_IsolatedCLMatchSet::default_instance_;
  delete PB_IsolatedCLMatchSet_reflection_;
  delete PB_IsolatedCLFrame_0::default_instance_;
  delete PB_IsolatedCLFrame_0_reflection_;
  delete PB_IsolatedCLFrame_0Vector::default_instance_;
  delete PB_IsolatedCLFrame_0Vector_reflection_;
  delete PB_NotInRingFrame_0::default_instance_;
  delete PB_NotInRingFrame_0_reflection_;
  delete PB_NotInRingFrame_0Vector::default_instance_;
  delete PB_NotInRingFrame_0Vector_reflection_;
  delete PB_RingMembersMatch::default_instance_;
  delete PB_RingMembersMatch_reflection_;
  delete PB_RingMembersMatchSet::default_instance_;
  delete PB_RingMembersMatchSet_reflection_;
  delete PB_CountLinksFrame_0::default_instance_;
  delete PB_CountLinksFrame_0_reflection_;
  delete PB_CountLinksFrame_0Vector::default_instance_;
  delete PB_CountLinksFrame_0Vector_reflection_;
  delete PB_GreaterThanOneSNConnectionMatch::default_instance_;
  delete PB_GreaterThanOneSNConnectionMatch_reflection_;
  delete PB_GreaterThanOneSNConnectionMatchSet::default_instance_;
  delete PB_GreaterThanOneSNConnectionMatchSet_reflection_;
}

void protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025PB_sncl_runtime.proto\"n\n$PB_GreaterTha"
    "nOneSNConnectionFrame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_"
    "1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\022\n\n\002_3\030\004 \001(\005\022\n\n\002_5\030\005 "
    "\001(\005\022\n\n\002_6\030\006 \001(\005\"c\n*PB_GreaterThanOneSNCo"
    "nnectionFrame_0Vector\0225\n\006frames\030\001 \003(\0132%."
    "PB_GreaterThanOneSNConnectionFrame_0\":\n\024"
    "PB_PconnectedFrame_1\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002"
    " \001(\005\022\n\n\002_2\030\003 \001(\005\"C\n\032PB_PconnectedFrame_1"
    "Vector\022%\n\006frames\030\001 \003(\0132\025.PB_PconnectedFr"
    "ame_1\"F\n\024PB_PconnectedFrame_0\022\n\n\002_0\030\001 \001("
    "\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\022\n\n\002_3\030\004 \001(\005\"C\n"
    "\032PB_PconnectedFrame_0Vector\022%\n\006frames\030\001 "
    "\003(\0132\025.PB_PconnectedFrame_0\"S\n!PB_NumInEq"
    "ualityWithMemberFrame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_"
    "1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\022\n\n\002_4\030\004 \001(\005\"]\n\'PB_Nu"
    "mInEqualityWithMemberFrame_0Vector\0222\n\006fr"
    "ames\030\001 \003(\0132\".PB_NumInEqualityWithMemberF"
    "rame_0\"E\n\037PB_NumEqualityWithMemberFrame_"
    "0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001(\005\"Y\n"
    "%PB_NumEqualityWithMemberFrame_0Vector\0220"
    "\n\006frames\030\001 \003(\0132 .PB_NumEqualityWithMembe"
    "rFrame_0\".\n\024PB_IsolatedSNFrame_0\022\n\n\002_0\030\001"
    " \001(\005\022\n\n\002_2\030\002 \001(\005\"C\n\032PB_IsolatedSNFrame_0"
    "Vector\022%\n\006frames\030\001 \003(\0132\025.PB_IsolatedSNFr"
    "ame_0\"(\n\016PB_LinkedMatch\022\n\n\002S1\030\001 \001(\005\022\n\n\002S"
    "2\030\002 \001(\005\"5\n\021PB_LinkedMatchSet\022 \n\007matches\030"
    "\001 \003(\0132\017.PB_LinkedMatch\"G\n\025PB_RingMembers"
    "Frame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_2\030\002 \001(\005\022\n\n\002_4\030\003 "
    "\001(\005\022\n\n\002_5\030\004 \001(\005\"E\n\033PB_RingMembersFrame_0"
    "Vector\022&\n\006frames\030\001 \003(\0132\026.PB_RingMembersF"
    "rame_0\"B\n\022PB_CountLinksMatch\022\n\n\002C1\030\001 \001(\005"
    "\022\017\n\007numOfSN\030\002 \001(\005\022\017\n\007numOfCL\030\003 \001(\005\"=\n\025PB"
    "_CountLinksMatchSet\022$\n\007matches\030\001 \003(\0132\023.P"
    "B_CountLinksMatch\"+\n\035PB_NumEqualityWithM"
    "emberMatch\022\n\n\002C1\030\001 \001(\005\"S\n PB_NumEquality"
    "WithMemberMatchSet\022/\n\007matches\030\001 \003(\0132\036.PB"
    "_NumEqualityWithMemberMatch\"*\n\020PB_Linked"
    "Frame_1\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\";\n\026PB_Li"
    "nkedFrame_1Vector\022!\n\006frames\030\001 \003(\0132\021.PB_L"
    "inkedFrame_1\"*\n\020PB_LinkedFrame_0\022\n\n\002_0\030\001"
    " \001(\005\022\n\n\002_1\030\002 \001(\005\";\n\026PB_LinkedFrame_0Vect"
    "or\022!\n\006frames\030\001 \003(\0132\021.PB_LinkedFrame_0\" \n"
    "\022PB_IsolatedSNMatch\022\n\n\002C1\030\001 \001(\005\"=\n\025PB_Is"
    "olatedSNMatchSet\022$\n\007matches\030\001 \003(\0132\023.PB_I"
    "solatedSNMatch\"-\n\037PB_NumInEqualityWithMe"
    "mberMatch\022\n\n\002C1\030\001 \001(\005\"W\n\"PB_NumInEqualit"
    "yWithMemberMatchSet\0221\n\007matches\030\001 \003(\0132 .P"
    "B_NumInEqualityWithMemberMatch\",\n\022PB_Pco"
    "nnectedMatch\022\n\n\002C1\030\001 \001(\005\022\n\n\002C2\030\002 \001(\005\"=\n\025"
    "PB_PconnectedMatchSet\022$\n\007matches\030\001 \003(\0132\023"
    ".PB_PconnectedMatch\"\037\n\021PB_NotInRingMatch"
    "\022\n\n\002C1\030\001 \001(\005\";\n\024PB_NotInRingMatchSet\022#\n\007"
    "matches\030\001 \003(\0132\022.PB_NotInRingMatch\" \n\022PB_"
    "IsolatedCLMatch\022\n\n\002C1\030\001 \001(\005\"=\n\025PB_Isolat"
    "edCLMatchSet\022$\n\007matches\030\001 \003(\0132\023.PB_Isola"
    "tedCLMatch\"\"\n\024PB_IsolatedCLFrame_0\022\n\n\002_0"
    "\030\001 \001(\005\"C\n\032PB_IsolatedCLFrame_0Vector\022%\n\006"
    "frames\030\001 \003(\0132\025.PB_IsolatedCLFrame_0\"9\n\023P"
    "B_NotInRingFrame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002 \001"
    "(\005\022\n\n\002_3\030\003 \001(\005\"A\n\031PB_NotInRingFrame_0Vec"
    "tor\022$\n\006frames\030\001 \003(\0132\024.PB_NotInRingFrame_"
    "0\"!\n\023PB_RingMembersMatch\022\n\n\002C1\030\001 \001(\005\"\?\n\026"
    "PB_RingMembersMatchSet\022%\n\007matches\030\001 \003(\0132"
    "\024.PB_RingMembersMatch\"F\n\024PB_CountLinksFr"
    "ame_0\022\n\n\002_0\030\001 \001(\005\022\n\n\002_1\030\002 \001(\005\022\n\n\002_2\030\003 \001("
    "\005\022\n\n\002_4\030\004 \001(\005\"C\n\032PB_CountLinksFrame_0Vec"
    "tor\022%\n\006frames\030\001 \003(\0132\025.PB_CountLinksFrame"
    "_0\"0\n\"PB_GreaterThanOneSNConnectionMatch"
    "\022\n\n\002C1\030\001 \001(\005\"]\n%PB_GreaterThanOneSNConne"
    "ctionMatchSet\0224\n\007matches\030\001 \003(\0132#.PB_Grea"
    "terThanOneSNConnectionMatchb\006proto3", 2835);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PB_sncl_runtime.proto", &protobuf_RegisterTypes);
  PB_GreaterThanOneSNConnectionFrame_0::default_instance_ = new PB_GreaterThanOneSNConnectionFrame_0();
  PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance_ = new PB_GreaterThanOneSNConnectionFrame_0Vector();
  PB_PconnectedFrame_1::default_instance_ = new PB_PconnectedFrame_1();
  PB_PconnectedFrame_1Vector::default_instance_ = new PB_PconnectedFrame_1Vector();
  PB_PconnectedFrame_0::default_instance_ = new PB_PconnectedFrame_0();
  PB_PconnectedFrame_0Vector::default_instance_ = new PB_PconnectedFrame_0Vector();
  PB_NumInEqualityWithMemberFrame_0::default_instance_ = new PB_NumInEqualityWithMemberFrame_0();
  PB_NumInEqualityWithMemberFrame_0Vector::default_instance_ = new PB_NumInEqualityWithMemberFrame_0Vector();
  PB_NumEqualityWithMemberFrame_0::default_instance_ = new PB_NumEqualityWithMemberFrame_0();
  PB_NumEqualityWithMemberFrame_0Vector::default_instance_ = new PB_NumEqualityWithMemberFrame_0Vector();
  PB_IsolatedSNFrame_0::default_instance_ = new PB_IsolatedSNFrame_0();
  PB_IsolatedSNFrame_0Vector::default_instance_ = new PB_IsolatedSNFrame_0Vector();
  PB_LinkedMatch::default_instance_ = new PB_LinkedMatch();
  PB_LinkedMatchSet::default_instance_ = new PB_LinkedMatchSet();
  PB_RingMembersFrame_0::default_instance_ = new PB_RingMembersFrame_0();
  PB_RingMembersFrame_0Vector::default_instance_ = new PB_RingMembersFrame_0Vector();
  PB_CountLinksMatch::default_instance_ = new PB_CountLinksMatch();
  PB_CountLinksMatchSet::default_instance_ = new PB_CountLinksMatchSet();
  PB_NumEqualityWithMemberMatch::default_instance_ = new PB_NumEqualityWithMemberMatch();
  PB_NumEqualityWithMemberMatchSet::default_instance_ = new PB_NumEqualityWithMemberMatchSet();
  PB_LinkedFrame_1::default_instance_ = new PB_LinkedFrame_1();
  PB_LinkedFrame_1Vector::default_instance_ = new PB_LinkedFrame_1Vector();
  PB_LinkedFrame_0::default_instance_ = new PB_LinkedFrame_0();
  PB_LinkedFrame_0Vector::default_instance_ = new PB_LinkedFrame_0Vector();
  PB_IsolatedSNMatch::default_instance_ = new PB_IsolatedSNMatch();
  PB_IsolatedSNMatchSet::default_instance_ = new PB_IsolatedSNMatchSet();
  PB_NumInEqualityWithMemberMatch::default_instance_ = new PB_NumInEqualityWithMemberMatch();
  PB_NumInEqualityWithMemberMatchSet::default_instance_ = new PB_NumInEqualityWithMemberMatchSet();
  PB_PconnectedMatch::default_instance_ = new PB_PconnectedMatch();
  PB_PconnectedMatchSet::default_instance_ = new PB_PconnectedMatchSet();
  PB_NotInRingMatch::default_instance_ = new PB_NotInRingMatch();
  PB_NotInRingMatchSet::default_instance_ = new PB_NotInRingMatchSet();
  PB_IsolatedCLMatch::default_instance_ = new PB_IsolatedCLMatch();
  PB_IsolatedCLMatchSet::default_instance_ = new PB_IsolatedCLMatchSet();
  PB_IsolatedCLFrame_0::default_instance_ = new PB_IsolatedCLFrame_0();
  PB_IsolatedCLFrame_0Vector::default_instance_ = new PB_IsolatedCLFrame_0Vector();
  PB_NotInRingFrame_0::default_instance_ = new PB_NotInRingFrame_0();
  PB_NotInRingFrame_0Vector::default_instance_ = new PB_NotInRingFrame_0Vector();
  PB_RingMembersMatch::default_instance_ = new PB_RingMembersMatch();
  PB_RingMembersMatchSet::default_instance_ = new PB_RingMembersMatchSet();
  PB_CountLinksFrame_0::default_instance_ = new PB_CountLinksFrame_0();
  PB_CountLinksFrame_0Vector::default_instance_ = new PB_CountLinksFrame_0Vector();
  PB_GreaterThanOneSNConnectionMatch::default_instance_ = new PB_GreaterThanOneSNConnectionMatch();
  PB_GreaterThanOneSNConnectionMatchSet::default_instance_ = new PB_GreaterThanOneSNConnectionMatchSet();
  PB_GreaterThanOneSNConnectionFrame_0::default_instance_->InitAsDefaultInstance();
  PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_PconnectedFrame_1::default_instance_->InitAsDefaultInstance();
  PB_PconnectedFrame_1Vector::default_instance_->InitAsDefaultInstance();
  PB_PconnectedFrame_0::default_instance_->InitAsDefaultInstance();
  PB_PconnectedFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_NumInEqualityWithMemberFrame_0::default_instance_->InitAsDefaultInstance();
  PB_NumInEqualityWithMemberFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_NumEqualityWithMemberFrame_0::default_instance_->InitAsDefaultInstance();
  PB_NumEqualityWithMemberFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_IsolatedSNFrame_0::default_instance_->InitAsDefaultInstance();
  PB_IsolatedSNFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_LinkedMatch::default_instance_->InitAsDefaultInstance();
  PB_LinkedMatchSet::default_instance_->InitAsDefaultInstance();
  PB_RingMembersFrame_0::default_instance_->InitAsDefaultInstance();
  PB_RingMembersFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_CountLinksMatch::default_instance_->InitAsDefaultInstance();
  PB_CountLinksMatchSet::default_instance_->InitAsDefaultInstance();
  PB_NumEqualityWithMemberMatch::default_instance_->InitAsDefaultInstance();
  PB_NumEqualityWithMemberMatchSet::default_instance_->InitAsDefaultInstance();
  PB_LinkedFrame_1::default_instance_->InitAsDefaultInstance();
  PB_LinkedFrame_1Vector::default_instance_->InitAsDefaultInstance();
  PB_LinkedFrame_0::default_instance_->InitAsDefaultInstance();
  PB_LinkedFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_IsolatedSNMatch::default_instance_->InitAsDefaultInstance();
  PB_IsolatedSNMatchSet::default_instance_->InitAsDefaultInstance();
  PB_NumInEqualityWithMemberMatch::default_instance_->InitAsDefaultInstance();
  PB_NumInEqualityWithMemberMatchSet::default_instance_->InitAsDefaultInstance();
  PB_PconnectedMatch::default_instance_->InitAsDefaultInstance();
  PB_PconnectedMatchSet::default_instance_->InitAsDefaultInstance();
  PB_NotInRingMatch::default_instance_->InitAsDefaultInstance();
  PB_NotInRingMatchSet::default_instance_->InitAsDefaultInstance();
  PB_IsolatedCLMatch::default_instance_->InitAsDefaultInstance();
  PB_IsolatedCLMatchSet::default_instance_->InitAsDefaultInstance();
  PB_IsolatedCLFrame_0::default_instance_->InitAsDefaultInstance();
  PB_IsolatedCLFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_NotInRingFrame_0::default_instance_->InitAsDefaultInstance();
  PB_NotInRingFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_RingMembersMatch::default_instance_->InitAsDefaultInstance();
  PB_RingMembersMatchSet::default_instance_->InitAsDefaultInstance();
  PB_CountLinksFrame_0::default_instance_->InitAsDefaultInstance();
  PB_CountLinksFrame_0Vector::default_instance_->InitAsDefaultInstance();
  PB_GreaterThanOneSNConnectionMatch::default_instance_->InitAsDefaultInstance();
  PB_GreaterThanOneSNConnectionMatchSet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PB_5fsncl_5fruntime_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PB_5fsncl_5fruntime_2eproto {
  StaticDescriptorInitializer_PB_5fsncl_5fruntime_2eproto() {
    protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  }
} static_descriptor_initializer_PB_5fsncl_5fruntime_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_GreaterThanOneSNConnectionFrame_0::k0FieldNumber;
const int PB_GreaterThanOneSNConnectionFrame_0::k1FieldNumber;
const int PB_GreaterThanOneSNConnectionFrame_0::k2FieldNumber;
const int PB_GreaterThanOneSNConnectionFrame_0::k3FieldNumber;
const int PB_GreaterThanOneSNConnectionFrame_0::k5FieldNumber;
const int PB_GreaterThanOneSNConnectionFrame_0::k6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_GreaterThanOneSNConnectionFrame_0::PB_GreaterThanOneSNConnectionFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_GreaterThanOneSNConnectionFrame_0)
}

void PB_GreaterThanOneSNConnectionFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_GreaterThanOneSNConnectionFrame_0::PB_GreaterThanOneSNConnectionFrame_0(const PB_GreaterThanOneSNConnectionFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_GreaterThanOneSNConnectionFrame_0)
}

void PB_GreaterThanOneSNConnectionFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
  _5_ = 0;
  _6_ = 0;
}

PB_GreaterThanOneSNConnectionFrame_0::~PB_GreaterThanOneSNConnectionFrame_0() {
  // @@protoc_insertion_point(destructor:PB_GreaterThanOneSNConnectionFrame_0)
  SharedDtor();
}

void PB_GreaterThanOneSNConnectionFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_GreaterThanOneSNConnectionFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_GreaterThanOneSNConnectionFrame_0_descriptor_;
}

const PB_GreaterThanOneSNConnectionFrame_0& PB_GreaterThanOneSNConnectionFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_GreaterThanOneSNConnectionFrame_0* PB_GreaterThanOneSNConnectionFrame_0::default_instance_ = NULL;

PB_GreaterThanOneSNConnectionFrame_0* PB_GreaterThanOneSNConnectionFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_GreaterThanOneSNConnectionFrame_0* n = new PB_GreaterThanOneSNConnectionFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_GreaterThanOneSNConnectionFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_GreaterThanOneSNConnectionFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_GreaterThanOneSNConnectionFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_GreaterThanOneSNConnectionFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _6_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_GreaterThanOneSNConnectionFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_GreaterThanOneSNConnectionFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse__5;
        break;
      }

      // optional int32 _5 = 5;
      case 5: {
        if (tag == 40) {
         parse__5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse__6;
        break;
      }

      // optional int32 _6 = 6;
      case 6: {
        if (tag == 48) {
         parse__6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_GreaterThanOneSNConnectionFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_GreaterThanOneSNConnectionFrame_0)
  return false;
#undef DO_
}

void PB_GreaterThanOneSNConnectionFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_GreaterThanOneSNConnectionFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // optional int32 _5 = 5;
  if (this->_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->_5(), output);
  }

  // optional int32 _6 = 6;
  if (this->_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->_6(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_GreaterThanOneSNConnectionFrame_0)
}

::google::protobuf::uint8* PB_GreaterThanOneSNConnectionFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_GreaterThanOneSNConnectionFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // optional int32 _5 = 5;
  if (this->_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->_5(), target);
  }

  // optional int32 _6 = 6;
  if (this->_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->_6(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_GreaterThanOneSNConnectionFrame_0)
  return target;
}

int PB_GreaterThanOneSNConnectionFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_GreaterThanOneSNConnectionFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  // optional int32 _5 = 5;
  if (this->_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_5());
  }

  // optional int32 _6 = 6;
  if (this->_6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_6());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_GreaterThanOneSNConnectionFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_GreaterThanOneSNConnectionFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_GreaterThanOneSNConnectionFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_GreaterThanOneSNConnectionFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_GreaterThanOneSNConnectionFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_GreaterThanOneSNConnectionFrame_0)
    MergeFrom(*source);
  }
}

void PB_GreaterThanOneSNConnectionFrame_0::MergeFrom(const PB_GreaterThanOneSNConnectionFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_GreaterThanOneSNConnectionFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
  if (from._5() != 0) {
    set__5(from._5());
  }
  if (from._6() != 0) {
    set__6(from._6());
  }
}

void PB_GreaterThanOneSNConnectionFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_GreaterThanOneSNConnectionFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_GreaterThanOneSNConnectionFrame_0::CopyFrom(const PB_GreaterThanOneSNConnectionFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_GreaterThanOneSNConnectionFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_GreaterThanOneSNConnectionFrame_0::IsInitialized() const {

  return true;
}

void PB_GreaterThanOneSNConnectionFrame_0::Swap(PB_GreaterThanOneSNConnectionFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_GreaterThanOneSNConnectionFrame_0::InternalSwap(PB_GreaterThanOneSNConnectionFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  std::swap(_5_, other->_5_);
  std::swap(_6_, other->_6_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_GreaterThanOneSNConnectionFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_GreaterThanOneSNConnectionFrame_0_descriptor_;
  metadata.reflection = PB_GreaterThanOneSNConnectionFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_GreaterThanOneSNConnectionFrame_0

// optional int32 _0 = 1;
void PB_GreaterThanOneSNConnectionFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0._0)
  return _0_;
}
 void PB_GreaterThanOneSNConnectionFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionFrame_0._0)
}

// optional int32 _1 = 2;
void PB_GreaterThanOneSNConnectionFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0._1)
  return _1_;
}
 void PB_GreaterThanOneSNConnectionFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionFrame_0._1)
}

// optional int32 _2 = 3;
void PB_GreaterThanOneSNConnectionFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0._2)
  return _2_;
}
 void PB_GreaterThanOneSNConnectionFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionFrame_0._2)
}

// optional int32 _3 = 4;
void PB_GreaterThanOneSNConnectionFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0._3)
  return _3_;
}
 void PB_GreaterThanOneSNConnectionFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionFrame_0._3)
}

// optional int32 _5 = 5;
void PB_GreaterThanOneSNConnectionFrame_0::clear__5() {
  _5_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionFrame_0::_5() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0._5)
  return _5_;
}
 void PB_GreaterThanOneSNConnectionFrame_0::set__5(::google::protobuf::int32 value) {
  
  _5_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionFrame_0._5)
}

// optional int32 _6 = 6;
void PB_GreaterThanOneSNConnectionFrame_0::clear__6() {
  _6_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionFrame_0::_6() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0._6)
  return _6_;
}
 void PB_GreaterThanOneSNConnectionFrame_0::set__6(::google::protobuf::int32 value) {
  
  _6_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionFrame_0._6)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_GreaterThanOneSNConnectionFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_GreaterThanOneSNConnectionFrame_0Vector::PB_GreaterThanOneSNConnectionFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_GreaterThanOneSNConnectionFrame_0Vector)
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_GreaterThanOneSNConnectionFrame_0Vector::PB_GreaterThanOneSNConnectionFrame_0Vector(const PB_GreaterThanOneSNConnectionFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_GreaterThanOneSNConnectionFrame_0Vector)
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_GreaterThanOneSNConnectionFrame_0Vector::~PB_GreaterThanOneSNConnectionFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_GreaterThanOneSNConnectionFrame_0Vector)
  SharedDtor();
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_GreaterThanOneSNConnectionFrame_0Vector_descriptor_;
}

const PB_GreaterThanOneSNConnectionFrame_0Vector& PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_GreaterThanOneSNConnectionFrame_0Vector* PB_GreaterThanOneSNConnectionFrame_0Vector::default_instance_ = NULL;

PB_GreaterThanOneSNConnectionFrame_0Vector* PB_GreaterThanOneSNConnectionFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_GreaterThanOneSNConnectionFrame_0Vector* n = new PB_GreaterThanOneSNConnectionFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  frames_.Clear();
}

bool PB_GreaterThanOneSNConnectionFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_GreaterThanOneSNConnectionFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_GreaterThanOneSNConnectionFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_GreaterThanOneSNConnectionFrame_0Vector)
  return false;
#undef DO_
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  // repeated .PB_GreaterThanOneSNConnectionFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_GreaterThanOneSNConnectionFrame_0Vector)
}

::google::protobuf::uint8* PB_GreaterThanOneSNConnectionFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  // repeated .PB_GreaterThanOneSNConnectionFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_GreaterThanOneSNConnectionFrame_0Vector)
  return target;
}

int PB_GreaterThanOneSNConnectionFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  int total_size = 0;

  // repeated .PB_GreaterThanOneSNConnectionFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_GreaterThanOneSNConnectionFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_GreaterThanOneSNConnectionFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_GreaterThanOneSNConnectionFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_GreaterThanOneSNConnectionFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::MergeFrom(const PB_GreaterThanOneSNConnectionFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::CopyFrom(const PB_GreaterThanOneSNConnectionFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_GreaterThanOneSNConnectionFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_GreaterThanOneSNConnectionFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_GreaterThanOneSNConnectionFrame_0Vector::Swap(PB_GreaterThanOneSNConnectionFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_GreaterThanOneSNConnectionFrame_0Vector::InternalSwap(PB_GreaterThanOneSNConnectionFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_GreaterThanOneSNConnectionFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_GreaterThanOneSNConnectionFrame_0Vector_descriptor_;
  metadata.reflection = PB_GreaterThanOneSNConnectionFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_GreaterThanOneSNConnectionFrame_0Vector

// repeated .PB_GreaterThanOneSNConnectionFrame_0 frames = 1;
int PB_GreaterThanOneSNConnectionFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_GreaterThanOneSNConnectionFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_GreaterThanOneSNConnectionFrame_0& PB_GreaterThanOneSNConnectionFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_GreaterThanOneSNConnectionFrame_0* PB_GreaterThanOneSNConnectionFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_GreaterThanOneSNConnectionFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_GreaterThanOneSNConnectionFrame_0* PB_GreaterThanOneSNConnectionFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_GreaterThanOneSNConnectionFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_GreaterThanOneSNConnectionFrame_0 >*
PB_GreaterThanOneSNConnectionFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_GreaterThanOneSNConnectionFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_GreaterThanOneSNConnectionFrame_0 >&
PB_GreaterThanOneSNConnectionFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_GreaterThanOneSNConnectionFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PconnectedFrame_1::k0FieldNumber;
const int PB_PconnectedFrame_1::k1FieldNumber;
const int PB_PconnectedFrame_1::k2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PconnectedFrame_1::PB_PconnectedFrame_1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PconnectedFrame_1)
}

void PB_PconnectedFrame_1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PconnectedFrame_1::PB_PconnectedFrame_1(const PB_PconnectedFrame_1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PconnectedFrame_1)
}

void PB_PconnectedFrame_1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
}

PB_PconnectedFrame_1::~PB_PconnectedFrame_1() {
  // @@protoc_insertion_point(destructor:PB_PconnectedFrame_1)
  SharedDtor();
}

void PB_PconnectedFrame_1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_PconnectedFrame_1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PconnectedFrame_1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PconnectedFrame_1_descriptor_;
}

const PB_PconnectedFrame_1& PB_PconnectedFrame_1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_PconnectedFrame_1* PB_PconnectedFrame_1::default_instance_ = NULL;

PB_PconnectedFrame_1* PB_PconnectedFrame_1::New(::google::protobuf::Arena* arena) const {
  PB_PconnectedFrame_1* n = new PB_PconnectedFrame_1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PconnectedFrame_1::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PconnectedFrame_1)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_PconnectedFrame_1, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_PconnectedFrame_1*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _2_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_PconnectedFrame_1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PconnectedFrame_1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PconnectedFrame_1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PconnectedFrame_1)
  return false;
#undef DO_
}

void PB_PconnectedFrame_1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PconnectedFrame_1)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_PconnectedFrame_1)
}

::google::protobuf::uint8* PB_PconnectedFrame_1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PconnectedFrame_1)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_PconnectedFrame_1)
  return target;
}

int PB_PconnectedFrame_1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PconnectedFrame_1)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PconnectedFrame_1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PconnectedFrame_1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PconnectedFrame_1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PconnectedFrame_1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PconnectedFrame_1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PconnectedFrame_1)
    MergeFrom(*source);
  }
}

void PB_PconnectedFrame_1::MergeFrom(const PB_PconnectedFrame_1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PconnectedFrame_1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
}

void PB_PconnectedFrame_1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PconnectedFrame_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PconnectedFrame_1::CopyFrom(const PB_PconnectedFrame_1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PconnectedFrame_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PconnectedFrame_1::IsInitialized() const {

  return true;
}

void PB_PconnectedFrame_1::Swap(PB_PconnectedFrame_1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PconnectedFrame_1::InternalSwap(PB_PconnectedFrame_1* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PconnectedFrame_1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PconnectedFrame_1_descriptor_;
  metadata.reflection = PB_PconnectedFrame_1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PconnectedFrame_1

// optional int32 _0 = 1;
void PB_PconnectedFrame_1::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_1::_0() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_1._0)
  return _0_;
}
 void PB_PconnectedFrame_1::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_1._0)
}

// optional int32 _1 = 2;
void PB_PconnectedFrame_1::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_1::_1() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_1._1)
  return _1_;
}
 void PB_PconnectedFrame_1::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_1._1)
}

// optional int32 _2 = 3;
void PB_PconnectedFrame_1::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_1::_2() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_1._2)
  return _2_;
}
 void PB_PconnectedFrame_1::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_1._2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PconnectedFrame_1Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PconnectedFrame_1Vector::PB_PconnectedFrame_1Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PconnectedFrame_1Vector)
}

void PB_PconnectedFrame_1Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PconnectedFrame_1Vector::PB_PconnectedFrame_1Vector(const PB_PconnectedFrame_1Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PconnectedFrame_1Vector)
}

void PB_PconnectedFrame_1Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_PconnectedFrame_1Vector::~PB_PconnectedFrame_1Vector() {
  // @@protoc_insertion_point(destructor:PB_PconnectedFrame_1Vector)
  SharedDtor();
}

void PB_PconnectedFrame_1Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_PconnectedFrame_1Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PconnectedFrame_1Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PconnectedFrame_1Vector_descriptor_;
}

const PB_PconnectedFrame_1Vector& PB_PconnectedFrame_1Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_PconnectedFrame_1Vector* PB_PconnectedFrame_1Vector::default_instance_ = NULL;

PB_PconnectedFrame_1Vector* PB_PconnectedFrame_1Vector::New(::google::protobuf::Arena* arena) const {
  PB_PconnectedFrame_1Vector* n = new PB_PconnectedFrame_1Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PconnectedFrame_1Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PconnectedFrame_1Vector)
  frames_.Clear();
}

bool PB_PconnectedFrame_1Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PconnectedFrame_1Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_PconnectedFrame_1 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PconnectedFrame_1Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PconnectedFrame_1Vector)
  return false;
#undef DO_
}

void PB_PconnectedFrame_1Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PconnectedFrame_1Vector)
  // repeated .PB_PconnectedFrame_1 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_PconnectedFrame_1Vector)
}

::google::protobuf::uint8* PB_PconnectedFrame_1Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PconnectedFrame_1Vector)
  // repeated .PB_PconnectedFrame_1 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_PconnectedFrame_1Vector)
  return target;
}

int PB_PconnectedFrame_1Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PconnectedFrame_1Vector)
  int total_size = 0;

  // repeated .PB_PconnectedFrame_1 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PconnectedFrame_1Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PconnectedFrame_1Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PconnectedFrame_1Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PconnectedFrame_1Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PconnectedFrame_1Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PconnectedFrame_1Vector)
    MergeFrom(*source);
  }
}

void PB_PconnectedFrame_1Vector::MergeFrom(const PB_PconnectedFrame_1Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PconnectedFrame_1Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_PconnectedFrame_1Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PconnectedFrame_1Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PconnectedFrame_1Vector::CopyFrom(const PB_PconnectedFrame_1Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PconnectedFrame_1Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PconnectedFrame_1Vector::IsInitialized() const {

  return true;
}

void PB_PconnectedFrame_1Vector::Swap(PB_PconnectedFrame_1Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PconnectedFrame_1Vector::InternalSwap(PB_PconnectedFrame_1Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PconnectedFrame_1Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PconnectedFrame_1Vector_descriptor_;
  metadata.reflection = PB_PconnectedFrame_1Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PconnectedFrame_1Vector

// repeated .PB_PconnectedFrame_1 frames = 1;
int PB_PconnectedFrame_1Vector::frames_size() const {
  return frames_.size();
}
void PB_PconnectedFrame_1Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_PconnectedFrame_1& PB_PconnectedFrame_1Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_1Vector.frames)
  return frames_.Get(index);
}
::PB_PconnectedFrame_1* PB_PconnectedFrame_1Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_PconnectedFrame_1Vector.frames)
  return frames_.Mutable(index);
}
::PB_PconnectedFrame_1* PB_PconnectedFrame_1Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_PconnectedFrame_1Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_PconnectedFrame_1 >*
PB_PconnectedFrame_1Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_PconnectedFrame_1Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_PconnectedFrame_1 >&
PB_PconnectedFrame_1Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_PconnectedFrame_1Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PconnectedFrame_0::k0FieldNumber;
const int PB_PconnectedFrame_0::k1FieldNumber;
const int PB_PconnectedFrame_0::k2FieldNumber;
const int PB_PconnectedFrame_0::k3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PconnectedFrame_0::PB_PconnectedFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PconnectedFrame_0)
}

void PB_PconnectedFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PconnectedFrame_0::PB_PconnectedFrame_0(const PB_PconnectedFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PconnectedFrame_0)
}

void PB_PconnectedFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _3_ = 0;
}

PB_PconnectedFrame_0::~PB_PconnectedFrame_0() {
  // @@protoc_insertion_point(destructor:PB_PconnectedFrame_0)
  SharedDtor();
}

void PB_PconnectedFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_PconnectedFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PconnectedFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PconnectedFrame_0_descriptor_;
}

const PB_PconnectedFrame_0& PB_PconnectedFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_PconnectedFrame_0* PB_PconnectedFrame_0::default_instance_ = NULL;

PB_PconnectedFrame_0* PB_PconnectedFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_PconnectedFrame_0* n = new PB_PconnectedFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PconnectedFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PconnectedFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_PconnectedFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_PconnectedFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _3_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_PconnectedFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PconnectedFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__3;
        break;
      }

      // optional int32 _3 = 4;
      case 4: {
        if (tag == 32) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PconnectedFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PconnectedFrame_0)
  return false;
#undef DO_
}

void PB_PconnectedFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PconnectedFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_3(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_PconnectedFrame_0)
}

::google::protobuf::uint8* PB_PconnectedFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PconnectedFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_3(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_PconnectedFrame_0)
  return target;
}

int PB_PconnectedFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PconnectedFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _3 = 4;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PconnectedFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PconnectedFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PconnectedFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PconnectedFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PconnectedFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PconnectedFrame_0)
    MergeFrom(*source);
  }
}

void PB_PconnectedFrame_0::MergeFrom(const PB_PconnectedFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PconnectedFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
}

void PB_PconnectedFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PconnectedFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PconnectedFrame_0::CopyFrom(const PB_PconnectedFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PconnectedFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PconnectedFrame_0::IsInitialized() const {

  return true;
}

void PB_PconnectedFrame_0::Swap(PB_PconnectedFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PconnectedFrame_0::InternalSwap(PB_PconnectedFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_3_, other->_3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PconnectedFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PconnectedFrame_0_descriptor_;
  metadata.reflection = PB_PconnectedFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PconnectedFrame_0

// optional int32 _0 = 1;
void PB_PconnectedFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_0._0)
  return _0_;
}
 void PB_PconnectedFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_0._0)
}

// optional int32 _1 = 2;
void PB_PconnectedFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_0._1)
  return _1_;
}
 void PB_PconnectedFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_0._1)
}

// optional int32 _2 = 3;
void PB_PconnectedFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_0._2)
  return _2_;
}
 void PB_PconnectedFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_0._2)
}

// optional int32 _3 = 4;
void PB_PconnectedFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_0._3)
  return _3_;
}
 void PB_PconnectedFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedFrame_0._3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PconnectedFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PconnectedFrame_0Vector::PB_PconnectedFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PconnectedFrame_0Vector)
}

void PB_PconnectedFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PconnectedFrame_0Vector::PB_PconnectedFrame_0Vector(const PB_PconnectedFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PconnectedFrame_0Vector)
}

void PB_PconnectedFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_PconnectedFrame_0Vector::~PB_PconnectedFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_PconnectedFrame_0Vector)
  SharedDtor();
}

void PB_PconnectedFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_PconnectedFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PconnectedFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PconnectedFrame_0Vector_descriptor_;
}

const PB_PconnectedFrame_0Vector& PB_PconnectedFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_PconnectedFrame_0Vector* PB_PconnectedFrame_0Vector::default_instance_ = NULL;

PB_PconnectedFrame_0Vector* PB_PconnectedFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_PconnectedFrame_0Vector* n = new PB_PconnectedFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PconnectedFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PconnectedFrame_0Vector)
  frames_.Clear();
}

bool PB_PconnectedFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PconnectedFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_PconnectedFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PconnectedFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PconnectedFrame_0Vector)
  return false;
#undef DO_
}

void PB_PconnectedFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PconnectedFrame_0Vector)
  // repeated .PB_PconnectedFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_PconnectedFrame_0Vector)
}

::google::protobuf::uint8* PB_PconnectedFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PconnectedFrame_0Vector)
  // repeated .PB_PconnectedFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_PconnectedFrame_0Vector)
  return target;
}

int PB_PconnectedFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PconnectedFrame_0Vector)
  int total_size = 0;

  // repeated .PB_PconnectedFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PconnectedFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PconnectedFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PconnectedFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PconnectedFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PconnectedFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PconnectedFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_PconnectedFrame_0Vector::MergeFrom(const PB_PconnectedFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PconnectedFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_PconnectedFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PconnectedFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PconnectedFrame_0Vector::CopyFrom(const PB_PconnectedFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PconnectedFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PconnectedFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_PconnectedFrame_0Vector::Swap(PB_PconnectedFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PconnectedFrame_0Vector::InternalSwap(PB_PconnectedFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PconnectedFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PconnectedFrame_0Vector_descriptor_;
  metadata.reflection = PB_PconnectedFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PconnectedFrame_0Vector

// repeated .PB_PconnectedFrame_0 frames = 1;
int PB_PconnectedFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_PconnectedFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_PconnectedFrame_0& PB_PconnectedFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_PconnectedFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_PconnectedFrame_0* PB_PconnectedFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_PconnectedFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_PconnectedFrame_0* PB_PconnectedFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_PconnectedFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_PconnectedFrame_0 >*
PB_PconnectedFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_PconnectedFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_PconnectedFrame_0 >&
PB_PconnectedFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_PconnectedFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumInEqualityWithMemberFrame_0::k0FieldNumber;
const int PB_NumInEqualityWithMemberFrame_0::k1FieldNumber;
const int PB_NumInEqualityWithMemberFrame_0::k2FieldNumber;
const int PB_NumInEqualityWithMemberFrame_0::k4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumInEqualityWithMemberFrame_0::PB_NumInEqualityWithMemberFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumInEqualityWithMemberFrame_0)
}

void PB_NumInEqualityWithMemberFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumInEqualityWithMemberFrame_0::PB_NumInEqualityWithMemberFrame_0(const PB_NumInEqualityWithMemberFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumInEqualityWithMemberFrame_0)
}

void PB_NumInEqualityWithMemberFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _4_ = 0;
}

PB_NumInEqualityWithMemberFrame_0::~PB_NumInEqualityWithMemberFrame_0() {
  // @@protoc_insertion_point(destructor:PB_NumInEqualityWithMemberFrame_0)
  SharedDtor();
}

void PB_NumInEqualityWithMemberFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumInEqualityWithMemberFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumInEqualityWithMemberFrame_0_descriptor_;
}

const PB_NumInEqualityWithMemberFrame_0& PB_NumInEqualityWithMemberFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumInEqualityWithMemberFrame_0* PB_NumInEqualityWithMemberFrame_0::default_instance_ = NULL;

PB_NumInEqualityWithMemberFrame_0* PB_NumInEqualityWithMemberFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_NumInEqualityWithMemberFrame_0* n = new PB_NumInEqualityWithMemberFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumInEqualityWithMemberFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumInEqualityWithMemberFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_NumInEqualityWithMemberFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_NumInEqualityWithMemberFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _4_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_NumInEqualityWithMemberFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumInEqualityWithMemberFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__4;
        break;
      }

      // optional int32 _4 = 4;
      case 4: {
        if (tag == 32) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumInEqualityWithMemberFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumInEqualityWithMemberFrame_0)
  return false;
#undef DO_
}

void PB_NumInEqualityWithMemberFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumInEqualityWithMemberFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _4 = 4;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_4(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumInEqualityWithMemberFrame_0)
}

::google::protobuf::uint8* PB_NumInEqualityWithMemberFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumInEqualityWithMemberFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _4 = 4;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumInEqualityWithMemberFrame_0)
  return target;
}

int PB_NumInEqualityWithMemberFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumInEqualityWithMemberFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _4 = 4;
  if (this->_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_4());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumInEqualityWithMemberFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumInEqualityWithMemberFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumInEqualityWithMemberFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumInEqualityWithMemberFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumInEqualityWithMemberFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumInEqualityWithMemberFrame_0)
    MergeFrom(*source);
  }
}

void PB_NumInEqualityWithMemberFrame_0::MergeFrom(const PB_NumInEqualityWithMemberFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumInEqualityWithMemberFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
}

void PB_NumInEqualityWithMemberFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumInEqualityWithMemberFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumInEqualityWithMemberFrame_0::CopyFrom(const PB_NumInEqualityWithMemberFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumInEqualityWithMemberFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumInEqualityWithMemberFrame_0::IsInitialized() const {

  return true;
}

void PB_NumInEqualityWithMemberFrame_0::Swap(PB_NumInEqualityWithMemberFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumInEqualityWithMemberFrame_0::InternalSwap(PB_NumInEqualityWithMemberFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_4_, other->_4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumInEqualityWithMemberFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumInEqualityWithMemberFrame_0_descriptor_;
  metadata.reflection = PB_NumInEqualityWithMemberFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumInEqualityWithMemberFrame_0

// optional int32 _0 = 1;
void PB_NumInEqualityWithMemberFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_NumInEqualityWithMemberFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberFrame_0._0)
  return _0_;
}
 void PB_NumInEqualityWithMemberFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_NumInEqualityWithMemberFrame_0._0)
}

// optional int32 _1 = 2;
void PB_NumInEqualityWithMemberFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_NumInEqualityWithMemberFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberFrame_0._1)
  return _1_;
}
 void PB_NumInEqualityWithMemberFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_NumInEqualityWithMemberFrame_0._1)
}

// optional int32 _2 = 3;
void PB_NumInEqualityWithMemberFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_NumInEqualityWithMemberFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberFrame_0._2)
  return _2_;
}
 void PB_NumInEqualityWithMemberFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_NumInEqualityWithMemberFrame_0._2)
}

// optional int32 _4 = 4;
void PB_NumInEqualityWithMemberFrame_0::clear__4() {
  _4_ = 0;
}
 ::google::protobuf::int32 PB_NumInEqualityWithMemberFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberFrame_0._4)
  return _4_;
}
 void PB_NumInEqualityWithMemberFrame_0::set__4(::google::protobuf::int32 value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_NumInEqualityWithMemberFrame_0._4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumInEqualityWithMemberFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumInEqualityWithMemberFrame_0Vector::PB_NumInEqualityWithMemberFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumInEqualityWithMemberFrame_0Vector)
}

void PB_NumInEqualityWithMemberFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumInEqualityWithMemberFrame_0Vector::PB_NumInEqualityWithMemberFrame_0Vector(const PB_NumInEqualityWithMemberFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumInEqualityWithMemberFrame_0Vector)
}

void PB_NumInEqualityWithMemberFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NumInEqualityWithMemberFrame_0Vector::~PB_NumInEqualityWithMemberFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_NumInEqualityWithMemberFrame_0Vector)
  SharedDtor();
}

void PB_NumInEqualityWithMemberFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumInEqualityWithMemberFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumInEqualityWithMemberFrame_0Vector_descriptor_;
}

const PB_NumInEqualityWithMemberFrame_0Vector& PB_NumInEqualityWithMemberFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumInEqualityWithMemberFrame_0Vector* PB_NumInEqualityWithMemberFrame_0Vector::default_instance_ = NULL;

PB_NumInEqualityWithMemberFrame_0Vector* PB_NumInEqualityWithMemberFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_NumInEqualityWithMemberFrame_0Vector* n = new PB_NumInEqualityWithMemberFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumInEqualityWithMemberFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumInEqualityWithMemberFrame_0Vector)
  frames_.Clear();
}

bool PB_NumInEqualityWithMemberFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumInEqualityWithMemberFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NumInEqualityWithMemberFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumInEqualityWithMemberFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumInEqualityWithMemberFrame_0Vector)
  return false;
#undef DO_
}

void PB_NumInEqualityWithMemberFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumInEqualityWithMemberFrame_0Vector)
  // repeated .PB_NumInEqualityWithMemberFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumInEqualityWithMemberFrame_0Vector)
}

::google::protobuf::uint8* PB_NumInEqualityWithMemberFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumInEqualityWithMemberFrame_0Vector)
  // repeated .PB_NumInEqualityWithMemberFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumInEqualityWithMemberFrame_0Vector)
  return target;
}

int PB_NumInEqualityWithMemberFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumInEqualityWithMemberFrame_0Vector)
  int total_size = 0;

  // repeated .PB_NumInEqualityWithMemberFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumInEqualityWithMemberFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumInEqualityWithMemberFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumInEqualityWithMemberFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumInEqualityWithMemberFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumInEqualityWithMemberFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumInEqualityWithMemberFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_NumInEqualityWithMemberFrame_0Vector::MergeFrom(const PB_NumInEqualityWithMemberFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumInEqualityWithMemberFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_NumInEqualityWithMemberFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumInEqualityWithMemberFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumInEqualityWithMemberFrame_0Vector::CopyFrom(const PB_NumInEqualityWithMemberFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumInEqualityWithMemberFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumInEqualityWithMemberFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_NumInEqualityWithMemberFrame_0Vector::Swap(PB_NumInEqualityWithMemberFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumInEqualityWithMemberFrame_0Vector::InternalSwap(PB_NumInEqualityWithMemberFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumInEqualityWithMemberFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumInEqualityWithMemberFrame_0Vector_descriptor_;
  metadata.reflection = PB_NumInEqualityWithMemberFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumInEqualityWithMemberFrame_0Vector

// repeated .PB_NumInEqualityWithMemberFrame_0 frames = 1;
int PB_NumInEqualityWithMemberFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_NumInEqualityWithMemberFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_NumInEqualityWithMemberFrame_0& PB_NumInEqualityWithMemberFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_NumInEqualityWithMemberFrame_0* PB_NumInEqualityWithMemberFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NumInEqualityWithMemberFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_NumInEqualityWithMemberFrame_0* PB_NumInEqualityWithMemberFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_NumInEqualityWithMemberFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NumInEqualityWithMemberFrame_0 >*
PB_NumInEqualityWithMemberFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_NumInEqualityWithMemberFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NumInEqualityWithMemberFrame_0 >&
PB_NumInEqualityWithMemberFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_NumInEqualityWithMemberFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumEqualityWithMemberFrame_0::k0FieldNumber;
const int PB_NumEqualityWithMemberFrame_0::k1FieldNumber;
const int PB_NumEqualityWithMemberFrame_0::k2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumEqualityWithMemberFrame_0::PB_NumEqualityWithMemberFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumEqualityWithMemberFrame_0)
}

void PB_NumEqualityWithMemberFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumEqualityWithMemberFrame_0::PB_NumEqualityWithMemberFrame_0(const PB_NumEqualityWithMemberFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumEqualityWithMemberFrame_0)
}

void PB_NumEqualityWithMemberFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
}

PB_NumEqualityWithMemberFrame_0::~PB_NumEqualityWithMemberFrame_0() {
  // @@protoc_insertion_point(destructor:PB_NumEqualityWithMemberFrame_0)
  SharedDtor();
}

void PB_NumEqualityWithMemberFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumEqualityWithMemberFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumEqualityWithMemberFrame_0_descriptor_;
}

const PB_NumEqualityWithMemberFrame_0& PB_NumEqualityWithMemberFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumEqualityWithMemberFrame_0* PB_NumEqualityWithMemberFrame_0::default_instance_ = NULL;

PB_NumEqualityWithMemberFrame_0* PB_NumEqualityWithMemberFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_NumEqualityWithMemberFrame_0* n = new PB_NumEqualityWithMemberFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumEqualityWithMemberFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumEqualityWithMemberFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_NumEqualityWithMemberFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_NumEqualityWithMemberFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _2_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_NumEqualityWithMemberFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumEqualityWithMemberFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumEqualityWithMemberFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumEqualityWithMemberFrame_0)
  return false;
#undef DO_
}

void PB_NumEqualityWithMemberFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumEqualityWithMemberFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumEqualityWithMemberFrame_0)
}

::google::protobuf::uint8* PB_NumEqualityWithMemberFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumEqualityWithMemberFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumEqualityWithMemberFrame_0)
  return target;
}

int PB_NumEqualityWithMemberFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumEqualityWithMemberFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumEqualityWithMemberFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumEqualityWithMemberFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumEqualityWithMemberFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumEqualityWithMemberFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumEqualityWithMemberFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumEqualityWithMemberFrame_0)
    MergeFrom(*source);
  }
}

void PB_NumEqualityWithMemberFrame_0::MergeFrom(const PB_NumEqualityWithMemberFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumEqualityWithMemberFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
}

void PB_NumEqualityWithMemberFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumEqualityWithMemberFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumEqualityWithMemberFrame_0::CopyFrom(const PB_NumEqualityWithMemberFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumEqualityWithMemberFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumEqualityWithMemberFrame_0::IsInitialized() const {

  return true;
}

void PB_NumEqualityWithMemberFrame_0::Swap(PB_NumEqualityWithMemberFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumEqualityWithMemberFrame_0::InternalSwap(PB_NumEqualityWithMemberFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumEqualityWithMemberFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumEqualityWithMemberFrame_0_descriptor_;
  metadata.reflection = PB_NumEqualityWithMemberFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumEqualityWithMemberFrame_0

// optional int32 _0 = 1;
void PB_NumEqualityWithMemberFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_NumEqualityWithMemberFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_NumEqualityWithMemberFrame_0._0)
  return _0_;
}
 void PB_NumEqualityWithMemberFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_NumEqualityWithMemberFrame_0._0)
}

// optional int32 _1 = 2;
void PB_NumEqualityWithMemberFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_NumEqualityWithMemberFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_NumEqualityWithMemberFrame_0._1)
  return _1_;
}
 void PB_NumEqualityWithMemberFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_NumEqualityWithMemberFrame_0._1)
}

// optional int32 _2 = 3;
void PB_NumEqualityWithMemberFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_NumEqualityWithMemberFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_NumEqualityWithMemberFrame_0._2)
  return _2_;
}
 void PB_NumEqualityWithMemberFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_NumEqualityWithMemberFrame_0._2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumEqualityWithMemberFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumEqualityWithMemberFrame_0Vector::PB_NumEqualityWithMemberFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumEqualityWithMemberFrame_0Vector)
}

void PB_NumEqualityWithMemberFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumEqualityWithMemberFrame_0Vector::PB_NumEqualityWithMemberFrame_0Vector(const PB_NumEqualityWithMemberFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumEqualityWithMemberFrame_0Vector)
}

void PB_NumEqualityWithMemberFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NumEqualityWithMemberFrame_0Vector::~PB_NumEqualityWithMemberFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_NumEqualityWithMemberFrame_0Vector)
  SharedDtor();
}

void PB_NumEqualityWithMemberFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumEqualityWithMemberFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumEqualityWithMemberFrame_0Vector_descriptor_;
}

const PB_NumEqualityWithMemberFrame_0Vector& PB_NumEqualityWithMemberFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumEqualityWithMemberFrame_0Vector* PB_NumEqualityWithMemberFrame_0Vector::default_instance_ = NULL;

PB_NumEqualityWithMemberFrame_0Vector* PB_NumEqualityWithMemberFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_NumEqualityWithMemberFrame_0Vector* n = new PB_NumEqualityWithMemberFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumEqualityWithMemberFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumEqualityWithMemberFrame_0Vector)
  frames_.Clear();
}

bool PB_NumEqualityWithMemberFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumEqualityWithMemberFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NumEqualityWithMemberFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumEqualityWithMemberFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumEqualityWithMemberFrame_0Vector)
  return false;
#undef DO_
}

void PB_NumEqualityWithMemberFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumEqualityWithMemberFrame_0Vector)
  // repeated .PB_NumEqualityWithMemberFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumEqualityWithMemberFrame_0Vector)
}

::google::protobuf::uint8* PB_NumEqualityWithMemberFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumEqualityWithMemberFrame_0Vector)
  // repeated .PB_NumEqualityWithMemberFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumEqualityWithMemberFrame_0Vector)
  return target;
}

int PB_NumEqualityWithMemberFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumEqualityWithMemberFrame_0Vector)
  int total_size = 0;

  // repeated .PB_NumEqualityWithMemberFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumEqualityWithMemberFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumEqualityWithMemberFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumEqualityWithMemberFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumEqualityWithMemberFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumEqualityWithMemberFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumEqualityWithMemberFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_NumEqualityWithMemberFrame_0Vector::MergeFrom(const PB_NumEqualityWithMemberFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumEqualityWithMemberFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_NumEqualityWithMemberFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumEqualityWithMemberFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumEqualityWithMemberFrame_0Vector::CopyFrom(const PB_NumEqualityWithMemberFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumEqualityWithMemberFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumEqualityWithMemberFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_NumEqualityWithMemberFrame_0Vector::Swap(PB_NumEqualityWithMemberFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumEqualityWithMemberFrame_0Vector::InternalSwap(PB_NumEqualityWithMemberFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumEqualityWithMemberFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumEqualityWithMemberFrame_0Vector_descriptor_;
  metadata.reflection = PB_NumEqualityWithMemberFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumEqualityWithMemberFrame_0Vector

// repeated .PB_NumEqualityWithMemberFrame_0 frames = 1;
int PB_NumEqualityWithMemberFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_NumEqualityWithMemberFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_NumEqualityWithMemberFrame_0& PB_NumEqualityWithMemberFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_NumEqualityWithMemberFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_NumEqualityWithMemberFrame_0* PB_NumEqualityWithMemberFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NumEqualityWithMemberFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_NumEqualityWithMemberFrame_0* PB_NumEqualityWithMemberFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_NumEqualityWithMemberFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NumEqualityWithMemberFrame_0 >*
PB_NumEqualityWithMemberFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_NumEqualityWithMemberFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NumEqualityWithMemberFrame_0 >&
PB_NumEqualityWithMemberFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_NumEqualityWithMemberFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedSNFrame_0::k0FieldNumber;
const int PB_IsolatedSNFrame_0::k2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedSNFrame_0::PB_IsolatedSNFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedSNFrame_0)
}

void PB_IsolatedSNFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedSNFrame_0::PB_IsolatedSNFrame_0(const PB_IsolatedSNFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedSNFrame_0)
}

void PB_IsolatedSNFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _2_ = 0;
}

PB_IsolatedSNFrame_0::~PB_IsolatedSNFrame_0() {
  // @@protoc_insertion_point(destructor:PB_IsolatedSNFrame_0)
  SharedDtor();
}

void PB_IsolatedSNFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedSNFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedSNFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedSNFrame_0_descriptor_;
}

const PB_IsolatedSNFrame_0& PB_IsolatedSNFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedSNFrame_0* PB_IsolatedSNFrame_0::default_instance_ = NULL;

PB_IsolatedSNFrame_0* PB_IsolatedSNFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedSNFrame_0* n = new PB_IsolatedSNFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedSNFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedSNFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_IsolatedSNFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_IsolatedSNFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _2_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_IsolatedSNFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedSNFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__2;
        break;
      }

      // optional int32 _2 = 2;
      case 2: {
        if (tag == 16) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedSNFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedSNFrame_0)
  return false;
#undef DO_
}

void PB_IsolatedSNFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedSNFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _2 = 2;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_2(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedSNFrame_0)
}

::google::protobuf::uint8* PB_IsolatedSNFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedSNFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _2 = 2;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedSNFrame_0)
  return target;
}

int PB_IsolatedSNFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedSNFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _2 = 2;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedSNFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedSNFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedSNFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedSNFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedSNFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedSNFrame_0)
    MergeFrom(*source);
  }
}

void PB_IsolatedSNFrame_0::MergeFrom(const PB_IsolatedSNFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedSNFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
}

void PB_IsolatedSNFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedSNFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedSNFrame_0::CopyFrom(const PB_IsolatedSNFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedSNFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedSNFrame_0::IsInitialized() const {

  return true;
}

void PB_IsolatedSNFrame_0::Swap(PB_IsolatedSNFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedSNFrame_0::InternalSwap(PB_IsolatedSNFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_2_, other->_2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedSNFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedSNFrame_0_descriptor_;
  metadata.reflection = PB_IsolatedSNFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedSNFrame_0

// optional int32 _0 = 1;
void PB_IsolatedSNFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_IsolatedSNFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_IsolatedSNFrame_0._0)
  return _0_;
}
 void PB_IsolatedSNFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_IsolatedSNFrame_0._0)
}

// optional int32 _2 = 2;
void PB_IsolatedSNFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_IsolatedSNFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_IsolatedSNFrame_0._2)
  return _2_;
}
 void PB_IsolatedSNFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_IsolatedSNFrame_0._2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedSNFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedSNFrame_0Vector::PB_IsolatedSNFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedSNFrame_0Vector)
}

void PB_IsolatedSNFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedSNFrame_0Vector::PB_IsolatedSNFrame_0Vector(const PB_IsolatedSNFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedSNFrame_0Vector)
}

void PB_IsolatedSNFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsolatedSNFrame_0Vector::~PB_IsolatedSNFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_IsolatedSNFrame_0Vector)
  SharedDtor();
}

void PB_IsolatedSNFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedSNFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedSNFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedSNFrame_0Vector_descriptor_;
}

const PB_IsolatedSNFrame_0Vector& PB_IsolatedSNFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedSNFrame_0Vector* PB_IsolatedSNFrame_0Vector::default_instance_ = NULL;

PB_IsolatedSNFrame_0Vector* PB_IsolatedSNFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedSNFrame_0Vector* n = new PB_IsolatedSNFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedSNFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedSNFrame_0Vector)
  frames_.Clear();
}

bool PB_IsolatedSNFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedSNFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsolatedSNFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedSNFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedSNFrame_0Vector)
  return false;
#undef DO_
}

void PB_IsolatedSNFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedSNFrame_0Vector)
  // repeated .PB_IsolatedSNFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedSNFrame_0Vector)
}

::google::protobuf::uint8* PB_IsolatedSNFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedSNFrame_0Vector)
  // repeated .PB_IsolatedSNFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedSNFrame_0Vector)
  return target;
}

int PB_IsolatedSNFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedSNFrame_0Vector)
  int total_size = 0;

  // repeated .PB_IsolatedSNFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedSNFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedSNFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedSNFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedSNFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedSNFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedSNFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_IsolatedSNFrame_0Vector::MergeFrom(const PB_IsolatedSNFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedSNFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_IsolatedSNFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedSNFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedSNFrame_0Vector::CopyFrom(const PB_IsolatedSNFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedSNFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedSNFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_IsolatedSNFrame_0Vector::Swap(PB_IsolatedSNFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedSNFrame_0Vector::InternalSwap(PB_IsolatedSNFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedSNFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedSNFrame_0Vector_descriptor_;
  metadata.reflection = PB_IsolatedSNFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedSNFrame_0Vector

// repeated .PB_IsolatedSNFrame_0 frames = 1;
int PB_IsolatedSNFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_IsolatedSNFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_IsolatedSNFrame_0& PB_IsolatedSNFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsolatedSNFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_IsolatedSNFrame_0* PB_IsolatedSNFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsolatedSNFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_IsolatedSNFrame_0* PB_IsolatedSNFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_IsolatedSNFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsolatedSNFrame_0 >*
PB_IsolatedSNFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsolatedSNFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsolatedSNFrame_0 >&
PB_IsolatedSNFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_IsolatedSNFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_LinkedMatch::kS1FieldNumber;
const int PB_LinkedMatch::kS2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_LinkedMatch::PB_LinkedMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_LinkedMatch)
}

void PB_LinkedMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_LinkedMatch::PB_LinkedMatch(const PB_LinkedMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_LinkedMatch)
}

void PB_LinkedMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  s1_ = 0;
  s2_ = 0;
}

PB_LinkedMatch::~PB_LinkedMatch() {
  // @@protoc_insertion_point(destructor:PB_LinkedMatch)
  SharedDtor();
}

void PB_LinkedMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_LinkedMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_LinkedMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_LinkedMatch_descriptor_;
}

const PB_LinkedMatch& PB_LinkedMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_LinkedMatch* PB_LinkedMatch::default_instance_ = NULL;

PB_LinkedMatch* PB_LinkedMatch::New(::google::protobuf::Arena* arena) const {
  PB_LinkedMatch* n = new PB_LinkedMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_LinkedMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_LinkedMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_LinkedMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_LinkedMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(s1_, s2_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_LinkedMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_LinkedMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 S1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_S2;
        break;
      }

      // optional int32 S2 = 2;
      case 2: {
        if (tag == 16) {
         parse_S2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_LinkedMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_LinkedMatch)
  return false;
#undef DO_
}

void PB_LinkedMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_LinkedMatch)
  // optional int32 S1 = 1;
  if (this->s1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->s1(), output);
  }

  // optional int32 S2 = 2;
  if (this->s2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->s2(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_LinkedMatch)
}

::google::protobuf::uint8* PB_LinkedMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_LinkedMatch)
  // optional int32 S1 = 1;
  if (this->s1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->s1(), target);
  }

  // optional int32 S2 = 2;
  if (this->s2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->s2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_LinkedMatch)
  return target;
}

int PB_LinkedMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_LinkedMatch)
  int total_size = 0;

  // optional int32 S1 = 1;
  if (this->s1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s1());
  }

  // optional int32 S2 = 2;
  if (this->s2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->s2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_LinkedMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_LinkedMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_LinkedMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_LinkedMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_LinkedMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_LinkedMatch)
    MergeFrom(*source);
  }
}

void PB_LinkedMatch::MergeFrom(const PB_LinkedMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_LinkedMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.s1() != 0) {
    set_s1(from.s1());
  }
  if (from.s2() != 0) {
    set_s2(from.s2());
  }
}

void PB_LinkedMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_LinkedMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_LinkedMatch::CopyFrom(const PB_LinkedMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_LinkedMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LinkedMatch::IsInitialized() const {

  return true;
}

void PB_LinkedMatch::Swap(PB_LinkedMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_LinkedMatch::InternalSwap(PB_LinkedMatch* other) {
  std::swap(s1_, other->s1_);
  std::swap(s2_, other->s2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_LinkedMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_LinkedMatch_descriptor_;
  metadata.reflection = PB_LinkedMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_LinkedMatch

// optional int32 S1 = 1;
void PB_LinkedMatch::clear_s1() {
  s1_ = 0;
}
 ::google::protobuf::int32 PB_LinkedMatch::s1() const {
  // @@protoc_insertion_point(field_get:PB_LinkedMatch.S1)
  return s1_;
}
 void PB_LinkedMatch::set_s1(::google::protobuf::int32 value) {
  
  s1_ = value;
  // @@protoc_insertion_point(field_set:PB_LinkedMatch.S1)
}

// optional int32 S2 = 2;
void PB_LinkedMatch::clear_s2() {
  s2_ = 0;
}
 ::google::protobuf::int32 PB_LinkedMatch::s2() const {
  // @@protoc_insertion_point(field_get:PB_LinkedMatch.S2)
  return s2_;
}
 void PB_LinkedMatch::set_s2(::google::protobuf::int32 value) {
  
  s2_ = value;
  // @@protoc_insertion_point(field_set:PB_LinkedMatch.S2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_LinkedMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_LinkedMatchSet::PB_LinkedMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_LinkedMatchSet)
}

void PB_LinkedMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_LinkedMatchSet::PB_LinkedMatchSet(const PB_LinkedMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_LinkedMatchSet)
}

void PB_LinkedMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_LinkedMatchSet::~PB_LinkedMatchSet() {
  // @@protoc_insertion_point(destructor:PB_LinkedMatchSet)
  SharedDtor();
}

void PB_LinkedMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_LinkedMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_LinkedMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_LinkedMatchSet_descriptor_;
}

const PB_LinkedMatchSet& PB_LinkedMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_LinkedMatchSet* PB_LinkedMatchSet::default_instance_ = NULL;

PB_LinkedMatchSet* PB_LinkedMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_LinkedMatchSet* n = new PB_LinkedMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_LinkedMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_LinkedMatchSet)
  matches_.Clear();
}

bool PB_LinkedMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_LinkedMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_LinkedMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_LinkedMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_LinkedMatchSet)
  return false;
#undef DO_
}

void PB_LinkedMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_LinkedMatchSet)
  // repeated .PB_LinkedMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_LinkedMatchSet)
}

::google::protobuf::uint8* PB_LinkedMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_LinkedMatchSet)
  // repeated .PB_LinkedMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_LinkedMatchSet)
  return target;
}

int PB_LinkedMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_LinkedMatchSet)
  int total_size = 0;

  // repeated .PB_LinkedMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_LinkedMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_LinkedMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_LinkedMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_LinkedMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_LinkedMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_LinkedMatchSet)
    MergeFrom(*source);
  }
}

void PB_LinkedMatchSet::MergeFrom(const PB_LinkedMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_LinkedMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_LinkedMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_LinkedMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_LinkedMatchSet::CopyFrom(const PB_LinkedMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_LinkedMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LinkedMatchSet::IsInitialized() const {

  return true;
}

void PB_LinkedMatchSet::Swap(PB_LinkedMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_LinkedMatchSet::InternalSwap(PB_LinkedMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_LinkedMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_LinkedMatchSet_descriptor_;
  metadata.reflection = PB_LinkedMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_LinkedMatchSet

// repeated .PB_LinkedMatch matches = 1;
int PB_LinkedMatchSet::matches_size() const {
  return matches_.size();
}
void PB_LinkedMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_LinkedMatch& PB_LinkedMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_LinkedMatchSet.matches)
  return matches_.Get(index);
}
::PB_LinkedMatch* PB_LinkedMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_LinkedMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_LinkedMatch* PB_LinkedMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_LinkedMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_LinkedMatch >*
PB_LinkedMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_LinkedMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_LinkedMatch >&
PB_LinkedMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_LinkedMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_RingMembersFrame_0::k0FieldNumber;
const int PB_RingMembersFrame_0::k2FieldNumber;
const int PB_RingMembersFrame_0::k4FieldNumber;
const int PB_RingMembersFrame_0::k5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_RingMembersFrame_0::PB_RingMembersFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RingMembersFrame_0)
}

void PB_RingMembersFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_RingMembersFrame_0::PB_RingMembersFrame_0(const PB_RingMembersFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RingMembersFrame_0)
}

void PB_RingMembersFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _2_ = 0;
  _4_ = 0;
  _5_ = 0;
}

PB_RingMembersFrame_0::~PB_RingMembersFrame_0() {
  // @@protoc_insertion_point(destructor:PB_RingMembersFrame_0)
  SharedDtor();
}

void PB_RingMembersFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RingMembersFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RingMembersFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RingMembersFrame_0_descriptor_;
}

const PB_RingMembersFrame_0& PB_RingMembersFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_RingMembersFrame_0* PB_RingMembersFrame_0::default_instance_ = NULL;

PB_RingMembersFrame_0* PB_RingMembersFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_RingMembersFrame_0* n = new PB_RingMembersFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_RingMembersFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_RingMembersFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_RingMembersFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_RingMembersFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _5_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_RingMembersFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RingMembersFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__2;
        break;
      }

      // optional int32 _2 = 2;
      case 2: {
        if (tag == 16) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__4;
        break;
      }

      // optional int32 _4 = 3;
      case 3: {
        if (tag == 24) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__5;
        break;
      }

      // optional int32 _5 = 4;
      case 4: {
        if (tag == 32) {
         parse__5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RingMembersFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RingMembersFrame_0)
  return false;
#undef DO_
}

void PB_RingMembersFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RingMembersFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _2 = 2;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_2(), output);
  }

  // optional int32 _4 = 3;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_4(), output);
  }

  // optional int32 _5 = 4;
  if (this->_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_5(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_RingMembersFrame_0)
}

::google::protobuf::uint8* PB_RingMembersFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RingMembersFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _2 = 2;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_2(), target);
  }

  // optional int32 _4 = 3;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_4(), target);
  }

  // optional int32 _5 = 4;
  if (this->_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_RingMembersFrame_0)
  return target;
}

int PB_RingMembersFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_RingMembersFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _2 = 2;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _4 = 3;
  if (this->_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_4());
  }

  // optional int32 _5 = 4;
  if (this->_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_5());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RingMembersFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_RingMembersFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_RingMembersFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_RingMembersFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_RingMembersFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_RingMembersFrame_0)
    MergeFrom(*source);
  }
}

void PB_RingMembersFrame_0::MergeFrom(const PB_RingMembersFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_RingMembersFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
  if (from._5() != 0) {
    set__5(from._5());
  }
}

void PB_RingMembersFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_RingMembersFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RingMembersFrame_0::CopyFrom(const PB_RingMembersFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_RingMembersFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RingMembersFrame_0::IsInitialized() const {

  return true;
}

void PB_RingMembersFrame_0::Swap(PB_RingMembersFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_RingMembersFrame_0::InternalSwap(PB_RingMembersFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_2_, other->_2_);
  std::swap(_4_, other->_4_);
  std::swap(_5_, other->_5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_RingMembersFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RingMembersFrame_0_descriptor_;
  metadata.reflection = PB_RingMembersFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_RingMembersFrame_0

// optional int32 _0 = 1;
void PB_RingMembersFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_RingMembersFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_RingMembersFrame_0._0)
  return _0_;
}
 void PB_RingMembersFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_RingMembersFrame_0._0)
}

// optional int32 _2 = 2;
void PB_RingMembersFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_RingMembersFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_RingMembersFrame_0._2)
  return _2_;
}
 void PB_RingMembersFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_RingMembersFrame_0._2)
}

// optional int32 _4 = 3;
void PB_RingMembersFrame_0::clear__4() {
  _4_ = 0;
}
 ::google::protobuf::int32 PB_RingMembersFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_RingMembersFrame_0._4)
  return _4_;
}
 void PB_RingMembersFrame_0::set__4(::google::protobuf::int32 value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_RingMembersFrame_0._4)
}

// optional int32 _5 = 4;
void PB_RingMembersFrame_0::clear__5() {
  _5_ = 0;
}
 ::google::protobuf::int32 PB_RingMembersFrame_0::_5() const {
  // @@protoc_insertion_point(field_get:PB_RingMembersFrame_0._5)
  return _5_;
}
 void PB_RingMembersFrame_0::set__5(::google::protobuf::int32 value) {
  
  _5_ = value;
  // @@protoc_insertion_point(field_set:PB_RingMembersFrame_0._5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_RingMembersFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_RingMembersFrame_0Vector::PB_RingMembersFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RingMembersFrame_0Vector)
}

void PB_RingMembersFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_RingMembersFrame_0Vector::PB_RingMembersFrame_0Vector(const PB_RingMembersFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RingMembersFrame_0Vector)
}

void PB_RingMembersFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_RingMembersFrame_0Vector::~PB_RingMembersFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_RingMembersFrame_0Vector)
  SharedDtor();
}

void PB_RingMembersFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RingMembersFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RingMembersFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RingMembersFrame_0Vector_descriptor_;
}

const PB_RingMembersFrame_0Vector& PB_RingMembersFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_RingMembersFrame_0Vector* PB_RingMembersFrame_0Vector::default_instance_ = NULL;

PB_RingMembersFrame_0Vector* PB_RingMembersFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_RingMembersFrame_0Vector* n = new PB_RingMembersFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_RingMembersFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_RingMembersFrame_0Vector)
  frames_.Clear();
}

bool PB_RingMembersFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RingMembersFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_RingMembersFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RingMembersFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RingMembersFrame_0Vector)
  return false;
#undef DO_
}

void PB_RingMembersFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RingMembersFrame_0Vector)
  // repeated .PB_RingMembersFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_RingMembersFrame_0Vector)
}

::google::protobuf::uint8* PB_RingMembersFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RingMembersFrame_0Vector)
  // repeated .PB_RingMembersFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_RingMembersFrame_0Vector)
  return target;
}

int PB_RingMembersFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_RingMembersFrame_0Vector)
  int total_size = 0;

  // repeated .PB_RingMembersFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RingMembersFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_RingMembersFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_RingMembersFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_RingMembersFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_RingMembersFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_RingMembersFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_RingMembersFrame_0Vector::MergeFrom(const PB_RingMembersFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_RingMembersFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_RingMembersFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_RingMembersFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RingMembersFrame_0Vector::CopyFrom(const PB_RingMembersFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_RingMembersFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RingMembersFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_RingMembersFrame_0Vector::Swap(PB_RingMembersFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_RingMembersFrame_0Vector::InternalSwap(PB_RingMembersFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_RingMembersFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RingMembersFrame_0Vector_descriptor_;
  metadata.reflection = PB_RingMembersFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_RingMembersFrame_0Vector

// repeated .PB_RingMembersFrame_0 frames = 1;
int PB_RingMembersFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_RingMembersFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_RingMembersFrame_0& PB_RingMembersFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_RingMembersFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_RingMembersFrame_0* PB_RingMembersFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RingMembersFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_RingMembersFrame_0* PB_RingMembersFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_RingMembersFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_RingMembersFrame_0 >*
PB_RingMembersFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_RingMembersFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_RingMembersFrame_0 >&
PB_RingMembersFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_RingMembersFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CountLinksMatch::kC1FieldNumber;
const int PB_CountLinksMatch::kNumOfSNFieldNumber;
const int PB_CountLinksMatch::kNumOfCLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CountLinksMatch::PB_CountLinksMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CountLinksMatch)
}

void PB_CountLinksMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CountLinksMatch::PB_CountLinksMatch(const PB_CountLinksMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CountLinksMatch)
}

void PB_CountLinksMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
  numofsn_ = 0;
  numofcl_ = 0;
}

PB_CountLinksMatch::~PB_CountLinksMatch() {
  // @@protoc_insertion_point(destructor:PB_CountLinksMatch)
  SharedDtor();
}

void PB_CountLinksMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_CountLinksMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CountLinksMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CountLinksMatch_descriptor_;
}

const PB_CountLinksMatch& PB_CountLinksMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_CountLinksMatch* PB_CountLinksMatch::default_instance_ = NULL;

PB_CountLinksMatch* PB_CountLinksMatch::New(::google::protobuf::Arena* arena) const {
  PB_CountLinksMatch* n = new PB_CountLinksMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CountLinksMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CountLinksMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_CountLinksMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_CountLinksMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(c1_, numofcl_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_CountLinksMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CountLinksMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_numOfSN;
        break;
      }

      // optional int32 numOfSN = 2;
      case 2: {
        if (tag == 16) {
         parse_numOfSN:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numofsn_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_numOfCL;
        break;
      }

      // optional int32 numOfCL = 3;
      case 3: {
        if (tag == 24) {
         parse_numOfCL:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numofcl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CountLinksMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CountLinksMatch)
  return false;
#undef DO_
}

void PB_CountLinksMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CountLinksMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // optional int32 numOfSN = 2;
  if (this->numofsn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numofsn(), output);
  }

  // optional int32 numOfCL = 3;
  if (this->numofcl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numofcl(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CountLinksMatch)
}

::google::protobuf::uint8* PB_CountLinksMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CountLinksMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // optional int32 numOfSN = 2;
  if (this->numofsn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numofsn(), target);
  }

  // optional int32 numOfCL = 3;
  if (this->numofcl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numofcl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CountLinksMatch)
  return target;
}

int PB_CountLinksMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CountLinksMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  // optional int32 numOfSN = 2;
  if (this->numofsn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numofsn());
  }

  // optional int32 numOfCL = 3;
  if (this->numofcl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numofcl());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CountLinksMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CountLinksMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CountLinksMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CountLinksMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CountLinksMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CountLinksMatch)
    MergeFrom(*source);
  }
}

void PB_CountLinksMatch::MergeFrom(const PB_CountLinksMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CountLinksMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
  if (from.numofsn() != 0) {
    set_numofsn(from.numofsn());
  }
  if (from.numofcl() != 0) {
    set_numofcl(from.numofcl());
  }
}

void PB_CountLinksMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CountLinksMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CountLinksMatch::CopyFrom(const PB_CountLinksMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CountLinksMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CountLinksMatch::IsInitialized() const {

  return true;
}

void PB_CountLinksMatch::Swap(PB_CountLinksMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CountLinksMatch::InternalSwap(PB_CountLinksMatch* other) {
  std::swap(c1_, other->c1_);
  std::swap(numofsn_, other->numofsn_);
  std::swap(numofcl_, other->numofcl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CountLinksMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CountLinksMatch_descriptor_;
  metadata.reflection = PB_CountLinksMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CountLinksMatch

// optional int32 C1 = 1;
void PB_CountLinksMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksMatch.C1)
  return c1_;
}
 void PB_CountLinksMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksMatch.C1)
}

// optional int32 numOfSN = 2;
void PB_CountLinksMatch::clear_numofsn() {
  numofsn_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksMatch::numofsn() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksMatch.numOfSN)
  return numofsn_;
}
 void PB_CountLinksMatch::set_numofsn(::google::protobuf::int32 value) {
  
  numofsn_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksMatch.numOfSN)
}

// optional int32 numOfCL = 3;
void PB_CountLinksMatch::clear_numofcl() {
  numofcl_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksMatch::numofcl() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksMatch.numOfCL)
  return numofcl_;
}
 void PB_CountLinksMatch::set_numofcl(::google::protobuf::int32 value) {
  
  numofcl_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksMatch.numOfCL)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CountLinksMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CountLinksMatchSet::PB_CountLinksMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CountLinksMatchSet)
}

void PB_CountLinksMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CountLinksMatchSet::PB_CountLinksMatchSet(const PB_CountLinksMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CountLinksMatchSet)
}

void PB_CountLinksMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_CountLinksMatchSet::~PB_CountLinksMatchSet() {
  // @@protoc_insertion_point(destructor:PB_CountLinksMatchSet)
  SharedDtor();
}

void PB_CountLinksMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_CountLinksMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CountLinksMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CountLinksMatchSet_descriptor_;
}

const PB_CountLinksMatchSet& PB_CountLinksMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_CountLinksMatchSet* PB_CountLinksMatchSet::default_instance_ = NULL;

PB_CountLinksMatchSet* PB_CountLinksMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_CountLinksMatchSet* n = new PB_CountLinksMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CountLinksMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CountLinksMatchSet)
  matches_.Clear();
}

bool PB_CountLinksMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CountLinksMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_CountLinksMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CountLinksMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CountLinksMatchSet)
  return false;
#undef DO_
}

void PB_CountLinksMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CountLinksMatchSet)
  // repeated .PB_CountLinksMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CountLinksMatchSet)
}

::google::protobuf::uint8* PB_CountLinksMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CountLinksMatchSet)
  // repeated .PB_CountLinksMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CountLinksMatchSet)
  return target;
}

int PB_CountLinksMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CountLinksMatchSet)
  int total_size = 0;

  // repeated .PB_CountLinksMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CountLinksMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CountLinksMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CountLinksMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CountLinksMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CountLinksMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CountLinksMatchSet)
    MergeFrom(*source);
  }
}

void PB_CountLinksMatchSet::MergeFrom(const PB_CountLinksMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CountLinksMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_CountLinksMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CountLinksMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CountLinksMatchSet::CopyFrom(const PB_CountLinksMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CountLinksMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CountLinksMatchSet::IsInitialized() const {

  return true;
}

void PB_CountLinksMatchSet::Swap(PB_CountLinksMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CountLinksMatchSet::InternalSwap(PB_CountLinksMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CountLinksMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CountLinksMatchSet_descriptor_;
  metadata.reflection = PB_CountLinksMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CountLinksMatchSet

// repeated .PB_CountLinksMatch matches = 1;
int PB_CountLinksMatchSet::matches_size() const {
  return matches_.size();
}
void PB_CountLinksMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_CountLinksMatch& PB_CountLinksMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_CountLinksMatchSet.matches)
  return matches_.Get(index);
}
::PB_CountLinksMatch* PB_CountLinksMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_CountLinksMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_CountLinksMatch* PB_CountLinksMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_CountLinksMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_CountLinksMatch >*
PB_CountLinksMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_CountLinksMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_CountLinksMatch >&
PB_CountLinksMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_CountLinksMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumEqualityWithMemberMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumEqualityWithMemberMatch::PB_NumEqualityWithMemberMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumEqualityWithMemberMatch)
}

void PB_NumEqualityWithMemberMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumEqualityWithMemberMatch::PB_NumEqualityWithMemberMatch(const PB_NumEqualityWithMemberMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumEqualityWithMemberMatch)
}

void PB_NumEqualityWithMemberMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_NumEqualityWithMemberMatch::~PB_NumEqualityWithMemberMatch() {
  // @@protoc_insertion_point(destructor:PB_NumEqualityWithMemberMatch)
  SharedDtor();
}

void PB_NumEqualityWithMemberMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumEqualityWithMemberMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumEqualityWithMemberMatch_descriptor_;
}

const PB_NumEqualityWithMemberMatch& PB_NumEqualityWithMemberMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumEqualityWithMemberMatch* PB_NumEqualityWithMemberMatch::default_instance_ = NULL;

PB_NumEqualityWithMemberMatch* PB_NumEqualityWithMemberMatch::New(::google::protobuf::Arena* arena) const {
  PB_NumEqualityWithMemberMatch* n = new PB_NumEqualityWithMemberMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumEqualityWithMemberMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumEqualityWithMemberMatch)
  c1_ = 0;
}

bool PB_NumEqualityWithMemberMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumEqualityWithMemberMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumEqualityWithMemberMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumEqualityWithMemberMatch)
  return false;
#undef DO_
}

void PB_NumEqualityWithMemberMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumEqualityWithMemberMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumEqualityWithMemberMatch)
}

::google::protobuf::uint8* PB_NumEqualityWithMemberMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumEqualityWithMemberMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumEqualityWithMemberMatch)
  return target;
}

int PB_NumEqualityWithMemberMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumEqualityWithMemberMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumEqualityWithMemberMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumEqualityWithMemberMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumEqualityWithMemberMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumEqualityWithMemberMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumEqualityWithMemberMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumEqualityWithMemberMatch)
    MergeFrom(*source);
  }
}

void PB_NumEqualityWithMemberMatch::MergeFrom(const PB_NumEqualityWithMemberMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumEqualityWithMemberMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_NumEqualityWithMemberMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumEqualityWithMemberMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumEqualityWithMemberMatch::CopyFrom(const PB_NumEqualityWithMemberMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumEqualityWithMemberMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumEqualityWithMemberMatch::IsInitialized() const {

  return true;
}

void PB_NumEqualityWithMemberMatch::Swap(PB_NumEqualityWithMemberMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumEqualityWithMemberMatch::InternalSwap(PB_NumEqualityWithMemberMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumEqualityWithMemberMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumEqualityWithMemberMatch_descriptor_;
  metadata.reflection = PB_NumEqualityWithMemberMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumEqualityWithMemberMatch

// optional int32 C1 = 1;
void PB_NumEqualityWithMemberMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_NumEqualityWithMemberMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_NumEqualityWithMemberMatch.C1)
  return c1_;
}
 void PB_NumEqualityWithMemberMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_NumEqualityWithMemberMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumEqualityWithMemberMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumEqualityWithMemberMatchSet::PB_NumEqualityWithMemberMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumEqualityWithMemberMatchSet)
}

void PB_NumEqualityWithMemberMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumEqualityWithMemberMatchSet::PB_NumEqualityWithMemberMatchSet(const PB_NumEqualityWithMemberMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumEqualityWithMemberMatchSet)
}

void PB_NumEqualityWithMemberMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NumEqualityWithMemberMatchSet::~PB_NumEqualityWithMemberMatchSet() {
  // @@protoc_insertion_point(destructor:PB_NumEqualityWithMemberMatchSet)
  SharedDtor();
}

void PB_NumEqualityWithMemberMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumEqualityWithMemberMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumEqualityWithMemberMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumEqualityWithMemberMatchSet_descriptor_;
}

const PB_NumEqualityWithMemberMatchSet& PB_NumEqualityWithMemberMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumEqualityWithMemberMatchSet* PB_NumEqualityWithMemberMatchSet::default_instance_ = NULL;

PB_NumEqualityWithMemberMatchSet* PB_NumEqualityWithMemberMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_NumEqualityWithMemberMatchSet* n = new PB_NumEqualityWithMemberMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumEqualityWithMemberMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumEqualityWithMemberMatchSet)
  matches_.Clear();
}

bool PB_NumEqualityWithMemberMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumEqualityWithMemberMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NumEqualityWithMemberMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumEqualityWithMemberMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumEqualityWithMemberMatchSet)
  return false;
#undef DO_
}

void PB_NumEqualityWithMemberMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumEqualityWithMemberMatchSet)
  // repeated .PB_NumEqualityWithMemberMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumEqualityWithMemberMatchSet)
}

::google::protobuf::uint8* PB_NumEqualityWithMemberMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumEqualityWithMemberMatchSet)
  // repeated .PB_NumEqualityWithMemberMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumEqualityWithMemberMatchSet)
  return target;
}

int PB_NumEqualityWithMemberMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumEqualityWithMemberMatchSet)
  int total_size = 0;

  // repeated .PB_NumEqualityWithMemberMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumEqualityWithMemberMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumEqualityWithMemberMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumEqualityWithMemberMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumEqualityWithMemberMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumEqualityWithMemberMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumEqualityWithMemberMatchSet)
    MergeFrom(*source);
  }
}

void PB_NumEqualityWithMemberMatchSet::MergeFrom(const PB_NumEqualityWithMemberMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumEqualityWithMemberMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_NumEqualityWithMemberMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumEqualityWithMemberMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumEqualityWithMemberMatchSet::CopyFrom(const PB_NumEqualityWithMemberMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumEqualityWithMemberMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumEqualityWithMemberMatchSet::IsInitialized() const {

  return true;
}

void PB_NumEqualityWithMemberMatchSet::Swap(PB_NumEqualityWithMemberMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumEqualityWithMemberMatchSet::InternalSwap(PB_NumEqualityWithMemberMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumEqualityWithMemberMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumEqualityWithMemberMatchSet_descriptor_;
  metadata.reflection = PB_NumEqualityWithMemberMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumEqualityWithMemberMatchSet

// repeated .PB_NumEqualityWithMemberMatch matches = 1;
int PB_NumEqualityWithMemberMatchSet::matches_size() const {
  return matches_.size();
}
void PB_NumEqualityWithMemberMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_NumEqualityWithMemberMatch& PB_NumEqualityWithMemberMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_NumEqualityWithMemberMatchSet.matches)
  return matches_.Get(index);
}
::PB_NumEqualityWithMemberMatch* PB_NumEqualityWithMemberMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NumEqualityWithMemberMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_NumEqualityWithMemberMatch* PB_NumEqualityWithMemberMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_NumEqualityWithMemberMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NumEqualityWithMemberMatch >*
PB_NumEqualityWithMemberMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_NumEqualityWithMemberMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NumEqualityWithMemberMatch >&
PB_NumEqualityWithMemberMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_NumEqualityWithMemberMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_LinkedFrame_1::k0FieldNumber;
const int PB_LinkedFrame_1::k1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_LinkedFrame_1::PB_LinkedFrame_1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_LinkedFrame_1)
}

void PB_LinkedFrame_1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_LinkedFrame_1::PB_LinkedFrame_1(const PB_LinkedFrame_1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_LinkedFrame_1)
}

void PB_LinkedFrame_1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
}

PB_LinkedFrame_1::~PB_LinkedFrame_1() {
  // @@protoc_insertion_point(destructor:PB_LinkedFrame_1)
  SharedDtor();
}

void PB_LinkedFrame_1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_LinkedFrame_1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_LinkedFrame_1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_LinkedFrame_1_descriptor_;
}

const PB_LinkedFrame_1& PB_LinkedFrame_1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_LinkedFrame_1* PB_LinkedFrame_1::default_instance_ = NULL;

PB_LinkedFrame_1* PB_LinkedFrame_1::New(::google::protobuf::Arena* arena) const {
  PB_LinkedFrame_1* n = new PB_LinkedFrame_1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_LinkedFrame_1::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_LinkedFrame_1)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_LinkedFrame_1, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_LinkedFrame_1*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _1_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_LinkedFrame_1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_LinkedFrame_1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_LinkedFrame_1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_LinkedFrame_1)
  return false;
#undef DO_
}

void PB_LinkedFrame_1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_LinkedFrame_1)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_LinkedFrame_1)
}

::google::protobuf::uint8* PB_LinkedFrame_1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_LinkedFrame_1)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_LinkedFrame_1)
  return target;
}

int PB_LinkedFrame_1::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_LinkedFrame_1)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_LinkedFrame_1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_LinkedFrame_1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_LinkedFrame_1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_LinkedFrame_1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_LinkedFrame_1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_LinkedFrame_1)
    MergeFrom(*source);
  }
}

void PB_LinkedFrame_1::MergeFrom(const PB_LinkedFrame_1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_LinkedFrame_1)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
}

void PB_LinkedFrame_1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_LinkedFrame_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_LinkedFrame_1::CopyFrom(const PB_LinkedFrame_1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_LinkedFrame_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LinkedFrame_1::IsInitialized() const {

  return true;
}

void PB_LinkedFrame_1::Swap(PB_LinkedFrame_1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_LinkedFrame_1::InternalSwap(PB_LinkedFrame_1* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_LinkedFrame_1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_LinkedFrame_1_descriptor_;
  metadata.reflection = PB_LinkedFrame_1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_LinkedFrame_1

// optional int32 _0 = 1;
void PB_LinkedFrame_1::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_LinkedFrame_1::_0() const {
  // @@protoc_insertion_point(field_get:PB_LinkedFrame_1._0)
  return _0_;
}
 void PB_LinkedFrame_1::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_LinkedFrame_1._0)
}

// optional int32 _1 = 2;
void PB_LinkedFrame_1::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_LinkedFrame_1::_1() const {
  // @@protoc_insertion_point(field_get:PB_LinkedFrame_1._1)
  return _1_;
}
 void PB_LinkedFrame_1::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_LinkedFrame_1._1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_LinkedFrame_1Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_LinkedFrame_1Vector::PB_LinkedFrame_1Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_LinkedFrame_1Vector)
}

void PB_LinkedFrame_1Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_LinkedFrame_1Vector::PB_LinkedFrame_1Vector(const PB_LinkedFrame_1Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_LinkedFrame_1Vector)
}

void PB_LinkedFrame_1Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_LinkedFrame_1Vector::~PB_LinkedFrame_1Vector() {
  // @@protoc_insertion_point(destructor:PB_LinkedFrame_1Vector)
  SharedDtor();
}

void PB_LinkedFrame_1Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_LinkedFrame_1Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_LinkedFrame_1Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_LinkedFrame_1Vector_descriptor_;
}

const PB_LinkedFrame_1Vector& PB_LinkedFrame_1Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_LinkedFrame_1Vector* PB_LinkedFrame_1Vector::default_instance_ = NULL;

PB_LinkedFrame_1Vector* PB_LinkedFrame_1Vector::New(::google::protobuf::Arena* arena) const {
  PB_LinkedFrame_1Vector* n = new PB_LinkedFrame_1Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_LinkedFrame_1Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_LinkedFrame_1Vector)
  frames_.Clear();
}

bool PB_LinkedFrame_1Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_LinkedFrame_1Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_LinkedFrame_1 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_LinkedFrame_1Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_LinkedFrame_1Vector)
  return false;
#undef DO_
}

void PB_LinkedFrame_1Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_LinkedFrame_1Vector)
  // repeated .PB_LinkedFrame_1 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_LinkedFrame_1Vector)
}

::google::protobuf::uint8* PB_LinkedFrame_1Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_LinkedFrame_1Vector)
  // repeated .PB_LinkedFrame_1 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_LinkedFrame_1Vector)
  return target;
}

int PB_LinkedFrame_1Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_LinkedFrame_1Vector)
  int total_size = 0;

  // repeated .PB_LinkedFrame_1 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_LinkedFrame_1Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_LinkedFrame_1Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_LinkedFrame_1Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_LinkedFrame_1Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_LinkedFrame_1Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_LinkedFrame_1Vector)
    MergeFrom(*source);
  }
}

void PB_LinkedFrame_1Vector::MergeFrom(const PB_LinkedFrame_1Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_LinkedFrame_1Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_LinkedFrame_1Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_LinkedFrame_1Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_LinkedFrame_1Vector::CopyFrom(const PB_LinkedFrame_1Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_LinkedFrame_1Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LinkedFrame_1Vector::IsInitialized() const {

  return true;
}

void PB_LinkedFrame_1Vector::Swap(PB_LinkedFrame_1Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_LinkedFrame_1Vector::InternalSwap(PB_LinkedFrame_1Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_LinkedFrame_1Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_LinkedFrame_1Vector_descriptor_;
  metadata.reflection = PB_LinkedFrame_1Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_LinkedFrame_1Vector

// repeated .PB_LinkedFrame_1 frames = 1;
int PB_LinkedFrame_1Vector::frames_size() const {
  return frames_.size();
}
void PB_LinkedFrame_1Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_LinkedFrame_1& PB_LinkedFrame_1Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_LinkedFrame_1Vector.frames)
  return frames_.Get(index);
}
::PB_LinkedFrame_1* PB_LinkedFrame_1Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_LinkedFrame_1Vector.frames)
  return frames_.Mutable(index);
}
::PB_LinkedFrame_1* PB_LinkedFrame_1Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_LinkedFrame_1Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_LinkedFrame_1 >*
PB_LinkedFrame_1Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_LinkedFrame_1Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_LinkedFrame_1 >&
PB_LinkedFrame_1Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_LinkedFrame_1Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_LinkedFrame_0::k0FieldNumber;
const int PB_LinkedFrame_0::k1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_LinkedFrame_0::PB_LinkedFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_LinkedFrame_0)
}

void PB_LinkedFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_LinkedFrame_0::PB_LinkedFrame_0(const PB_LinkedFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_LinkedFrame_0)
}

void PB_LinkedFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
}

PB_LinkedFrame_0::~PB_LinkedFrame_0() {
  // @@protoc_insertion_point(destructor:PB_LinkedFrame_0)
  SharedDtor();
}

void PB_LinkedFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_LinkedFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_LinkedFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_LinkedFrame_0_descriptor_;
}

const PB_LinkedFrame_0& PB_LinkedFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_LinkedFrame_0* PB_LinkedFrame_0::default_instance_ = NULL;

PB_LinkedFrame_0* PB_LinkedFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_LinkedFrame_0* n = new PB_LinkedFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_LinkedFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_LinkedFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_LinkedFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_LinkedFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _1_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_LinkedFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_LinkedFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_LinkedFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_LinkedFrame_0)
  return false;
#undef DO_
}

void PB_LinkedFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_LinkedFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_LinkedFrame_0)
}

::google::protobuf::uint8* PB_LinkedFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_LinkedFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_LinkedFrame_0)
  return target;
}

int PB_LinkedFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_LinkedFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_LinkedFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_LinkedFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_LinkedFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_LinkedFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_LinkedFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_LinkedFrame_0)
    MergeFrom(*source);
  }
}

void PB_LinkedFrame_0::MergeFrom(const PB_LinkedFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_LinkedFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
}

void PB_LinkedFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_LinkedFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_LinkedFrame_0::CopyFrom(const PB_LinkedFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_LinkedFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LinkedFrame_0::IsInitialized() const {

  return true;
}

void PB_LinkedFrame_0::Swap(PB_LinkedFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_LinkedFrame_0::InternalSwap(PB_LinkedFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_LinkedFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_LinkedFrame_0_descriptor_;
  metadata.reflection = PB_LinkedFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_LinkedFrame_0

// optional int32 _0 = 1;
void PB_LinkedFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_LinkedFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_LinkedFrame_0._0)
  return _0_;
}
 void PB_LinkedFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_LinkedFrame_0._0)
}

// optional int32 _1 = 2;
void PB_LinkedFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_LinkedFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_LinkedFrame_0._1)
  return _1_;
}
 void PB_LinkedFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_LinkedFrame_0._1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_LinkedFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_LinkedFrame_0Vector::PB_LinkedFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_LinkedFrame_0Vector)
}

void PB_LinkedFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_LinkedFrame_0Vector::PB_LinkedFrame_0Vector(const PB_LinkedFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_LinkedFrame_0Vector)
}

void PB_LinkedFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_LinkedFrame_0Vector::~PB_LinkedFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_LinkedFrame_0Vector)
  SharedDtor();
}

void PB_LinkedFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_LinkedFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_LinkedFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_LinkedFrame_0Vector_descriptor_;
}

const PB_LinkedFrame_0Vector& PB_LinkedFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_LinkedFrame_0Vector* PB_LinkedFrame_0Vector::default_instance_ = NULL;

PB_LinkedFrame_0Vector* PB_LinkedFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_LinkedFrame_0Vector* n = new PB_LinkedFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_LinkedFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_LinkedFrame_0Vector)
  frames_.Clear();
}

bool PB_LinkedFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_LinkedFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_LinkedFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_LinkedFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_LinkedFrame_0Vector)
  return false;
#undef DO_
}

void PB_LinkedFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_LinkedFrame_0Vector)
  // repeated .PB_LinkedFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_LinkedFrame_0Vector)
}

::google::protobuf::uint8* PB_LinkedFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_LinkedFrame_0Vector)
  // repeated .PB_LinkedFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_LinkedFrame_0Vector)
  return target;
}

int PB_LinkedFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_LinkedFrame_0Vector)
  int total_size = 0;

  // repeated .PB_LinkedFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_LinkedFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_LinkedFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_LinkedFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_LinkedFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_LinkedFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_LinkedFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_LinkedFrame_0Vector::MergeFrom(const PB_LinkedFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_LinkedFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_LinkedFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_LinkedFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_LinkedFrame_0Vector::CopyFrom(const PB_LinkedFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_LinkedFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LinkedFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_LinkedFrame_0Vector::Swap(PB_LinkedFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_LinkedFrame_0Vector::InternalSwap(PB_LinkedFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_LinkedFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_LinkedFrame_0Vector_descriptor_;
  metadata.reflection = PB_LinkedFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_LinkedFrame_0Vector

// repeated .PB_LinkedFrame_0 frames = 1;
int PB_LinkedFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_LinkedFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_LinkedFrame_0& PB_LinkedFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_LinkedFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_LinkedFrame_0* PB_LinkedFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_LinkedFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_LinkedFrame_0* PB_LinkedFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_LinkedFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_LinkedFrame_0 >*
PB_LinkedFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_LinkedFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_LinkedFrame_0 >&
PB_LinkedFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_LinkedFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedSNMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedSNMatch::PB_IsolatedSNMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedSNMatch)
}

void PB_IsolatedSNMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedSNMatch::PB_IsolatedSNMatch(const PB_IsolatedSNMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedSNMatch)
}

void PB_IsolatedSNMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_IsolatedSNMatch::~PB_IsolatedSNMatch() {
  // @@protoc_insertion_point(destructor:PB_IsolatedSNMatch)
  SharedDtor();
}

void PB_IsolatedSNMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedSNMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedSNMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedSNMatch_descriptor_;
}

const PB_IsolatedSNMatch& PB_IsolatedSNMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedSNMatch* PB_IsolatedSNMatch::default_instance_ = NULL;

PB_IsolatedSNMatch* PB_IsolatedSNMatch::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedSNMatch* n = new PB_IsolatedSNMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedSNMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedSNMatch)
  c1_ = 0;
}

bool PB_IsolatedSNMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedSNMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedSNMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedSNMatch)
  return false;
#undef DO_
}

void PB_IsolatedSNMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedSNMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedSNMatch)
}

::google::protobuf::uint8* PB_IsolatedSNMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedSNMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedSNMatch)
  return target;
}

int PB_IsolatedSNMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedSNMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedSNMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedSNMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedSNMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedSNMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedSNMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedSNMatch)
    MergeFrom(*source);
  }
}

void PB_IsolatedSNMatch::MergeFrom(const PB_IsolatedSNMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedSNMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_IsolatedSNMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedSNMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedSNMatch::CopyFrom(const PB_IsolatedSNMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedSNMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedSNMatch::IsInitialized() const {

  return true;
}

void PB_IsolatedSNMatch::Swap(PB_IsolatedSNMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedSNMatch::InternalSwap(PB_IsolatedSNMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedSNMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedSNMatch_descriptor_;
  metadata.reflection = PB_IsolatedSNMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedSNMatch

// optional int32 C1 = 1;
void PB_IsolatedSNMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_IsolatedSNMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_IsolatedSNMatch.C1)
  return c1_;
}
 void PB_IsolatedSNMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_IsolatedSNMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedSNMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedSNMatchSet::PB_IsolatedSNMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedSNMatchSet)
}

void PB_IsolatedSNMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedSNMatchSet::PB_IsolatedSNMatchSet(const PB_IsolatedSNMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedSNMatchSet)
}

void PB_IsolatedSNMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsolatedSNMatchSet::~PB_IsolatedSNMatchSet() {
  // @@protoc_insertion_point(destructor:PB_IsolatedSNMatchSet)
  SharedDtor();
}

void PB_IsolatedSNMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedSNMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedSNMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedSNMatchSet_descriptor_;
}

const PB_IsolatedSNMatchSet& PB_IsolatedSNMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedSNMatchSet* PB_IsolatedSNMatchSet::default_instance_ = NULL;

PB_IsolatedSNMatchSet* PB_IsolatedSNMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedSNMatchSet* n = new PB_IsolatedSNMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedSNMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedSNMatchSet)
  matches_.Clear();
}

bool PB_IsolatedSNMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedSNMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsolatedSNMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedSNMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedSNMatchSet)
  return false;
#undef DO_
}

void PB_IsolatedSNMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedSNMatchSet)
  // repeated .PB_IsolatedSNMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedSNMatchSet)
}

::google::protobuf::uint8* PB_IsolatedSNMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedSNMatchSet)
  // repeated .PB_IsolatedSNMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedSNMatchSet)
  return target;
}

int PB_IsolatedSNMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedSNMatchSet)
  int total_size = 0;

  // repeated .PB_IsolatedSNMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedSNMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedSNMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedSNMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedSNMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedSNMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedSNMatchSet)
    MergeFrom(*source);
  }
}

void PB_IsolatedSNMatchSet::MergeFrom(const PB_IsolatedSNMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedSNMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_IsolatedSNMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedSNMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedSNMatchSet::CopyFrom(const PB_IsolatedSNMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedSNMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedSNMatchSet::IsInitialized() const {

  return true;
}

void PB_IsolatedSNMatchSet::Swap(PB_IsolatedSNMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedSNMatchSet::InternalSwap(PB_IsolatedSNMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedSNMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedSNMatchSet_descriptor_;
  metadata.reflection = PB_IsolatedSNMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedSNMatchSet

// repeated .PB_IsolatedSNMatch matches = 1;
int PB_IsolatedSNMatchSet::matches_size() const {
  return matches_.size();
}
void PB_IsolatedSNMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_IsolatedSNMatch& PB_IsolatedSNMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsolatedSNMatchSet.matches)
  return matches_.Get(index);
}
::PB_IsolatedSNMatch* PB_IsolatedSNMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsolatedSNMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_IsolatedSNMatch* PB_IsolatedSNMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_IsolatedSNMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsolatedSNMatch >*
PB_IsolatedSNMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsolatedSNMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsolatedSNMatch >&
PB_IsolatedSNMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_IsolatedSNMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumInEqualityWithMemberMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumInEqualityWithMemberMatch::PB_NumInEqualityWithMemberMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumInEqualityWithMemberMatch)
}

void PB_NumInEqualityWithMemberMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumInEqualityWithMemberMatch::PB_NumInEqualityWithMemberMatch(const PB_NumInEqualityWithMemberMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumInEqualityWithMemberMatch)
}

void PB_NumInEqualityWithMemberMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_NumInEqualityWithMemberMatch::~PB_NumInEqualityWithMemberMatch() {
  // @@protoc_insertion_point(destructor:PB_NumInEqualityWithMemberMatch)
  SharedDtor();
}

void PB_NumInEqualityWithMemberMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumInEqualityWithMemberMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumInEqualityWithMemberMatch_descriptor_;
}

const PB_NumInEqualityWithMemberMatch& PB_NumInEqualityWithMemberMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumInEqualityWithMemberMatch* PB_NumInEqualityWithMemberMatch::default_instance_ = NULL;

PB_NumInEqualityWithMemberMatch* PB_NumInEqualityWithMemberMatch::New(::google::protobuf::Arena* arena) const {
  PB_NumInEqualityWithMemberMatch* n = new PB_NumInEqualityWithMemberMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumInEqualityWithMemberMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumInEqualityWithMemberMatch)
  c1_ = 0;
}

bool PB_NumInEqualityWithMemberMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumInEqualityWithMemberMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumInEqualityWithMemberMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumInEqualityWithMemberMatch)
  return false;
#undef DO_
}

void PB_NumInEqualityWithMemberMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumInEqualityWithMemberMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumInEqualityWithMemberMatch)
}

::google::protobuf::uint8* PB_NumInEqualityWithMemberMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumInEqualityWithMemberMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumInEqualityWithMemberMatch)
  return target;
}

int PB_NumInEqualityWithMemberMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumInEqualityWithMemberMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumInEqualityWithMemberMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumInEqualityWithMemberMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumInEqualityWithMemberMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumInEqualityWithMemberMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumInEqualityWithMemberMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumInEqualityWithMemberMatch)
    MergeFrom(*source);
  }
}

void PB_NumInEqualityWithMemberMatch::MergeFrom(const PB_NumInEqualityWithMemberMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumInEqualityWithMemberMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_NumInEqualityWithMemberMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumInEqualityWithMemberMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumInEqualityWithMemberMatch::CopyFrom(const PB_NumInEqualityWithMemberMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumInEqualityWithMemberMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumInEqualityWithMemberMatch::IsInitialized() const {

  return true;
}

void PB_NumInEqualityWithMemberMatch::Swap(PB_NumInEqualityWithMemberMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumInEqualityWithMemberMatch::InternalSwap(PB_NumInEqualityWithMemberMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumInEqualityWithMemberMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumInEqualityWithMemberMatch_descriptor_;
  metadata.reflection = PB_NumInEqualityWithMemberMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumInEqualityWithMemberMatch

// optional int32 C1 = 1;
void PB_NumInEqualityWithMemberMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_NumInEqualityWithMemberMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberMatch.C1)
  return c1_;
}
 void PB_NumInEqualityWithMemberMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_NumInEqualityWithMemberMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NumInEqualityWithMemberMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NumInEqualityWithMemberMatchSet::PB_NumInEqualityWithMemberMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NumInEqualityWithMemberMatchSet)
}

void PB_NumInEqualityWithMemberMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NumInEqualityWithMemberMatchSet::PB_NumInEqualityWithMemberMatchSet(const PB_NumInEqualityWithMemberMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NumInEqualityWithMemberMatchSet)
}

void PB_NumInEqualityWithMemberMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NumInEqualityWithMemberMatchSet::~PB_NumInEqualityWithMemberMatchSet() {
  // @@protoc_insertion_point(destructor:PB_NumInEqualityWithMemberMatchSet)
  SharedDtor();
}

void PB_NumInEqualityWithMemberMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NumInEqualityWithMemberMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NumInEqualityWithMemberMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NumInEqualityWithMemberMatchSet_descriptor_;
}

const PB_NumInEqualityWithMemberMatchSet& PB_NumInEqualityWithMemberMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NumInEqualityWithMemberMatchSet* PB_NumInEqualityWithMemberMatchSet::default_instance_ = NULL;

PB_NumInEqualityWithMemberMatchSet* PB_NumInEqualityWithMemberMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_NumInEqualityWithMemberMatchSet* n = new PB_NumInEqualityWithMemberMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NumInEqualityWithMemberMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NumInEqualityWithMemberMatchSet)
  matches_.Clear();
}

bool PB_NumInEqualityWithMemberMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NumInEqualityWithMemberMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NumInEqualityWithMemberMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NumInEqualityWithMemberMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NumInEqualityWithMemberMatchSet)
  return false;
#undef DO_
}

void PB_NumInEqualityWithMemberMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NumInEqualityWithMemberMatchSet)
  // repeated .PB_NumInEqualityWithMemberMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NumInEqualityWithMemberMatchSet)
}

::google::protobuf::uint8* PB_NumInEqualityWithMemberMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NumInEqualityWithMemberMatchSet)
  // repeated .PB_NumInEqualityWithMemberMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NumInEqualityWithMemberMatchSet)
  return target;
}

int PB_NumInEqualityWithMemberMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NumInEqualityWithMemberMatchSet)
  int total_size = 0;

  // repeated .PB_NumInEqualityWithMemberMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NumInEqualityWithMemberMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NumInEqualityWithMemberMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NumInEqualityWithMemberMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NumInEqualityWithMemberMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NumInEqualityWithMemberMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NumInEqualityWithMemberMatchSet)
    MergeFrom(*source);
  }
}

void PB_NumInEqualityWithMemberMatchSet::MergeFrom(const PB_NumInEqualityWithMemberMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NumInEqualityWithMemberMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_NumInEqualityWithMemberMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NumInEqualityWithMemberMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NumInEqualityWithMemberMatchSet::CopyFrom(const PB_NumInEqualityWithMemberMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NumInEqualityWithMemberMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NumInEqualityWithMemberMatchSet::IsInitialized() const {

  return true;
}

void PB_NumInEqualityWithMemberMatchSet::Swap(PB_NumInEqualityWithMemberMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NumInEqualityWithMemberMatchSet::InternalSwap(PB_NumInEqualityWithMemberMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NumInEqualityWithMemberMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NumInEqualityWithMemberMatchSet_descriptor_;
  metadata.reflection = PB_NumInEqualityWithMemberMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NumInEqualityWithMemberMatchSet

// repeated .PB_NumInEqualityWithMemberMatch matches = 1;
int PB_NumInEqualityWithMemberMatchSet::matches_size() const {
  return matches_.size();
}
void PB_NumInEqualityWithMemberMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_NumInEqualityWithMemberMatch& PB_NumInEqualityWithMemberMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_NumInEqualityWithMemberMatchSet.matches)
  return matches_.Get(index);
}
::PB_NumInEqualityWithMemberMatch* PB_NumInEqualityWithMemberMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NumInEqualityWithMemberMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_NumInEqualityWithMemberMatch* PB_NumInEqualityWithMemberMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_NumInEqualityWithMemberMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NumInEqualityWithMemberMatch >*
PB_NumInEqualityWithMemberMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_NumInEqualityWithMemberMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NumInEqualityWithMemberMatch >&
PB_NumInEqualityWithMemberMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_NumInEqualityWithMemberMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PconnectedMatch::kC1FieldNumber;
const int PB_PconnectedMatch::kC2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PconnectedMatch::PB_PconnectedMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PconnectedMatch)
}

void PB_PconnectedMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PconnectedMatch::PB_PconnectedMatch(const PB_PconnectedMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PconnectedMatch)
}

void PB_PconnectedMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
  c2_ = 0;
}

PB_PconnectedMatch::~PB_PconnectedMatch() {
  // @@protoc_insertion_point(destructor:PB_PconnectedMatch)
  SharedDtor();
}

void PB_PconnectedMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_PconnectedMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PconnectedMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PconnectedMatch_descriptor_;
}

const PB_PconnectedMatch& PB_PconnectedMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_PconnectedMatch* PB_PconnectedMatch::default_instance_ = NULL;

PB_PconnectedMatch* PB_PconnectedMatch::New(::google::protobuf::Arena* arena) const {
  PB_PconnectedMatch* n = new PB_PconnectedMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PconnectedMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PconnectedMatch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_PconnectedMatch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_PconnectedMatch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(c1_, c2_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_PconnectedMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PconnectedMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_C2;
        break;
      }

      // optional int32 C2 = 2;
      case 2: {
        if (tag == 16) {
         parse_C2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PconnectedMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PconnectedMatch)
  return false;
#undef DO_
}

void PB_PconnectedMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PconnectedMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // optional int32 C2 = 2;
  if (this->c2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->c2(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_PconnectedMatch)
}

::google::protobuf::uint8* PB_PconnectedMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PconnectedMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // optional int32 C2 = 2;
  if (this->c2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->c2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_PconnectedMatch)
  return target;
}

int PB_PconnectedMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PconnectedMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  // optional int32 C2 = 2;
  if (this->c2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PconnectedMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PconnectedMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PconnectedMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PconnectedMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PconnectedMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PconnectedMatch)
    MergeFrom(*source);
  }
}

void PB_PconnectedMatch::MergeFrom(const PB_PconnectedMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PconnectedMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
  if (from.c2() != 0) {
    set_c2(from.c2());
  }
}

void PB_PconnectedMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PconnectedMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PconnectedMatch::CopyFrom(const PB_PconnectedMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PconnectedMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PconnectedMatch::IsInitialized() const {

  return true;
}

void PB_PconnectedMatch::Swap(PB_PconnectedMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PconnectedMatch::InternalSwap(PB_PconnectedMatch* other) {
  std::swap(c1_, other->c1_);
  std::swap(c2_, other->c2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PconnectedMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PconnectedMatch_descriptor_;
  metadata.reflection = PB_PconnectedMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PconnectedMatch

// optional int32 C1 = 1;
void PB_PconnectedMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedMatch.C1)
  return c1_;
}
 void PB_PconnectedMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedMatch.C1)
}

// optional int32 C2 = 2;
void PB_PconnectedMatch::clear_c2() {
  c2_ = 0;
}
 ::google::protobuf::int32 PB_PconnectedMatch::c2() const {
  // @@protoc_insertion_point(field_get:PB_PconnectedMatch.C2)
  return c2_;
}
 void PB_PconnectedMatch::set_c2(::google::protobuf::int32 value) {
  
  c2_ = value;
  // @@protoc_insertion_point(field_set:PB_PconnectedMatch.C2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_PconnectedMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_PconnectedMatchSet::PB_PconnectedMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PconnectedMatchSet)
}

void PB_PconnectedMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_PconnectedMatchSet::PB_PconnectedMatchSet(const PB_PconnectedMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PconnectedMatchSet)
}

void PB_PconnectedMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_PconnectedMatchSet::~PB_PconnectedMatchSet() {
  // @@protoc_insertion_point(destructor:PB_PconnectedMatchSet)
  SharedDtor();
}

void PB_PconnectedMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_PconnectedMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PconnectedMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PconnectedMatchSet_descriptor_;
}

const PB_PconnectedMatchSet& PB_PconnectedMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_PconnectedMatchSet* PB_PconnectedMatchSet::default_instance_ = NULL;

PB_PconnectedMatchSet* PB_PconnectedMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_PconnectedMatchSet* n = new PB_PconnectedMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_PconnectedMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PconnectedMatchSet)
  matches_.Clear();
}

bool PB_PconnectedMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PconnectedMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_PconnectedMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PconnectedMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PconnectedMatchSet)
  return false;
#undef DO_
}

void PB_PconnectedMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PconnectedMatchSet)
  // repeated .PB_PconnectedMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_PconnectedMatchSet)
}

::google::protobuf::uint8* PB_PconnectedMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PconnectedMatchSet)
  // repeated .PB_PconnectedMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_PconnectedMatchSet)
  return target;
}

int PB_PconnectedMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PconnectedMatchSet)
  int total_size = 0;

  // repeated .PB_PconnectedMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PconnectedMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PconnectedMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_PconnectedMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_PconnectedMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PconnectedMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PconnectedMatchSet)
    MergeFrom(*source);
  }
}

void PB_PconnectedMatchSet::MergeFrom(const PB_PconnectedMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PconnectedMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_PconnectedMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PconnectedMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PconnectedMatchSet::CopyFrom(const PB_PconnectedMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PconnectedMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PconnectedMatchSet::IsInitialized() const {

  return true;
}

void PB_PconnectedMatchSet::Swap(PB_PconnectedMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_PconnectedMatchSet::InternalSwap(PB_PconnectedMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_PconnectedMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PconnectedMatchSet_descriptor_;
  metadata.reflection = PB_PconnectedMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_PconnectedMatchSet

// repeated .PB_PconnectedMatch matches = 1;
int PB_PconnectedMatchSet::matches_size() const {
  return matches_.size();
}
void PB_PconnectedMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_PconnectedMatch& PB_PconnectedMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_PconnectedMatchSet.matches)
  return matches_.Get(index);
}
::PB_PconnectedMatch* PB_PconnectedMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_PconnectedMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_PconnectedMatch* PB_PconnectedMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_PconnectedMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_PconnectedMatch >*
PB_PconnectedMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_PconnectedMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_PconnectedMatch >&
PB_PconnectedMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_PconnectedMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NotInRingMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NotInRingMatch::PB_NotInRingMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NotInRingMatch)
}

void PB_NotInRingMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NotInRingMatch::PB_NotInRingMatch(const PB_NotInRingMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NotInRingMatch)
}

void PB_NotInRingMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_NotInRingMatch::~PB_NotInRingMatch() {
  // @@protoc_insertion_point(destructor:PB_NotInRingMatch)
  SharedDtor();
}

void PB_NotInRingMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NotInRingMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NotInRingMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NotInRingMatch_descriptor_;
}

const PB_NotInRingMatch& PB_NotInRingMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NotInRingMatch* PB_NotInRingMatch::default_instance_ = NULL;

PB_NotInRingMatch* PB_NotInRingMatch::New(::google::protobuf::Arena* arena) const {
  PB_NotInRingMatch* n = new PB_NotInRingMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NotInRingMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NotInRingMatch)
  c1_ = 0;
}

bool PB_NotInRingMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NotInRingMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NotInRingMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NotInRingMatch)
  return false;
#undef DO_
}

void PB_NotInRingMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NotInRingMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NotInRingMatch)
}

::google::protobuf::uint8* PB_NotInRingMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NotInRingMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NotInRingMatch)
  return target;
}

int PB_NotInRingMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NotInRingMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NotInRingMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NotInRingMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NotInRingMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NotInRingMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NotInRingMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NotInRingMatch)
    MergeFrom(*source);
  }
}

void PB_NotInRingMatch::MergeFrom(const PB_NotInRingMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NotInRingMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_NotInRingMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NotInRingMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NotInRingMatch::CopyFrom(const PB_NotInRingMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NotInRingMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NotInRingMatch::IsInitialized() const {

  return true;
}

void PB_NotInRingMatch::Swap(PB_NotInRingMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NotInRingMatch::InternalSwap(PB_NotInRingMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NotInRingMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NotInRingMatch_descriptor_;
  metadata.reflection = PB_NotInRingMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NotInRingMatch

// optional int32 C1 = 1;
void PB_NotInRingMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_NotInRingMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_NotInRingMatch.C1)
  return c1_;
}
 void PB_NotInRingMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_NotInRingMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NotInRingMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NotInRingMatchSet::PB_NotInRingMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NotInRingMatchSet)
}

void PB_NotInRingMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NotInRingMatchSet::PB_NotInRingMatchSet(const PB_NotInRingMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NotInRingMatchSet)
}

void PB_NotInRingMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NotInRingMatchSet::~PB_NotInRingMatchSet() {
  // @@protoc_insertion_point(destructor:PB_NotInRingMatchSet)
  SharedDtor();
}

void PB_NotInRingMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NotInRingMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NotInRingMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NotInRingMatchSet_descriptor_;
}

const PB_NotInRingMatchSet& PB_NotInRingMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NotInRingMatchSet* PB_NotInRingMatchSet::default_instance_ = NULL;

PB_NotInRingMatchSet* PB_NotInRingMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_NotInRingMatchSet* n = new PB_NotInRingMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NotInRingMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NotInRingMatchSet)
  matches_.Clear();
}

bool PB_NotInRingMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NotInRingMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NotInRingMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NotInRingMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NotInRingMatchSet)
  return false;
#undef DO_
}

void PB_NotInRingMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NotInRingMatchSet)
  // repeated .PB_NotInRingMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NotInRingMatchSet)
}

::google::protobuf::uint8* PB_NotInRingMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NotInRingMatchSet)
  // repeated .PB_NotInRingMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NotInRingMatchSet)
  return target;
}

int PB_NotInRingMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NotInRingMatchSet)
  int total_size = 0;

  // repeated .PB_NotInRingMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NotInRingMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NotInRingMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NotInRingMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NotInRingMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NotInRingMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NotInRingMatchSet)
    MergeFrom(*source);
  }
}

void PB_NotInRingMatchSet::MergeFrom(const PB_NotInRingMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NotInRingMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_NotInRingMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NotInRingMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NotInRingMatchSet::CopyFrom(const PB_NotInRingMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NotInRingMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NotInRingMatchSet::IsInitialized() const {

  return true;
}

void PB_NotInRingMatchSet::Swap(PB_NotInRingMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NotInRingMatchSet::InternalSwap(PB_NotInRingMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NotInRingMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NotInRingMatchSet_descriptor_;
  metadata.reflection = PB_NotInRingMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NotInRingMatchSet

// repeated .PB_NotInRingMatch matches = 1;
int PB_NotInRingMatchSet::matches_size() const {
  return matches_.size();
}
void PB_NotInRingMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_NotInRingMatch& PB_NotInRingMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_NotInRingMatchSet.matches)
  return matches_.Get(index);
}
::PB_NotInRingMatch* PB_NotInRingMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NotInRingMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_NotInRingMatch* PB_NotInRingMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_NotInRingMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NotInRingMatch >*
PB_NotInRingMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_NotInRingMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NotInRingMatch >&
PB_NotInRingMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_NotInRingMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedCLMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedCLMatch::PB_IsolatedCLMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedCLMatch)
}

void PB_IsolatedCLMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedCLMatch::PB_IsolatedCLMatch(const PB_IsolatedCLMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedCLMatch)
}

void PB_IsolatedCLMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_IsolatedCLMatch::~PB_IsolatedCLMatch() {
  // @@protoc_insertion_point(destructor:PB_IsolatedCLMatch)
  SharedDtor();
}

void PB_IsolatedCLMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedCLMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedCLMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedCLMatch_descriptor_;
}

const PB_IsolatedCLMatch& PB_IsolatedCLMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedCLMatch* PB_IsolatedCLMatch::default_instance_ = NULL;

PB_IsolatedCLMatch* PB_IsolatedCLMatch::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedCLMatch* n = new PB_IsolatedCLMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedCLMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedCLMatch)
  c1_ = 0;
}

bool PB_IsolatedCLMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedCLMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedCLMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedCLMatch)
  return false;
#undef DO_
}

void PB_IsolatedCLMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedCLMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedCLMatch)
}

::google::protobuf::uint8* PB_IsolatedCLMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedCLMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedCLMatch)
  return target;
}

int PB_IsolatedCLMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedCLMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedCLMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedCLMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedCLMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedCLMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedCLMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedCLMatch)
    MergeFrom(*source);
  }
}

void PB_IsolatedCLMatch::MergeFrom(const PB_IsolatedCLMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedCLMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_IsolatedCLMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedCLMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedCLMatch::CopyFrom(const PB_IsolatedCLMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedCLMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedCLMatch::IsInitialized() const {

  return true;
}

void PB_IsolatedCLMatch::Swap(PB_IsolatedCLMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedCLMatch::InternalSwap(PB_IsolatedCLMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedCLMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedCLMatch_descriptor_;
  metadata.reflection = PB_IsolatedCLMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedCLMatch

// optional int32 C1 = 1;
void PB_IsolatedCLMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_IsolatedCLMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_IsolatedCLMatch.C1)
  return c1_;
}
 void PB_IsolatedCLMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_IsolatedCLMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedCLMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedCLMatchSet::PB_IsolatedCLMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedCLMatchSet)
}

void PB_IsolatedCLMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedCLMatchSet::PB_IsolatedCLMatchSet(const PB_IsolatedCLMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedCLMatchSet)
}

void PB_IsolatedCLMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsolatedCLMatchSet::~PB_IsolatedCLMatchSet() {
  // @@protoc_insertion_point(destructor:PB_IsolatedCLMatchSet)
  SharedDtor();
}

void PB_IsolatedCLMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedCLMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedCLMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedCLMatchSet_descriptor_;
}

const PB_IsolatedCLMatchSet& PB_IsolatedCLMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedCLMatchSet* PB_IsolatedCLMatchSet::default_instance_ = NULL;

PB_IsolatedCLMatchSet* PB_IsolatedCLMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedCLMatchSet* n = new PB_IsolatedCLMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedCLMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedCLMatchSet)
  matches_.Clear();
}

bool PB_IsolatedCLMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedCLMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsolatedCLMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedCLMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedCLMatchSet)
  return false;
#undef DO_
}

void PB_IsolatedCLMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedCLMatchSet)
  // repeated .PB_IsolatedCLMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedCLMatchSet)
}

::google::protobuf::uint8* PB_IsolatedCLMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedCLMatchSet)
  // repeated .PB_IsolatedCLMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedCLMatchSet)
  return target;
}

int PB_IsolatedCLMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedCLMatchSet)
  int total_size = 0;

  // repeated .PB_IsolatedCLMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedCLMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedCLMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedCLMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedCLMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedCLMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedCLMatchSet)
    MergeFrom(*source);
  }
}

void PB_IsolatedCLMatchSet::MergeFrom(const PB_IsolatedCLMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedCLMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_IsolatedCLMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedCLMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedCLMatchSet::CopyFrom(const PB_IsolatedCLMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedCLMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedCLMatchSet::IsInitialized() const {

  return true;
}

void PB_IsolatedCLMatchSet::Swap(PB_IsolatedCLMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedCLMatchSet::InternalSwap(PB_IsolatedCLMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedCLMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedCLMatchSet_descriptor_;
  metadata.reflection = PB_IsolatedCLMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedCLMatchSet

// repeated .PB_IsolatedCLMatch matches = 1;
int PB_IsolatedCLMatchSet::matches_size() const {
  return matches_.size();
}
void PB_IsolatedCLMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_IsolatedCLMatch& PB_IsolatedCLMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsolatedCLMatchSet.matches)
  return matches_.Get(index);
}
::PB_IsolatedCLMatch* PB_IsolatedCLMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsolatedCLMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_IsolatedCLMatch* PB_IsolatedCLMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_IsolatedCLMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsolatedCLMatch >*
PB_IsolatedCLMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsolatedCLMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsolatedCLMatch >&
PB_IsolatedCLMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_IsolatedCLMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedCLFrame_0::k0FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedCLFrame_0::PB_IsolatedCLFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedCLFrame_0)
}

void PB_IsolatedCLFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedCLFrame_0::PB_IsolatedCLFrame_0(const PB_IsolatedCLFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedCLFrame_0)
}

void PB_IsolatedCLFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
}

PB_IsolatedCLFrame_0::~PB_IsolatedCLFrame_0() {
  // @@protoc_insertion_point(destructor:PB_IsolatedCLFrame_0)
  SharedDtor();
}

void PB_IsolatedCLFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedCLFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedCLFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedCLFrame_0_descriptor_;
}

const PB_IsolatedCLFrame_0& PB_IsolatedCLFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedCLFrame_0* PB_IsolatedCLFrame_0::default_instance_ = NULL;

PB_IsolatedCLFrame_0* PB_IsolatedCLFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedCLFrame_0* n = new PB_IsolatedCLFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedCLFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedCLFrame_0)
  _0_ = 0;
}

bool PB_IsolatedCLFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedCLFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedCLFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedCLFrame_0)
  return false;
#undef DO_
}

void PB_IsolatedCLFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedCLFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedCLFrame_0)
}

::google::protobuf::uint8* PB_IsolatedCLFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedCLFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedCLFrame_0)
  return target;
}

int PB_IsolatedCLFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedCLFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedCLFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedCLFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedCLFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedCLFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedCLFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedCLFrame_0)
    MergeFrom(*source);
  }
}

void PB_IsolatedCLFrame_0::MergeFrom(const PB_IsolatedCLFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedCLFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
}

void PB_IsolatedCLFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedCLFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedCLFrame_0::CopyFrom(const PB_IsolatedCLFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedCLFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedCLFrame_0::IsInitialized() const {

  return true;
}

void PB_IsolatedCLFrame_0::Swap(PB_IsolatedCLFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedCLFrame_0::InternalSwap(PB_IsolatedCLFrame_0* other) {
  std::swap(_0_, other->_0_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedCLFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedCLFrame_0_descriptor_;
  metadata.reflection = PB_IsolatedCLFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedCLFrame_0

// optional int32 _0 = 1;
void PB_IsolatedCLFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_IsolatedCLFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_IsolatedCLFrame_0._0)
  return _0_;
}
 void PB_IsolatedCLFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_IsolatedCLFrame_0._0)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_IsolatedCLFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_IsolatedCLFrame_0Vector::PB_IsolatedCLFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_IsolatedCLFrame_0Vector)
}

void PB_IsolatedCLFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_IsolatedCLFrame_0Vector::PB_IsolatedCLFrame_0Vector(const PB_IsolatedCLFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_IsolatedCLFrame_0Vector)
}

void PB_IsolatedCLFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_IsolatedCLFrame_0Vector::~PB_IsolatedCLFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_IsolatedCLFrame_0Vector)
  SharedDtor();
}

void PB_IsolatedCLFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_IsolatedCLFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_IsolatedCLFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_IsolatedCLFrame_0Vector_descriptor_;
}

const PB_IsolatedCLFrame_0Vector& PB_IsolatedCLFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_IsolatedCLFrame_0Vector* PB_IsolatedCLFrame_0Vector::default_instance_ = NULL;

PB_IsolatedCLFrame_0Vector* PB_IsolatedCLFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_IsolatedCLFrame_0Vector* n = new PB_IsolatedCLFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_IsolatedCLFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_IsolatedCLFrame_0Vector)
  frames_.Clear();
}

bool PB_IsolatedCLFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_IsolatedCLFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_IsolatedCLFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_IsolatedCLFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_IsolatedCLFrame_0Vector)
  return false;
#undef DO_
}

void PB_IsolatedCLFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_IsolatedCLFrame_0Vector)
  // repeated .PB_IsolatedCLFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_IsolatedCLFrame_0Vector)
}

::google::protobuf::uint8* PB_IsolatedCLFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_IsolatedCLFrame_0Vector)
  // repeated .PB_IsolatedCLFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_IsolatedCLFrame_0Vector)
  return target;
}

int PB_IsolatedCLFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_IsolatedCLFrame_0Vector)
  int total_size = 0;

  // repeated .PB_IsolatedCLFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_IsolatedCLFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_IsolatedCLFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_IsolatedCLFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_IsolatedCLFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_IsolatedCLFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_IsolatedCLFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_IsolatedCLFrame_0Vector::MergeFrom(const PB_IsolatedCLFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_IsolatedCLFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_IsolatedCLFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_IsolatedCLFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_IsolatedCLFrame_0Vector::CopyFrom(const PB_IsolatedCLFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_IsolatedCLFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_IsolatedCLFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_IsolatedCLFrame_0Vector::Swap(PB_IsolatedCLFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_IsolatedCLFrame_0Vector::InternalSwap(PB_IsolatedCLFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_IsolatedCLFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_IsolatedCLFrame_0Vector_descriptor_;
  metadata.reflection = PB_IsolatedCLFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_IsolatedCLFrame_0Vector

// repeated .PB_IsolatedCLFrame_0 frames = 1;
int PB_IsolatedCLFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_IsolatedCLFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_IsolatedCLFrame_0& PB_IsolatedCLFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_IsolatedCLFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_IsolatedCLFrame_0* PB_IsolatedCLFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_IsolatedCLFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_IsolatedCLFrame_0* PB_IsolatedCLFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_IsolatedCLFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_IsolatedCLFrame_0 >*
PB_IsolatedCLFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_IsolatedCLFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_IsolatedCLFrame_0 >&
PB_IsolatedCLFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_IsolatedCLFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NotInRingFrame_0::k0FieldNumber;
const int PB_NotInRingFrame_0::k1FieldNumber;
const int PB_NotInRingFrame_0::k3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NotInRingFrame_0::PB_NotInRingFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NotInRingFrame_0)
}

void PB_NotInRingFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NotInRingFrame_0::PB_NotInRingFrame_0(const PB_NotInRingFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NotInRingFrame_0)
}

void PB_NotInRingFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _3_ = 0;
}

PB_NotInRingFrame_0::~PB_NotInRingFrame_0() {
  // @@protoc_insertion_point(destructor:PB_NotInRingFrame_0)
  SharedDtor();
}

void PB_NotInRingFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NotInRingFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NotInRingFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NotInRingFrame_0_descriptor_;
}

const PB_NotInRingFrame_0& PB_NotInRingFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NotInRingFrame_0* PB_NotInRingFrame_0::default_instance_ = NULL;

PB_NotInRingFrame_0* PB_NotInRingFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_NotInRingFrame_0* n = new PB_NotInRingFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NotInRingFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NotInRingFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_NotInRingFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_NotInRingFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _3_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_NotInRingFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NotInRingFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__3;
        break;
      }

      // optional int32 _3 = 3;
      case 3: {
        if (tag == 24) {
         parse__3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NotInRingFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NotInRingFrame_0)
  return false;
#undef DO_
}

void PB_NotInRingFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NotInRingFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _3 = 3;
  if (this->_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_3(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NotInRingFrame_0)
}

::google::protobuf::uint8* PB_NotInRingFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NotInRingFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _3 = 3;
  if (this->_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_3(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NotInRingFrame_0)
  return target;
}

int PB_NotInRingFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NotInRingFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _3 = 3;
  if (this->_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_3());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NotInRingFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NotInRingFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NotInRingFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NotInRingFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NotInRingFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NotInRingFrame_0)
    MergeFrom(*source);
  }
}

void PB_NotInRingFrame_0::MergeFrom(const PB_NotInRingFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NotInRingFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._3() != 0) {
    set__3(from._3());
  }
}

void PB_NotInRingFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NotInRingFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NotInRingFrame_0::CopyFrom(const PB_NotInRingFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NotInRingFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NotInRingFrame_0::IsInitialized() const {

  return true;
}

void PB_NotInRingFrame_0::Swap(PB_NotInRingFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NotInRingFrame_0::InternalSwap(PB_NotInRingFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_3_, other->_3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NotInRingFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NotInRingFrame_0_descriptor_;
  metadata.reflection = PB_NotInRingFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NotInRingFrame_0

// optional int32 _0 = 1;
void PB_NotInRingFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_NotInRingFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_NotInRingFrame_0._0)
  return _0_;
}
 void PB_NotInRingFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_NotInRingFrame_0._0)
}

// optional int32 _1 = 2;
void PB_NotInRingFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_NotInRingFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_NotInRingFrame_0._1)
  return _1_;
}
 void PB_NotInRingFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_NotInRingFrame_0._1)
}

// optional int32 _3 = 3;
void PB_NotInRingFrame_0::clear__3() {
  _3_ = 0;
}
 ::google::protobuf::int32 PB_NotInRingFrame_0::_3() const {
  // @@protoc_insertion_point(field_get:PB_NotInRingFrame_0._3)
  return _3_;
}
 void PB_NotInRingFrame_0::set__3(::google::protobuf::int32 value) {
  
  _3_ = value;
  // @@protoc_insertion_point(field_set:PB_NotInRingFrame_0._3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_NotInRingFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_NotInRingFrame_0Vector::PB_NotInRingFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_NotInRingFrame_0Vector)
}

void PB_NotInRingFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_NotInRingFrame_0Vector::PB_NotInRingFrame_0Vector(const PB_NotInRingFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_NotInRingFrame_0Vector)
}

void PB_NotInRingFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_NotInRingFrame_0Vector::~PB_NotInRingFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_NotInRingFrame_0Vector)
  SharedDtor();
}

void PB_NotInRingFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_NotInRingFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_NotInRingFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_NotInRingFrame_0Vector_descriptor_;
}

const PB_NotInRingFrame_0Vector& PB_NotInRingFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_NotInRingFrame_0Vector* PB_NotInRingFrame_0Vector::default_instance_ = NULL;

PB_NotInRingFrame_0Vector* PB_NotInRingFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_NotInRingFrame_0Vector* n = new PB_NotInRingFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_NotInRingFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_NotInRingFrame_0Vector)
  frames_.Clear();
}

bool PB_NotInRingFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_NotInRingFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_NotInRingFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_NotInRingFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_NotInRingFrame_0Vector)
  return false;
#undef DO_
}

void PB_NotInRingFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_NotInRingFrame_0Vector)
  // repeated .PB_NotInRingFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_NotInRingFrame_0Vector)
}

::google::protobuf::uint8* PB_NotInRingFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_NotInRingFrame_0Vector)
  // repeated .PB_NotInRingFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_NotInRingFrame_0Vector)
  return target;
}

int PB_NotInRingFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_NotInRingFrame_0Vector)
  int total_size = 0;

  // repeated .PB_NotInRingFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_NotInRingFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_NotInRingFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_NotInRingFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_NotInRingFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_NotInRingFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_NotInRingFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_NotInRingFrame_0Vector::MergeFrom(const PB_NotInRingFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_NotInRingFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_NotInRingFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_NotInRingFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_NotInRingFrame_0Vector::CopyFrom(const PB_NotInRingFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_NotInRingFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_NotInRingFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_NotInRingFrame_0Vector::Swap(PB_NotInRingFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_NotInRingFrame_0Vector::InternalSwap(PB_NotInRingFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_NotInRingFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_NotInRingFrame_0Vector_descriptor_;
  metadata.reflection = PB_NotInRingFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_NotInRingFrame_0Vector

// repeated .PB_NotInRingFrame_0 frames = 1;
int PB_NotInRingFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_NotInRingFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_NotInRingFrame_0& PB_NotInRingFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_NotInRingFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_NotInRingFrame_0* PB_NotInRingFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_NotInRingFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_NotInRingFrame_0* PB_NotInRingFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_NotInRingFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_NotInRingFrame_0 >*
PB_NotInRingFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_NotInRingFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_NotInRingFrame_0 >&
PB_NotInRingFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_NotInRingFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_RingMembersMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_RingMembersMatch::PB_RingMembersMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RingMembersMatch)
}

void PB_RingMembersMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_RingMembersMatch::PB_RingMembersMatch(const PB_RingMembersMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RingMembersMatch)
}

void PB_RingMembersMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_RingMembersMatch::~PB_RingMembersMatch() {
  // @@protoc_insertion_point(destructor:PB_RingMembersMatch)
  SharedDtor();
}

void PB_RingMembersMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RingMembersMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RingMembersMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RingMembersMatch_descriptor_;
}

const PB_RingMembersMatch& PB_RingMembersMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_RingMembersMatch* PB_RingMembersMatch::default_instance_ = NULL;

PB_RingMembersMatch* PB_RingMembersMatch::New(::google::protobuf::Arena* arena) const {
  PB_RingMembersMatch* n = new PB_RingMembersMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_RingMembersMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_RingMembersMatch)
  c1_ = 0;
}

bool PB_RingMembersMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RingMembersMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RingMembersMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RingMembersMatch)
  return false;
#undef DO_
}

void PB_RingMembersMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RingMembersMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_RingMembersMatch)
}

::google::protobuf::uint8* PB_RingMembersMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RingMembersMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_RingMembersMatch)
  return target;
}

int PB_RingMembersMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_RingMembersMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RingMembersMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_RingMembersMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_RingMembersMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_RingMembersMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_RingMembersMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_RingMembersMatch)
    MergeFrom(*source);
  }
}

void PB_RingMembersMatch::MergeFrom(const PB_RingMembersMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_RingMembersMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_RingMembersMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_RingMembersMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RingMembersMatch::CopyFrom(const PB_RingMembersMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_RingMembersMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RingMembersMatch::IsInitialized() const {

  return true;
}

void PB_RingMembersMatch::Swap(PB_RingMembersMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_RingMembersMatch::InternalSwap(PB_RingMembersMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_RingMembersMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RingMembersMatch_descriptor_;
  metadata.reflection = PB_RingMembersMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_RingMembersMatch

// optional int32 C1 = 1;
void PB_RingMembersMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_RingMembersMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_RingMembersMatch.C1)
  return c1_;
}
 void PB_RingMembersMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_RingMembersMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_RingMembersMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_RingMembersMatchSet::PB_RingMembersMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RingMembersMatchSet)
}

void PB_RingMembersMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_RingMembersMatchSet::PB_RingMembersMatchSet(const PB_RingMembersMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RingMembersMatchSet)
}

void PB_RingMembersMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_RingMembersMatchSet::~PB_RingMembersMatchSet() {
  // @@protoc_insertion_point(destructor:PB_RingMembersMatchSet)
  SharedDtor();
}

void PB_RingMembersMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RingMembersMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RingMembersMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RingMembersMatchSet_descriptor_;
}

const PB_RingMembersMatchSet& PB_RingMembersMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_RingMembersMatchSet* PB_RingMembersMatchSet::default_instance_ = NULL;

PB_RingMembersMatchSet* PB_RingMembersMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_RingMembersMatchSet* n = new PB_RingMembersMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_RingMembersMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_RingMembersMatchSet)
  matches_.Clear();
}

bool PB_RingMembersMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RingMembersMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_RingMembersMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RingMembersMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RingMembersMatchSet)
  return false;
#undef DO_
}

void PB_RingMembersMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RingMembersMatchSet)
  // repeated .PB_RingMembersMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_RingMembersMatchSet)
}

::google::protobuf::uint8* PB_RingMembersMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RingMembersMatchSet)
  // repeated .PB_RingMembersMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_RingMembersMatchSet)
  return target;
}

int PB_RingMembersMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_RingMembersMatchSet)
  int total_size = 0;

  // repeated .PB_RingMembersMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RingMembersMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_RingMembersMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_RingMembersMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_RingMembersMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_RingMembersMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_RingMembersMatchSet)
    MergeFrom(*source);
  }
}

void PB_RingMembersMatchSet::MergeFrom(const PB_RingMembersMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_RingMembersMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_RingMembersMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_RingMembersMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RingMembersMatchSet::CopyFrom(const PB_RingMembersMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_RingMembersMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RingMembersMatchSet::IsInitialized() const {

  return true;
}

void PB_RingMembersMatchSet::Swap(PB_RingMembersMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_RingMembersMatchSet::InternalSwap(PB_RingMembersMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_RingMembersMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RingMembersMatchSet_descriptor_;
  metadata.reflection = PB_RingMembersMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_RingMembersMatchSet

// repeated .PB_RingMembersMatch matches = 1;
int PB_RingMembersMatchSet::matches_size() const {
  return matches_.size();
}
void PB_RingMembersMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_RingMembersMatch& PB_RingMembersMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_RingMembersMatchSet.matches)
  return matches_.Get(index);
}
::PB_RingMembersMatch* PB_RingMembersMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RingMembersMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_RingMembersMatch* PB_RingMembersMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_RingMembersMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_RingMembersMatch >*
PB_RingMembersMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_RingMembersMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_RingMembersMatch >&
PB_RingMembersMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_RingMembersMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CountLinksFrame_0::k0FieldNumber;
const int PB_CountLinksFrame_0::k1FieldNumber;
const int PB_CountLinksFrame_0::k2FieldNumber;
const int PB_CountLinksFrame_0::k4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CountLinksFrame_0::PB_CountLinksFrame_0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CountLinksFrame_0)
}

void PB_CountLinksFrame_0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CountLinksFrame_0::PB_CountLinksFrame_0(const PB_CountLinksFrame_0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CountLinksFrame_0)
}

void PB_CountLinksFrame_0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  _0_ = 0;
  _1_ = 0;
  _2_ = 0;
  _4_ = 0;
}

PB_CountLinksFrame_0::~PB_CountLinksFrame_0() {
  // @@protoc_insertion_point(destructor:PB_CountLinksFrame_0)
  SharedDtor();
}

void PB_CountLinksFrame_0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_CountLinksFrame_0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CountLinksFrame_0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CountLinksFrame_0_descriptor_;
}

const PB_CountLinksFrame_0& PB_CountLinksFrame_0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_CountLinksFrame_0* PB_CountLinksFrame_0::default_instance_ = NULL;

PB_CountLinksFrame_0* PB_CountLinksFrame_0::New(::google::protobuf::Arena* arena) const {
  PB_CountLinksFrame_0* n = new PB_CountLinksFrame_0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CountLinksFrame_0::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CountLinksFrame_0)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PB_CountLinksFrame_0, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PB_CountLinksFrame_0*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_0_, _4_);

#undef ZR_HELPER_
#undef ZR_

}

bool PB_CountLinksFrame_0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CountLinksFrame_0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _0 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__1;
        break;
      }

      // optional int32 _1 = 2;
      case 2: {
        if (tag == 16) {
         parse__1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__2;
        break;
      }

      // optional int32 _2 = 3;
      case 3: {
        if (tag == 24) {
         parse__2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__4;
        break;
      }

      // optional int32 _4 = 4;
      case 4: {
        if (tag == 32) {
         parse__4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CountLinksFrame_0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CountLinksFrame_0)
  return false;
#undef DO_
}

void PB_CountLinksFrame_0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CountLinksFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_0(), output);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_1(), output);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_2(), output);
  }

  // optional int32 _4 = 4;
  if (this->_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->_4(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CountLinksFrame_0)
}

::google::protobuf::uint8* PB_CountLinksFrame_0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CountLinksFrame_0)
  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_0(), target);
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_1(), target);
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_2(), target);
  }

  // optional int32 _4 = 4;
  if (this->_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->_4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CountLinksFrame_0)
  return target;
}

int PB_CountLinksFrame_0::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CountLinksFrame_0)
  int total_size = 0;

  // optional int32 _0 = 1;
  if (this->_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_0());
  }

  // optional int32 _1 = 2;
  if (this->_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_1());
  }

  // optional int32 _2 = 3;
  if (this->_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_2());
  }

  // optional int32 _4 = 4;
  if (this->_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_4());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CountLinksFrame_0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CountLinksFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CountLinksFrame_0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CountLinksFrame_0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CountLinksFrame_0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CountLinksFrame_0)
    MergeFrom(*source);
  }
}

void PB_CountLinksFrame_0::MergeFrom(const PB_CountLinksFrame_0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CountLinksFrame_0)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._0() != 0) {
    set__0(from._0());
  }
  if (from._1() != 0) {
    set__1(from._1());
  }
  if (from._2() != 0) {
    set__2(from._2());
  }
  if (from._4() != 0) {
    set__4(from._4());
  }
}

void PB_CountLinksFrame_0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CountLinksFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CountLinksFrame_0::CopyFrom(const PB_CountLinksFrame_0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CountLinksFrame_0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CountLinksFrame_0::IsInitialized() const {

  return true;
}

void PB_CountLinksFrame_0::Swap(PB_CountLinksFrame_0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CountLinksFrame_0::InternalSwap(PB_CountLinksFrame_0* other) {
  std::swap(_0_, other->_0_);
  std::swap(_1_, other->_1_);
  std::swap(_2_, other->_2_);
  std::swap(_4_, other->_4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CountLinksFrame_0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CountLinksFrame_0_descriptor_;
  metadata.reflection = PB_CountLinksFrame_0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CountLinksFrame_0

// optional int32 _0 = 1;
void PB_CountLinksFrame_0::clear__0() {
  _0_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksFrame_0::_0() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksFrame_0._0)
  return _0_;
}
 void PB_CountLinksFrame_0::set__0(::google::protobuf::int32 value) {
  
  _0_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksFrame_0._0)
}

// optional int32 _1 = 2;
void PB_CountLinksFrame_0::clear__1() {
  _1_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksFrame_0::_1() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksFrame_0._1)
  return _1_;
}
 void PB_CountLinksFrame_0::set__1(::google::protobuf::int32 value) {
  
  _1_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksFrame_0._1)
}

// optional int32 _2 = 3;
void PB_CountLinksFrame_0::clear__2() {
  _2_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksFrame_0::_2() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksFrame_0._2)
  return _2_;
}
 void PB_CountLinksFrame_0::set__2(::google::protobuf::int32 value) {
  
  _2_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksFrame_0._2)
}

// optional int32 _4 = 4;
void PB_CountLinksFrame_0::clear__4() {
  _4_ = 0;
}
 ::google::protobuf::int32 PB_CountLinksFrame_0::_4() const {
  // @@protoc_insertion_point(field_get:PB_CountLinksFrame_0._4)
  return _4_;
}
 void PB_CountLinksFrame_0::set__4(::google::protobuf::int32 value) {
  
  _4_ = value;
  // @@protoc_insertion_point(field_set:PB_CountLinksFrame_0._4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_CountLinksFrame_0Vector::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_CountLinksFrame_0Vector::PB_CountLinksFrame_0Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_CountLinksFrame_0Vector)
}

void PB_CountLinksFrame_0Vector::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_CountLinksFrame_0Vector::PB_CountLinksFrame_0Vector(const PB_CountLinksFrame_0Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_CountLinksFrame_0Vector)
}

void PB_CountLinksFrame_0Vector::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_CountLinksFrame_0Vector::~PB_CountLinksFrame_0Vector() {
  // @@protoc_insertion_point(destructor:PB_CountLinksFrame_0Vector)
  SharedDtor();
}

void PB_CountLinksFrame_0Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_CountLinksFrame_0Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_CountLinksFrame_0Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_CountLinksFrame_0Vector_descriptor_;
}

const PB_CountLinksFrame_0Vector& PB_CountLinksFrame_0Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_CountLinksFrame_0Vector* PB_CountLinksFrame_0Vector::default_instance_ = NULL;

PB_CountLinksFrame_0Vector* PB_CountLinksFrame_0Vector::New(::google::protobuf::Arena* arena) const {
  PB_CountLinksFrame_0Vector* n = new PB_CountLinksFrame_0Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_CountLinksFrame_0Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_CountLinksFrame_0Vector)
  frames_.Clear();
}

bool PB_CountLinksFrame_0Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_CountLinksFrame_0Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_CountLinksFrame_0 frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_CountLinksFrame_0Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_CountLinksFrame_0Vector)
  return false;
#undef DO_
}

void PB_CountLinksFrame_0Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_CountLinksFrame_0Vector)
  // repeated .PB_CountLinksFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_CountLinksFrame_0Vector)
}

::google::protobuf::uint8* PB_CountLinksFrame_0Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_CountLinksFrame_0Vector)
  // repeated .PB_CountLinksFrame_0 frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_CountLinksFrame_0Vector)
  return target;
}

int PB_CountLinksFrame_0Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_CountLinksFrame_0Vector)
  int total_size = 0;

  // repeated .PB_CountLinksFrame_0 frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_CountLinksFrame_0Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_CountLinksFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_CountLinksFrame_0Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_CountLinksFrame_0Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_CountLinksFrame_0Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_CountLinksFrame_0Vector)
    MergeFrom(*source);
  }
}

void PB_CountLinksFrame_0Vector::MergeFrom(const PB_CountLinksFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_CountLinksFrame_0Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
}

void PB_CountLinksFrame_0Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_CountLinksFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_CountLinksFrame_0Vector::CopyFrom(const PB_CountLinksFrame_0Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_CountLinksFrame_0Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CountLinksFrame_0Vector::IsInitialized() const {

  return true;
}

void PB_CountLinksFrame_0Vector::Swap(PB_CountLinksFrame_0Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_CountLinksFrame_0Vector::InternalSwap(PB_CountLinksFrame_0Vector* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_CountLinksFrame_0Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_CountLinksFrame_0Vector_descriptor_;
  metadata.reflection = PB_CountLinksFrame_0Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_CountLinksFrame_0Vector

// repeated .PB_CountLinksFrame_0 frames = 1;
int PB_CountLinksFrame_0Vector::frames_size() const {
  return frames_.size();
}
void PB_CountLinksFrame_0Vector::clear_frames() {
  frames_.Clear();
}
const ::PB_CountLinksFrame_0& PB_CountLinksFrame_0Vector::frames(int index) const {
  // @@protoc_insertion_point(field_get:PB_CountLinksFrame_0Vector.frames)
  return frames_.Get(index);
}
::PB_CountLinksFrame_0* PB_CountLinksFrame_0Vector::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:PB_CountLinksFrame_0Vector.frames)
  return frames_.Mutable(index);
}
::PB_CountLinksFrame_0* PB_CountLinksFrame_0Vector::add_frames() {
  // @@protoc_insertion_point(field_add:PB_CountLinksFrame_0Vector.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_CountLinksFrame_0 >*
PB_CountLinksFrame_0Vector::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:PB_CountLinksFrame_0Vector.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_CountLinksFrame_0 >&
PB_CountLinksFrame_0Vector::frames() const {
  // @@protoc_insertion_point(field_list:PB_CountLinksFrame_0Vector.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_GreaterThanOneSNConnectionMatch::kC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_GreaterThanOneSNConnectionMatch::PB_GreaterThanOneSNConnectionMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_GreaterThanOneSNConnectionMatch)
}

void PB_GreaterThanOneSNConnectionMatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_GreaterThanOneSNConnectionMatch::PB_GreaterThanOneSNConnectionMatch(const PB_GreaterThanOneSNConnectionMatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_GreaterThanOneSNConnectionMatch)
}

void PB_GreaterThanOneSNConnectionMatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  c1_ = 0;
}

PB_GreaterThanOneSNConnectionMatch::~PB_GreaterThanOneSNConnectionMatch() {
  // @@protoc_insertion_point(destructor:PB_GreaterThanOneSNConnectionMatch)
  SharedDtor();
}

void PB_GreaterThanOneSNConnectionMatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_GreaterThanOneSNConnectionMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionMatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_GreaterThanOneSNConnectionMatch_descriptor_;
}

const PB_GreaterThanOneSNConnectionMatch& PB_GreaterThanOneSNConnectionMatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_GreaterThanOneSNConnectionMatch* PB_GreaterThanOneSNConnectionMatch::default_instance_ = NULL;

PB_GreaterThanOneSNConnectionMatch* PB_GreaterThanOneSNConnectionMatch::New(::google::protobuf::Arena* arena) const {
  PB_GreaterThanOneSNConnectionMatch* n = new PB_GreaterThanOneSNConnectionMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_GreaterThanOneSNConnectionMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_GreaterThanOneSNConnectionMatch)
  c1_ = 0;
}

bool PB_GreaterThanOneSNConnectionMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_GreaterThanOneSNConnectionMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 C1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_GreaterThanOneSNConnectionMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_GreaterThanOneSNConnectionMatch)
  return false;
#undef DO_
}

void PB_GreaterThanOneSNConnectionMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_GreaterThanOneSNConnectionMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c1(), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_GreaterThanOneSNConnectionMatch)
}

::google::protobuf::uint8* PB_GreaterThanOneSNConnectionMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_GreaterThanOneSNConnectionMatch)
  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_GreaterThanOneSNConnectionMatch)
  return target;
}

int PB_GreaterThanOneSNConnectionMatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_GreaterThanOneSNConnectionMatch)
  int total_size = 0;

  // optional int32 C1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_GreaterThanOneSNConnectionMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_GreaterThanOneSNConnectionMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_GreaterThanOneSNConnectionMatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_GreaterThanOneSNConnectionMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_GreaterThanOneSNConnectionMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_GreaterThanOneSNConnectionMatch)
    MergeFrom(*source);
  }
}

void PB_GreaterThanOneSNConnectionMatch::MergeFrom(const PB_GreaterThanOneSNConnectionMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_GreaterThanOneSNConnectionMatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
}

void PB_GreaterThanOneSNConnectionMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_GreaterThanOneSNConnectionMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_GreaterThanOneSNConnectionMatch::CopyFrom(const PB_GreaterThanOneSNConnectionMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_GreaterThanOneSNConnectionMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_GreaterThanOneSNConnectionMatch::IsInitialized() const {

  return true;
}

void PB_GreaterThanOneSNConnectionMatch::Swap(PB_GreaterThanOneSNConnectionMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_GreaterThanOneSNConnectionMatch::InternalSwap(PB_GreaterThanOneSNConnectionMatch* other) {
  std::swap(c1_, other->c1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_GreaterThanOneSNConnectionMatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_GreaterThanOneSNConnectionMatch_descriptor_;
  metadata.reflection = PB_GreaterThanOneSNConnectionMatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_GreaterThanOneSNConnectionMatch

// optional int32 C1 = 1;
void PB_GreaterThanOneSNConnectionMatch::clear_c1() {
  c1_ = 0;
}
 ::google::protobuf::int32 PB_GreaterThanOneSNConnectionMatch::c1() const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionMatch.C1)
  return c1_;
}
 void PB_GreaterThanOneSNConnectionMatch::set_c1(::google::protobuf::int32 value) {
  
  c1_ = value;
  // @@protoc_insertion_point(field_set:PB_GreaterThanOneSNConnectionMatch.C1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_GreaterThanOneSNConnectionMatchSet::kMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_GreaterThanOneSNConnectionMatchSet::PB_GreaterThanOneSNConnectionMatchSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_GreaterThanOneSNConnectionMatchSet)
}

void PB_GreaterThanOneSNConnectionMatchSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PB_GreaterThanOneSNConnectionMatchSet::PB_GreaterThanOneSNConnectionMatchSet(const PB_GreaterThanOneSNConnectionMatchSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_GreaterThanOneSNConnectionMatchSet)
}

void PB_GreaterThanOneSNConnectionMatchSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PB_GreaterThanOneSNConnectionMatchSet::~PB_GreaterThanOneSNConnectionMatchSet() {
  // @@protoc_insertion_point(destructor:PB_GreaterThanOneSNConnectionMatchSet)
  SharedDtor();
}

void PB_GreaterThanOneSNConnectionMatchSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_GreaterThanOneSNConnectionMatchSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_GreaterThanOneSNConnectionMatchSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_GreaterThanOneSNConnectionMatchSet_descriptor_;
}

const PB_GreaterThanOneSNConnectionMatchSet& PB_GreaterThanOneSNConnectionMatchSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PB_5fsncl_5fruntime_2eproto();
  return *default_instance_;
}

PB_GreaterThanOneSNConnectionMatchSet* PB_GreaterThanOneSNConnectionMatchSet::default_instance_ = NULL;

PB_GreaterThanOneSNConnectionMatchSet* PB_GreaterThanOneSNConnectionMatchSet::New(::google::protobuf::Arena* arena) const {
  PB_GreaterThanOneSNConnectionMatchSet* n = new PB_GreaterThanOneSNConnectionMatchSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PB_GreaterThanOneSNConnectionMatchSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_GreaterThanOneSNConnectionMatchSet)
  matches_.Clear();
}

bool PB_GreaterThanOneSNConnectionMatchSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_GreaterThanOneSNConnectionMatchSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_GreaterThanOneSNConnectionMatch matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_GreaterThanOneSNConnectionMatchSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_GreaterThanOneSNConnectionMatchSet)
  return false;
#undef DO_
}

void PB_GreaterThanOneSNConnectionMatchSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_GreaterThanOneSNConnectionMatchSet)
  // repeated .PB_GreaterThanOneSNConnectionMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matches(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PB_GreaterThanOneSNConnectionMatchSet)
}

::google::protobuf::uint8* PB_GreaterThanOneSNConnectionMatchSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_GreaterThanOneSNConnectionMatchSet)
  // repeated .PB_GreaterThanOneSNConnectionMatch matches = 1;
  for (unsigned int i = 0, n = this->matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->matches(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PB_GreaterThanOneSNConnectionMatchSet)
  return target;
}

int PB_GreaterThanOneSNConnectionMatchSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PB_GreaterThanOneSNConnectionMatchSet)
  int total_size = 0;

  // repeated .PB_GreaterThanOneSNConnectionMatch matches = 1;
  total_size += 1 * this->matches_size();
  for (int i = 0; i < this->matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matches(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_GreaterThanOneSNConnectionMatchSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_GreaterThanOneSNConnectionMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PB_GreaterThanOneSNConnectionMatchSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PB_GreaterThanOneSNConnectionMatchSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_GreaterThanOneSNConnectionMatchSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_GreaterThanOneSNConnectionMatchSet)
    MergeFrom(*source);
  }
}

void PB_GreaterThanOneSNConnectionMatchSet::MergeFrom(const PB_GreaterThanOneSNConnectionMatchSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_GreaterThanOneSNConnectionMatchSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  matches_.MergeFrom(from.matches_);
}

void PB_GreaterThanOneSNConnectionMatchSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_GreaterThanOneSNConnectionMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_GreaterThanOneSNConnectionMatchSet::CopyFrom(const PB_GreaterThanOneSNConnectionMatchSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_GreaterThanOneSNConnectionMatchSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_GreaterThanOneSNConnectionMatchSet::IsInitialized() const {

  return true;
}

void PB_GreaterThanOneSNConnectionMatchSet::Swap(PB_GreaterThanOneSNConnectionMatchSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_GreaterThanOneSNConnectionMatchSet::InternalSwap(PB_GreaterThanOneSNConnectionMatchSet* other) {
  matches_.UnsafeArenaSwap(&other->matches_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PB_GreaterThanOneSNConnectionMatchSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_GreaterThanOneSNConnectionMatchSet_descriptor_;
  metadata.reflection = PB_GreaterThanOneSNConnectionMatchSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PB_GreaterThanOneSNConnectionMatchSet

// repeated .PB_GreaterThanOneSNConnectionMatch matches = 1;
int PB_GreaterThanOneSNConnectionMatchSet::matches_size() const {
  return matches_.size();
}
void PB_GreaterThanOneSNConnectionMatchSet::clear_matches() {
  matches_.Clear();
}
const ::PB_GreaterThanOneSNConnectionMatch& PB_GreaterThanOneSNConnectionMatchSet::matches(int index) const {
  // @@protoc_insertion_point(field_get:PB_GreaterThanOneSNConnectionMatchSet.matches)
  return matches_.Get(index);
}
::PB_GreaterThanOneSNConnectionMatch* PB_GreaterThanOneSNConnectionMatchSet::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:PB_GreaterThanOneSNConnectionMatchSet.matches)
  return matches_.Mutable(index);
}
::PB_GreaterThanOneSNConnectionMatch* PB_GreaterThanOneSNConnectionMatchSet::add_matches() {
  // @@protoc_insertion_point(field_add:PB_GreaterThanOneSNConnectionMatchSet.matches)
  return matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::PB_GreaterThanOneSNConnectionMatch >*
PB_GreaterThanOneSNConnectionMatchSet::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:PB_GreaterThanOneSNConnectionMatchSet.matches)
  return &matches_;
}
const ::google::protobuf::RepeatedPtrField< ::PB_GreaterThanOneSNConnectionMatch >&
PB_GreaterThanOneSNConnectionMatchSet::matches() const {
  // @@protoc_insertion_point(field_list:PB_GreaterThanOneSNConnectionMatchSet.matches)
  return matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
