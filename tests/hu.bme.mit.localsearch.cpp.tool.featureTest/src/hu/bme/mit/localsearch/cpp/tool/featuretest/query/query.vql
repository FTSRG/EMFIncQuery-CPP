package hu.bme.mit.localsearch.cpp.tool.featuretest.query

import "http://robot.ecore/model/uri"

@Bind(parameters={robot})
pattern robotName(robot, name){
	Robot(robot);
	Robot.name(robot,name);
}

@Bind(parameters={robot})
@Bind(parameters={robotpart})
@Bind(parameters={robot, robotpart})
pattern partsOfRobot(robot, robotpart){
	Robot.parts(robot,robotpart);
}

pattern partBindedNowhere(part){
	Robot(_rob);
	RobotPart(part)
	neg find partsOfRobot(_rob,part);
}

@Bind(parameters={robot})
@Bind(parameters={robot, robotpart})
@Bind(parameters={robotpart})
@Bind(parameters={obstacle})
pattern isDangerous(robot, robotpart, obstacle){
	find partsOfRobot(robot,robotpart);
	Obstacle(obstacle);
	RobotPart.close(robotpart,obstacle);
}

//pattern robotPartCount(rob, N) {
//    Robot(rob);
//    Robot.degree(rob, N);
//    N == count find partsOfRobot(rob, _);
//}
