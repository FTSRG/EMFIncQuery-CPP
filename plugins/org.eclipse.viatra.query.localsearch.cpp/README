POperationCompiler.xtend

PVariable
Egy lekötött vagy lekötni kívánt változót reprezentál. Általában kulcsként használjuk Map-ben. Pl.: variableMapping, typeMapping

PParameter
A descriptor for declared PQuery parameters. A parameter has a name and a declared type.

variableMapping
Minden PVariable-höz hozzárendel egy számértéket 0-tól (n-1)-ig, ahol n a frame-ben szereplő változók számával

BasePConstraint.affectedVariables
Set<PVariables>
union(actualParametersTuple.<PVariable> getDistinctElements(), additionalAffectedVariables)
additionalAffectedVariables := Collections.<PVariable> emptySet() //Majd kelleni fog a count implementálásnál, itt jön be az N az N == count find search(...)-nél

PatternCallBasedDeffered.actualParametersTuple
A pattern XY(paremeter)-ből a parameter neveiből keresi ki a hozzájuk tartozó létrehozott PVariable-t, amit egy FlatTuple-be helyez (ez egy statikus tömb).

bindings
Set<Integer> A negativePatternCall-hoz tartozó binding listája, ez attól függ, hogy előte a hány változót kötöttek le extend-el.

PQuery.parameters
PatterImpl-ben VariableImpl típusú elemekből kapunk PParameter típusú objektumokat

boundParams = bindings -> azok amik benne vannak az actualParametersTuple-ben
PParameter lista, olyan paremétereket tartalmaz, ami meg fog jelenni a Match-ben és le van már kötve

adornment
A paremeter listán szereplő változókból azokat gyűjti ki amik PVariable típusú és benne van a bindings-ban

bindNone
bindings = [0,1,2]
adornment = [rob, part]
boundParams<PParameter> = [robotpart, robot]

bindOne
bindings = [0,1,2]
adornment = [rob, part]
boundParams<PParameter> = [robotpart, robot]

bindTwo
bindings = [0,1,2]
adornment = [rob, part]
boundParams<PParameter> = [robotpart, robot]
